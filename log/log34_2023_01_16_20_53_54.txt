[Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}, Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}, Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}, Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}, Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}, Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}, Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}, Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}, Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}, Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}, Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}, Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}, Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}, Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}, Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}, Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}, Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}, Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}, Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}, Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}]
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=5}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=4}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=2}]
Instance{bagTypeCount=3, itemTypeCount=15, bagCount=11, itemCount=20}
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=5}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=4}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=2}]
3
0,1
1,2
2,3
3,4
4,6
6,7
7,8
8,9
9,10
10,11
11,13
13,14
14,16
16,19
19,20
IloModel  {
IloMinimize  : (0.4*n_0 + 0.4*n_1 + 0.4*n_2 + 0.4*n_3 + 0.4*n_4 + 0.7*n_5 + 0.7*n_6 + 0.7*n_7 + 0.7*n_8 + 1.0*n_9 + 1.0*n_10)
IloRange bag_and_box0 : 1.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10) <= 1.0
IloRange bag_and_box1 : 1.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10) <= 1.0
IloRange bag_and_box2 : 1.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10) <= 1.0
IloRange bag_and_box3 : 1.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10) <= 1.0
IloRange bag_and_box4 : 1.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10) <= 1.0
IloRange bag_and_box5 : 1.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10) <= 1.0
IloRange bag_and_box6 : 1.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10) <= 1.0
IloRange bag_and_box7 : 1.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10) <= 1.0
IloRange bag_and_box8 : 1.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10) <= 1.0
IloRange bag_and_box9 : 1.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10) <= 1.0
IloRange bag_and_box10 : 1.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10) <= 1.0
IloRange bag_and_box11 : 1.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10) <= 1.0
IloRange bag_and_box12 : 1.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10) <= 1.0
IloRange bag_and_box13 : 1.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10) <= 1.0
IloRange bag_and_box14 : 1.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 + 1.0*s_14,10) <= 1.0
IloRange bag_and_box15 : 1.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10) <= 1.0
IloRange bag_and_box16 : 1.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10) <= 1.0
IloRange bag_and_box17 : 1.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10) <= 1.0
IloRange bag_and_box18 : 1.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10) <= 1.0
IloRange bag_and_box19 : 1.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10) <= 1.0
IloRange Volume_0 : -infinity <= (912000.0*s_0,0 + 2550000.0*s_1,0 + 6175000.0*s_2,0 + 476000.0*s_3,0 + 1224000.0*s_4,0 + 1224000.0*s_5,0 + 6175000.0*s_6,0 + 960000.0*s_7,0 + 540000.0*s_8,0 + 476000.0*s_9,0 + 648000.0*s_10,0 + 400000.0*s_11,0 + 400000.0*s_12,0 + 1584000.0*s_13,0 + 540000.0*s_14,0 + 540000.0*s_15,0 + 432000.0*s_16,0 + 432000.0*s_17,0 + 432000.0*s_18,0 + 1350000.0*s_19,0 - 6305299.284992639*n_0) <= 0.0
IloRange Volume_1 : -infinity <= (912000.0*s_0,1 + 2550000.0*s_1,1 + 6175000.0*s_2,1 + 476000.0*s_3,1 + 1224000.0*s_4,1 + 1224000.0*s_5,1 + 6175000.0*s_6,1 + 960000.0*s_7,1 + 540000.0*s_8,1 + 476000.0*s_9,1 + 648000.0*s_10,1 + 400000.0*s_11,1 + 400000.0*s_12,1 + 1584000.0*s_13,1 + 540000.0*s_14,1 + 540000.0*s_15,1 + 432000.0*s_16,1 + 432000.0*s_17,1 + 432000.0*s_18,1 + 1350000.0*s_19,1 - 6305299.284992639*n_1) <= 0.0
IloRange Volume_2 : -infinity <= (912000.0*s_0,2 + 2550000.0*s_1,2 + 6175000.0*s_2,2 + 476000.0*s_3,2 + 1224000.0*s_4,2 + 1224000.0*s_5,2 + 6175000.0*s_6,2 + 960000.0*s_7,2 + 540000.0*s_8,2 + 476000.0*s_9,2 + 648000.0*s_10,2 + 400000.0*s_11,2 + 400000.0*s_12,2 + 1584000.0*s_13,2 + 540000.0*s_14,2 + 540000.0*s_15,2 + 432000.0*s_16,2 + 432000.0*s_17,2 + 432000.0*s_18,2 + 1350000.0*s_19,2 - 6305299.284992639*n_2) <= 0.0
IloRange Volume_3 : -infinity <= (912000.0*s_0,3 + 2550000.0*s_1,3 + 6175000.0*s_2,3 + 476000.0*s_3,3 + 1224000.0*s_4,3 + 1224000.0*s_5,3 + 6175000.0*s_6,3 + 960000.0*s_7,3 + 540000.0*s_8,3 + 476000.0*s_9,3 + 648000.0*s_10,3 + 400000.0*s_11,3 + 400000.0*s_12,3 + 1584000.0*s_13,3 + 540000.0*s_14,3 + 540000.0*s_15,3 + 432000.0*s_16,3 + 432000.0*s_17,3 + 432000.0*s_18,3 + 1350000.0*s_19,3 - 6305299.284992639*n_3) <= 0.0
IloRange Volume_4 : -infinity <= (912000.0*s_0,4 + 2550000.0*s_1,4 + 6175000.0*s_2,4 + 476000.0*s_3,4 + 1224000.0*s_4,4 + 1224000.0*s_5,4 + 6175000.0*s_6,4 + 960000.0*s_7,4 + 540000.0*s_8,4 + 476000.0*s_9,4 + 648000.0*s_10,4 + 400000.0*s_11,4 + 400000.0*s_12,4 + 1584000.0*s_13,4 + 540000.0*s_14,4 + 540000.0*s_15,4 + 432000.0*s_16,4 + 432000.0*s_17,4 + 432000.0*s_18,4 + 1350000.0*s_19,4 - 6305299.284992639*n_4) <= 0.0
IloRange Volume_5 : -infinity <= (912000.0*s_0,5 + 2550000.0*s_1,5 + 6175000.0*s_2,5 + 476000.0*s_3,5 + 1224000.0*s_4,5 + 1224000.0*s_5,5 + 6175000.0*s_6,5 + 960000.0*s_7,5 + 540000.0*s_8,5 + 476000.0*s_9,5 + 648000.0*s_10,5 + 400000.0*s_11,5 + 400000.0*s_12,5 + 1584000.0*s_13,5 + 540000.0*s_14,5 + 540000.0*s_15,5 + 432000.0*s_16,5 + 432000.0*s_17,5 + 432000.0*s_18,5 + 1350000.0*s_19,5 - 1.1340839946075162E7*n_5) <= 0.0
IloRange Volume_6 : -infinity <= (912000.0*s_0,6 + 2550000.0*s_1,6 + 6175000.0*s_2,6 + 476000.0*s_3,6 + 1224000.0*s_4,6 + 1224000.0*s_5,6 + 6175000.0*s_6,6 + 960000.0*s_7,6 + 540000.0*s_8,6 + 476000.0*s_9,6 + 648000.0*s_10,6 + 400000.0*s_11,6 + 400000.0*s_12,6 + 1584000.0*s_13,6 + 540000.0*s_14,6 + 540000.0*s_15,6 + 432000.0*s_16,6 + 432000.0*s_17,6 + 432000.0*s_18,6 + 1350000.0*s_19,6 - 1.1340839946075162E7*n_6) <= 0.0
IloRange Volume_7 : -infinity <= (912000.0*s_0,7 + 2550000.0*s_1,7 + 6175000.0*s_2,7 + 476000.0*s_3,7 + 1224000.0*s_4,7 + 1224000.0*s_5,7 + 6175000.0*s_6,7 + 960000.0*s_7,7 + 540000.0*s_8,7 + 476000.0*s_9,7 + 648000.0*s_10,7 + 400000.0*s_11,7 + 400000.0*s_12,7 + 1584000.0*s_13,7 + 540000.0*s_14,7 + 540000.0*s_15,7 + 432000.0*s_16,7 + 432000.0*s_17,7 + 432000.0*s_18,7 + 1350000.0*s_19,7 - 1.1340839946075162E7*n_7) <= 0.0
IloRange Volume_8 : -infinity <= (912000.0*s_0,8 + 2550000.0*s_1,8 + 6175000.0*s_2,8 + 476000.0*s_3,8 + 1224000.0*s_4,8 + 1224000.0*s_5,8 + 6175000.0*s_6,8 + 960000.0*s_7,8 + 540000.0*s_8,8 + 476000.0*s_9,8 + 648000.0*s_10,8 + 400000.0*s_11,8 + 400000.0*s_12,8 + 1584000.0*s_13,8 + 540000.0*s_14,8 + 540000.0*s_15,8 + 432000.0*s_16,8 + 432000.0*s_17,8 + 432000.0*s_18,8 + 1350000.0*s_19,8 - 1.1340839946075162E7*n_8) <= 0.0
IloRange Volume_9 : -infinity <= (912000.0*s_0,9 + 2550000.0*s_1,9 + 6175000.0*s_2,9 + 476000.0*s_3,9 + 1224000.0*s_4,9 + 1224000.0*s_5,9 + 6175000.0*s_6,9 + 960000.0*s_7,9 + 540000.0*s_8,9 + 476000.0*s_9,9 + 648000.0*s_10,9 + 400000.0*s_11,9 + 400000.0*s_12,9 + 1584000.0*s_13,9 + 540000.0*s_14,9 + 540000.0*s_15,9 + 432000.0*s_16,9 + 432000.0*s_17,9 + 432000.0*s_18,9 + 1350000.0*s_19,9 - 1.9635004901018865E7*n_9) <= 0.0
IloRange Volume_10 : -infinity <= (912000.0*s_0,10 + 2550000.0*s_1,10 + 6175000.0*s_2,10 + 476000.0*s_3,10 + 1224000.0*s_4,10 + 1224000.0*s_5,10 + 6175000.0*s_6,10 + 960000.0*s_7,10 + 540000.0*s_8,10 + 476000.0*s_9,10 + 648000.0*s_10,10 + 400000.0*s_11,10 + 400000.0*s_12,10 + 1584000.0*s_13,10 + 540000.0*s_14,10 + 540000.0*s_15,10 + 432000.0*s_16,10 + 432000.0*s_17,10 + 432000.0*s_18,10 + 1350000.0*s_19,10 - 1.9635004901018865E7*n_10) <= 0.0
IloRange boxCut4,0 : 0.0 <= (1.0*s_4,0 - 1.0*s_5,0) <= infinity
IloRange boxCut4,1 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 - 1.0*s_5,1) <= infinity
IloRange boxCut4,2 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 - 1.0*s_5,2) <= infinity
IloRange boxCut4,3 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 - 1.0*s_5,3) <= infinity
IloRange boxCut4,4 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 - 1.0*s_5,4) <= infinity
IloRange boxCut4,5 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 - 1.0*s_5,5) <= infinity
IloRange boxCut4,6 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 - 1.0*s_5,6) <= infinity
IloRange boxCut4,7 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 - 1.0*s_5,7) <= infinity
IloRange boxCut4,8 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 - 1.0*s_5,8) <= infinity
IloRange boxCut4,9 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 - 1.0*s_5,9) <= infinity
IloRange boxCut4,10 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 - 1.0*s_5,10) <= infinity
IloRange boxCut11,0 : 0.0 <= (1.0*s_11,0 - 1.0*s_12,0) <= infinity
IloRange boxCut11,1 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 - 1.0*s_12,1) <= infinity
IloRange boxCut11,2 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 - 1.0*s_12,2) <= infinity
IloRange boxCut11,3 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 - 1.0*s_12,3) <= infinity
IloRange boxCut11,4 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 - 1.0*s_12,4) <= infinity
IloRange boxCut11,5 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 - 1.0*s_12,5) <= infinity
IloRange boxCut11,6 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 - 1.0*s_12,6) <= infinity
IloRange boxCut11,7 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 - 1.0*s_12,7) <= infinity
IloRange boxCut11,8 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 - 1.0*s_12,8) <= infinity
IloRange boxCut11,9 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 - 1.0*s_12,9) <= infinity
IloRange boxCut11,10 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 - 1.0*s_12,10) <= infinity
IloRange boxCut14,0 : 0.0 <= (1.0*s_14,0 - 1.0*s_15,0) <= infinity
IloRange boxCut14,1 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 - 1.0*s_15,1) <= infinity
IloRange boxCut14,2 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 - 1.0*s_15,2) <= infinity
IloRange boxCut14,3 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 - 1.0*s_15,3) <= infinity
IloRange boxCut14,4 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 - 1.0*s_15,4) <= infinity
IloRange boxCut14,5 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 - 1.0*s_15,5) <= infinity
IloRange boxCut14,6 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 - 1.0*s_15,6) <= infinity
IloRange boxCut14,7 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 - 1.0*s_15,7) <= infinity
IloRange boxCut14,8 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 - 1.0*s_15,8) <= infinity
IloRange boxCut14,9 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 - 1.0*s_15,9) <= infinity
IloRange boxCut14,10 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 + 1.0*s_14,10 - 1.0*s_15,10) <= infinity
IloRange boxCut16,0 : 0.0 <= (1.0*s_16,0 - 1.0*s_17,0) <= infinity
IloRange boxCut16,1 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 - 1.0*s_17,1) <= infinity
IloRange boxCut16,2 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 - 1.0*s_17,2) <= infinity
IloRange boxCut16,3 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 - 1.0*s_17,3) <= infinity
IloRange boxCut16,4 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 - 1.0*s_17,4) <= infinity
IloRange boxCut16,5 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 - 1.0*s_17,5) <= infinity
IloRange boxCut16,6 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 - 1.0*s_17,6) <= infinity
IloRange boxCut16,7 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 - 1.0*s_17,7) <= infinity
IloRange boxCut16,8 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 - 1.0*s_17,8) <= infinity
IloRange boxCut16,9 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 - 1.0*s_17,9) <= infinity
IloRange boxCut16,10 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 - 1.0*s_17,10) <= infinity
IloRange boxCut17,0 : 0.0 <= (1.0*s_17,0 - 1.0*s_18,0) <= infinity
IloRange boxCut17,1 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 - 1.0*s_18,1) <= infinity
IloRange boxCut17,2 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 - 1.0*s_18,2) <= infinity
IloRange boxCut17,3 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 - 1.0*s_18,3) <= infinity
IloRange boxCut17,4 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 - 1.0*s_18,4) <= infinity
IloRange boxCut17,5 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 - 1.0*s_18,5) <= infinity
IloRange boxCut17,6 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 - 1.0*s_18,6) <= infinity
IloRange boxCut17,7 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 - 1.0*s_18,7) <= infinity
IloRange boxCut17,8 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 - 1.0*s_18,8) <= infinity
IloRange boxCut17,9 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 - 1.0*s_18,9) <= infinity
IloRange boxCut17,10 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 - 1.0*s_18,10) <= infinity
IloRange bagCut_0,1 : 0.0 <= (1.0*n_0 - 1.0*n_1) <= infinity
IloRange bagCut_1,2 : 0.0 <= (1.0*n_1 - 1.0*n_2) <= infinity
IloRange bagCut_2,3 : 0.0 <= (1.0*n_2 - 1.0*n_3) <= infinity
IloRange bagCut_3,4 : 0.0 <= (1.0*n_3 - 1.0*n_4) <= infinity
IloRange bagCut_5,6 : 0.0 <= (1.0*n_5 - 1.0*n_6) <= infinity
IloRange bagCut_6,7 : 0.0 <= (1.0*n_6 - 1.0*n_7) <= infinity
IloRange bagCut_7,8 : 0.0 <= (1.0*n_7 - 1.0*n_8) <= infinity
IloRange bagCut_9,10 : 0.0 <= (1.0*n_9 - 1.0*n_10) <= infinity

}
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
CPXPARAM_Threads                                 1
!!Thread UP
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 1 time.
MIP Presolve eliminated 5 rows and 0 columns.
MIP Presolve modified 455 coefficients.
Reduced MIP has 89 rows, 231 columns, and 792 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.81 ticks)
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [10]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 9 columns.
MIP Presolve modified 13 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [11]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[11],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 32 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 4, 14, 16]  放进袋子  2  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 14, 16],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 7 columns.
MIP Presolve modified 90 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 71 rows, 73 columns, and 325 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.49 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.81 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.81 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.81 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [12, 19]  放进袋子  3  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[12, 19],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 8 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 28 rows, 31 columns, and 123 nonzeros.
Reduced MIP has 24 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.12 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.23 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.23 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.23 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 7]  放进袋子  4  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[3, 7],4
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 23 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 24 rows, 25 columns, and 100 nonzeros.
Reduced MIP has 18 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.15 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.24 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.24 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.24 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0],5
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 6 rows and 7 columns.
MIP Presolve modified 15 coefficients.
Aggregator did 8 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [5, 8, 13, 17]  放进袋子  6  袋子种类为1
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[5, 8, 13, 17],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 43 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 79 rows, 82 columns, and 385 nonzeros.
Reduced MIP has 69 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.49 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.82 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.83 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.83 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [6, 9]  放进袋子  7  袋子种类为1
patten : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[6, 9],7
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 1 columns.
MIP Presolve modified 19 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 25 rows, 28 columns, and 108 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (0.15 ticks)
Found incumbent of value 0.000000 after 0.01 sec. (0.25 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (0.25 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (0.25 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [15]  放进袋子  8  袋子种类为1
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[15],8
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 30 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [18]  放进袋子  9  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[18],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.02 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2]  放进袋子  10  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[2],10
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 8 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
Found incumbent of value 6.800000 after 0.06 sec. (1.62 ticks)
Probing time = 0.00 sec. (0.50 ticks)
Tried aggregator 1 time.
Reduced MIP has 89 rows, 231 columns, and 792 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.38 ticks)
Probing time = 0.00 sec. (0.49 ticks)
Clique table members: 495.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time = 0.00 sec. (0.77 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            6.8000        0.0000           100.00%
      0     0        1.3990     2        6.8000        1.3990      152   79.43%
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]
将物品  [2, 3, 6, 7, 8, 9, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 2]
pattern good
排序前[2, 3, 6, 7, 8, 9, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 6, 19, 7, 8, 3, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
118
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 19, 7, 8, 3, 9]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
将物品  [0, 1, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18]  放进袋子  10  袋子种类为2
patten : [1, 1, 0, 0, 2, 0, 0, 0, 0, 1, 2, 1, 2, 3, 0, 2]
pattern good
排序前[0, 1, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 13, 4, 5, 0, 10, 14, 15, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
52
——————————————————————————————————————————第3层——————————————————————————————————————
500
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=0, z=100, lx=120, ly=170, lz=60}
Position{type=4, x=120, y=0, z=100, lx=120, ly=170, lz=60}
Position{type=0, x=0, y=0, z=160, lx=240, ly=190, lz=20}
Position{type=9, x=250, y=0, z=0, lx=30, ly=120, lz=180}
Position{type=12, x=0, y=180, z=0, lx=120, ly=30, lz=150}
Position{type=12, x=120, y=180, z=0, lx=120, ly=30, lz=150}
Position{type=13, x=250, y=120, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=280, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=290, y=120, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=280, y=0, z=90, lx=50, ly=100, lz=80}
Position{type=10, x=240, y=120, z=120, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0]
将物品  [2, 6, 7, 8, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[2, 6, 7, 8, 19],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 30 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 118 rows, 121 columns, and 600 nonzeros.
Reduced MIP has 105 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Found incumbent of value 0.000000 after 0.01 sec. (1.14 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (1.15 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (1.15 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]  放进袋子  10  袋子种类为2
patten : [1, 1, 0, 1, 2, 0, 0, 0, 1, 1, 2, 1, 2, 3, 0, 2]
pattern good
排序前[0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 13, 4, 5, 0, 10, 14, 15, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
52
——————————————————————————————————————————第3层——————————————————————————————————————
500
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
500
——————————————————————————————————————————第14层——————————————————————————————————————
500
haha
Position{type=1, x=0, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=11, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=4, x=170, y=0, z=0, lx=170, ly=120, lz=60}
Position{type=4, x=170, y=120, z=0, lx=170, ly=120, lz=60}
Position{type=0, x=0, y=0, z=100, lx=190, ly=240, lz=20}
Position{type=9, x=220, y=0, z=60, lx=120, ly=180, lz=30}
Position{type=12, x=220, y=0, z=90, lx=120, ly=150, lz=30}
Position{type=12, x=0, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=3, x=0, y=180, z=60, lx=170, ly=70, lz=40}
Position{type=8, x=170, y=180, z=60, lx=170, ly=70, lz=40}
Position{type=13, x=150, y=250, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=240, y=250, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=340, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=340, y=120, z=0, lx=50, ly=80, lz=100}
Position{type=10, x=340, y=200, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
*     0+    0                            2.0000        1.3990            30.05%
      0     0        1.4970     2        2.0000       Cuts: 7      219   25.15%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [6, 7, 13, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[6, 7, 13, 19],5
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 2 rows and 4 columns.
MIP Presolve modified 81 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 73 rows, 75 columns, and 347 nonzeros.
Reduced MIP has 62 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.61 ticks)
Probing fixed 6 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 9 columns.
MIP Presolve modified 38 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 66 rows, 64 columns, and 292 nonzeros.
Reduced MIP has 51 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.48 ticks)
Probing fixed 10 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.11 ticks)
Tried aggregator 2 times.
MIP Presolve eliminated 6 rows and 11 columns.
MIP Presolve modified 16 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 58 rows, 51 columns, and 241 nonzeros.
Reduced MIP has 39 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.27 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (2.33 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (2.33 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_7,5 + 1.0*s_13,5 + 1.0*s_19,5 - 3.0*n_5) <= 0.0无法将物品 [6, 7, 13, 19]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 2, 0, 0, 1, 1, 1, 2, 0, 2, 3, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 1, 4, 5, 0, 10, 8, 14, 15, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
218
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
500
——————————————————————————————————————————第14层——————————————————————————————————————
500
——————————————————————————————————————————第15层——————————————————————————————————————
107
装不完，装了15
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 15.0*n_9) <= 0.0无法将物品 [2, 1, 4, 5, 0, 10, 8, 14, 15, 3, 9, 16, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.4970     2        2.0000      Cuts: 51      262   25.15%
      0     0        1.4970     2        2.0000       Cuts: 6      275   25.15%
      0     0        1.4970     2        2.0000       Cuts: 8      299   25.15%
      0     0        1.4970     2        2.0000       Cuts: 6      313   25.15%
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 8, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 9 columns.
MIP Presolve modified 100 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 67 rows, 67 columns, and 297 nonzeros.
Reduced MIP has 54 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.41 ticks)
Probing fixed 29 vars, tightened 24 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 3 vars, tightened 18 bounds.
Presolve time = 0.00 sec. (0.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.12 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.12 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_8,0 + 1.0*s_10,0 - 3.0*n_0) <= 0.0无法将物品 [1, 4, 8, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [7, 13, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7, 13, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 9 rows and 13 columns.
MIP Presolve modified 60 coefficients.
Aggregator did 10 substitutions.
Reduced MIP has 34 rows, 34 columns, and 133 nonzeros.
Reduced MIP has 24 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.35 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.48 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.48 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 2, 3, 0, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 0, 14, 15, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 14, 15, 3, 9, 16, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [1, 4, 10, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 10, 16, 17],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 11 columns.
MIP Presolve modified 161 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 106 rows, 103 columns, and 495 nonzeros.
Reduced MIP has 87 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.18 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.18 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.18 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7, 8, 13, 18]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7, 8, 13, 18],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 9 rows and 14 columns.
MIP Presolve modified 96 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 62 rows, 61 columns, and 264 nonzeros.
Reduced MIP has 48 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.63 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.86 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.87 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.87 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 2, 0, 1, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 19, 5, 0, 14, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 0, 14, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 8, 10, 13, 16, 17, 19]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 2, 1, 0]
pattern good
排序前[4, 8, 10, 13, 16, 17, 19]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 19, 4, 10, 8, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
4
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_19,0 + 1.0*s_4,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_16,0 + 1.0*s_17,0 - 6.0*n_0) <= 0.0无法将物品 [13, 19, 4, 10, 8, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 7, 18]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[5, 7, 18],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 34 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 47 rows, 49 columns, and 214 nonzeros.
Reduced MIP has 39 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.46 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.47 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.47 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 6, 9, 11, 12, 14, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 14, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
68
——————————————————————————————————————————第4层——————————————————————————————————————
386
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
293
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 14, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 9, 10, 11, 12, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 2, 0, 0, 3, 0, 0]
pattern good
排序前[3, 4, 9, 10, 11, 12, 16, 17, 18]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[4, 10, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
150
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
haha
Position{type=4, x=0, y=0, z=0, lx=120, ly=170, lz=60}
Position{type=9, x=0, y=0, z=60, lx=120, ly=180, lz=30}
Position{type=3, x=120, y=0, z=0, lx=70, ly=170, lz=40}
Position{type=8, x=120, y=0, z=40, lx=70, ly=170, lz=40}
Position{type=13, x=190, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=230, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=0, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=10, x=120, y=170, z=0, lx=100, ly=50, lz=80}
Position{type=10, x=220, y=120, z=0, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 5, 7, 8, 13]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 5, 7, 8, 13],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 32 rows and 41 columns.
MIP Presolve modified 161 coefficients.
Aggregator did 23 substitutions.
Reduced MIP has 65 rows, 59 columns, and 245 nonzeros.
Reduced MIP has 43 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.70 ticks)
Probing fixed 23 vars, tightened 30 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 1 vars, tightened 15 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 40 rows and 39 columns.
MIP Presolve modified 62 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 19 rows, 14 columns, and 56 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.12 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.55 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.55 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_5,1 + 1.0*s_7,1 + 1.0*s_8,1 + 1.0*s_13,1 - 4.0*n_1) <= 0.0无法将物品 [0, 5, 7, 8, 13]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 6, 14, 15, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2]
pattern good
排序前[1, 2, 6, 14, 15, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[2, 6, 1, 19, 14, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
63
——————————————————————————————————————————第4层——————————————————————————————————————
351
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_14,9 + 1.0*s_15,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 19, 14, 15]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 8, 10, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 2, 0, 0]
pattern good
排序前[4, 8, 10, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 10, 8, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
16
——————————————————————————————————————————第4层——————————————————————————————————————
33
——————————————————————————————————————————第5层——————————————————————————————————————
29
haha
Position{type=11, x=0, y=0, z=0, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=0, z=40, lx=120, ly=170, lz=60}
Position{type=9, x=120, y=0, z=40, lx=120, ly=180, lz=30}
Position{type=7, x=120, y=0, z=70, lx=150, ly=180, lz=20}
Position{type=13, x=0, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, x=120, y=180, z=0, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
将物品  [1, 7, 14, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 7, 14, 15, 18],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 8 rows and 16 columns.
MIP Presolve modified 173 coefficients.
Aggregator did 10 substitutions.
Reduced MIP has 102 rows, 97 columns, and 463 nonzeros.
Reduced MIP has 81 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.66 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.67 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.67 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 19, 5, 0, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
380
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 0, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 8, 10, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 2, 0, 0, 0]
pattern good
排序前[4, 7, 8, 10, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 4, 7, 10, 8, 14, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
6
——————————————————————————————————————————第4层——————————————————————————————————————
5
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_15,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 8, 14, 15]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [16, 17, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[16, 17, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 23 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 51 rows, 52 columns, and 234 nonzeros.
Reduced MIP has 42 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.23 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.43 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.44 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.44 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 5, 6, 9, 11, 12, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 5, 6, 9, 11, 12, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 0, 3, 9, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
324
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 0, 3, 9, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 10, 13, 14, 15, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 3, 0, 0]
pattern good
排序前[4, 10, 13, 14, 15, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 10, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
16
——————————————————————————————————————————第4层——————————————————————————————————————
31
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
17
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 10, 14, 15, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [7, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 26 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 26 rows, 28 columns, and 107 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.17 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.27 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.27 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 5, 6, 8, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 5, 6, 8, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 0, 8, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
283
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 0, 8, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
      0     2        1.4970    11        2.0000        1.4970      313   25.15%
Elapsed time = 2.30 sec. (14.14 ticks, tree = 0.01 MB, solutions = 2)
print s[i]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 8, 13, 14, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 3, 0, 0]
pattern good
排序前[4, 7, 8, 13, 14, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 8, 14, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
26
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [10, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[10, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 29 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 26 rows, 28 columns, and 107 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.17 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.27 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.27 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.27 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 5, 6, 9, 11, 12, 15]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 5, 6, 9, 11, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 0, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
304
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
251
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 0, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [4, 7, 13, 14, 15, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 2, 3, 0, 0]
pattern good
排序前[4, 7, 13, 14, 15, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
21
——————————————————————————————————————————第5层——————————————————————————————————————
31
——————————————————————————————————————————第6层——————————————————————————————————————
5
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 15, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [8, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 29 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 26 rows, 28 columns, and 107 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.17 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.27 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.27 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 5, 6, 9, 10, 11, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 5, 6, 9, 10, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 0, 10, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
304
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
73
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 0, 10, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 8, 13, 14, 15, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 2, 2, 0, 0]
pattern good
排序前[4, 7, 8, 13, 14, 15, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 8, 14, 15, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
6
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 15, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 9, 10, 18]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[3, 9, 10, 18],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 63 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 75 rows, 76 columns, and 354 nonzeros.
Reduced MIP has 63 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.48 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.78 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.78 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.78 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 5, 6, 11, 12, 19]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 2]
pattern good
排序前[0, 1, 2, 5, 6, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 19, 5, 0, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
63
——————————————————————————————————————————第4层——————————————————————————————————————
326
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_11,9 + 1.0*s_12,9 - 7.0*n_9) <= 0.0无法将物品 [2, 6, 1, 19, 5, 0, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [4, 7, 8, 9, 13, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 2, 0, 0]
pattern good
排序前[4, 7, 8, 9, 13, 14, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 8, 14, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
26
——————————————————————————————————————————第5层——————————————————————————————————————
24
——————————————————————————————————————————第6层——————————————————————————————————————
1
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 9, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 11, 12, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 1]
pattern good
排序前[1, 2, 11, 12, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 1, 19, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
32
——————————————————————————————————————————第5层——————————————————————————————————————
114
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 - 5.0*n_5) <= 0.0无法将物品 [2, 1, 19, 18, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 3, 5, 6, 10, 15]  放进袋子  6  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]
pattern good
排序前[0, 3, 5, 6, 10, 15]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 5, 0, 10, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
6
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_5,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_15,6 + 1.0*s_3,6 - 5.0*n_6) <= 0.0无法将物品 [6, 5, 0, 10, 15, 3]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [4, 7, 8, 9, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 8, 9, 11, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 8, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
42
——————————————————————————————————————————第5层——————————————————————————————————————
8
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_11,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 9, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 10, 12, 19]  放进袋子  5  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 10, 12, 19],5
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 107 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 30 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 41 rows and 42 columns.
MIP Presolve modified 103 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 69 rows, 69 columns, and 298 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.18 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.18 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,5 + 1.0*s_2,5 + 1.0*s_10,5 + 1.0*s_12,5 + 1.0*s_19,5 - 4.0*n_5) <= 0.0无法将物品 [1, 2, 10, 12, 19]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 3, 5, 6, 15, 16, 17, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 1]
pattern good
排序前[0, 3, 5, 6, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 5, 0, 15, 3, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
19
——————————————————————————————————————————第5层——————————————————————————————————————
50
——————————————————————————————————————————第6层——————————————————————————————————————
74
——————————————————————————————————————————第7层——————————————————————————————————————
36
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_5,6 + 1.0*s_0,6 + 1.0*s_15,6 + 1.0*s_3,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 - 7.0*n_6) <= 0.0无法将物品 [6, 5, 0, 15, 3, 16, 17, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [4, 7, 8, 9, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 8, 9, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 8, 14, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
11
——————————————————————————————————————————第5层——————————————————————————————————————
4
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_9,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 6, 10, 11, 12, 15, 16, 17, 18]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 0, 1, 3, 0, 1]
pattern good
排序前[0, 3, 6, 10, 11, 12, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 0, 10, 15, 3, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
36
——————————————————————————————————————————第5层——————————————————————————————————————
77
——————————————————————————————————————————第6层——————————————————————————————————————
99
——————————————————————————————————————————第7层——————————————————————————————————————
52
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 - 9.0*n_5) <= 0.0无法将物品 [6, 0, 10, 15, 3, 16, 17, 18, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 19]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 5, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 65 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 76 rows, 78 columns, and 364 nonzeros.
Reduced MIP has 65 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.49 ticks)
Probing fixed 24 vars, tightened 13 bounds.
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 1 vars, tightened 9 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 38 rows and 38 columns.
MIP Presolve modified 77 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 33 rows, 35 columns, and 128 nonzeros.
Reduced MIP has 29 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.42 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_19,6 - 3.0*n_6) <= 0.0无法将物品 [1, 2, 5, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 3, 0, 0]
pattern good
排序前[4, 7, 11, 13, 14, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
22
——————————————————————————————————————————第5层——————————————————————————————————————
31
——————————————————————————————————————————第6层——————————————————————————————————————
111
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_11,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 16, 17, 18, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 8, 19]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'zk_1,3' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.39 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.41 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.41 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [0, 1, 8, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 9, 10, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 2]
pattern good
排序前[2, 3, 5, 6, 9, 10, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 10, 15, 3, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
217
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 - 7.0*n_9) <= 0.0无法将物品 [2, 6, 5, 10, 15, 3, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0]
pattern good
排序前[4, 7, 11, 13, 14, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
22
——————————————————————————————————————————第5层——————————————————————————————————————
89
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 16, 17, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 12, 19]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 12, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'zk_1,3' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.46 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.47 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.47 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_12,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [0, 1, 12, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 8, 9, 10, 15, 18]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 2]
pattern good
排序前[2, 3, 5, 6, 8, 9, 10, 15, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 5, 10, 8, 15, 3, 9, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
217
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 10, 8, 15, 3, 9, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 3, 0, 0]
pattern good
排序前[4, 7, 13, 14, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
22
——————————————————————————————————————————第5层——————————————————————————————————————
29
——————————————————————————————————————————第6层——————————————————————————————————————
3
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 10, 19]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 10, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'zk_1,3' infeasible, all entries at implied bounds.
Presolve time = 0.01 sec. (0.41 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (0.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (0.42 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_10,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [0, 1, 10, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 8, 9, 11, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 2, 0, 1, 0, 0, 2]
pattern good
排序前[2, 3, 5, 6, 8, 9, 11, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 8, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
165
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 8, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0]
pattern good
排序前[4, 7, 13, 14, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
22
——————————————————————————————————————————第5层——————————————————————————————————————
8
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 8, 10]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 8, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 21 rows and 29 columns.
MIP Presolve modified 142 coefficients.
Aggregator did 16 substitutions.
Reduced MIP has 46 rows, 42 columns, and 174 nonzeros.
Reduced MIP has 29 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.52 ticks)
Probing fixed 17 vars, tightened 3 bounds.
Probing time = 0.00 sec. (0.06 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.97 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.97 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_10,1 - 3.0*n_1) <= 0.0无法将物品 [0, 1, 8, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 9, 11, 12, 15, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 1, 1, 2]
pattern good
排序前[2, 3, 5, 6, 9, 11, 12, 15, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 19, 5, 15, 3, 9, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 15, 3, 9, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 11, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 18 columns.
MIP Presolve modified 135 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 95 rows, 93 columns, and 434 nonzeros.
Reduced MIP has 77 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 8 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 10 columns.
MIP Presolve modified 67 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 89 rows, 81 columns, and 375 nonzeros.
Reduced MIP has 65 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.52 ticks)
Probing fixed 5 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 5 columns.
MIP Presolve modified 24 coefficients.
Reduced MIP has 89 rows, 76 columns, and 357 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.29 ticks)
Probing fixed 3 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Clique table members: 136.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.23 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    30                      0.0000       30         
      0     0        0.0000    30                    Cuts: 10       44         
      0     0        0.0000    30                    Cuts: 39       66         
      0     0        0.0000    30                    Cuts: 37       80         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       80    0.00%
Elapsed time = 0.02 sec. (7.08 ticks, tree = 0.01 MB, solutions = 1)

GUB cover cuts applied:  1
Clique cuts applied:  7
Cover cuts applied:  2
Implied bound cuts applied:  9
Flow cuts applied:  5
Mixed integer rounding cuts applied:  21
Zero-half cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.02 sec. (7.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (7.09 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 8, 10, 12, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 10, 12, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 7 columns.
MIP Presolve modified 152 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 107 rows, 107 columns, and 506 nonzeros.
Reduced MIP has 91 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.80 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.59 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.59 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_10,1 + 1.0*s_12,1 + 1.0*s_19,1 - 4.0*n_1) <= 0.0无法将物品 [1, 8, 10, 12, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 3, 0, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 5, 0, 15, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 15, 3, 9, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 9, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 9, 11, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
45
——————————————————————————————————————————第5层——————————————————————————————————————
11
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_11,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 9, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 10, 12]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 10, 12],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 7 columns.
MIP Presolve modified 98 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 70 rows, 71 columns, and 316 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.44 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.72 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.73 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.73 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 3, 1, 2]
pattern good
排序前[0, 2, 3, 5, 6, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 19, 5, 0, 15, 3, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 0, 15, 3, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 2, 0, 0, 0]
pattern good
排序前[4, 7, 11, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 15, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
10
——————————————————————————————————————————第5层——————————————————————————————————————
7
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_11,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 15, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 10, 12]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 3, 1, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 19, 5, 0, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 0, 3, 9, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 3, 8, 10, 12]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 8, 10, 12],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 8 columns.
MIP Presolve modified 153 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 105 rows, 104 columns, and 490 nonzeros.
Reduced MIP has 88 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.68 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.10 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.11 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.11 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 5, 6, 9, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 3, 1, 2]
pattern good
排序前[0, 2, 5, 6, 9, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 19, 5, 0, 15, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
162
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 19, 5, 0, 15, 9, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 3, 8, 10, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 8, 10, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 8 columns.
MIP Presolve modified 162 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 105 rows, 104 columns, and 490 nonzeros.
Reduced MIP has 88 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.68 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.48 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_3,1 + 1.0*s_8,1 + 1.0*s_10,1 + 1.0*s_19,1 - 4.0*n_1) <= 0.0无法将物品 [1, 3, 8, 10, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 6, 9, 12, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 3, 0, 2]
pattern good
排序前[0, 2, 5, 6, 9, 12, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 0, 15, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
126
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 9.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 15, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 11, 12, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
pattern good
排序前[3, 4, 7, 11, 12, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
45
——————————————————————————————————————————第5层——————————————————————————————————————
155
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_11,0 + 1.0*s_12,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 3, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 10, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 10, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 7 columns.
MIP Presolve modified 105 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 70 rows, 71 columns, and 316 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (0.48 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (1.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (1.03 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_10,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [1, 8, 10, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 6, 9, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 3, 0, 2]
pattern good
排序前[0, 2, 5, 6, 9, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 5, 0, 15, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 15, 9, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 5, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
排序前[4, 5, 7, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 5, 7, 14, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
9
——————————————————————————————————————————第4层——————————————————————————————————————
7
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 5, 7, 14, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 19]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Bound infeasibility column 'H'.
Presolve time = 0.00 sec. (0.22 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.23 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.23 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_19,1 - 2.0*n_1) <= 0.0无法将物品 [0, 1, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 6, 8, 9, 10, 11, 12, 15, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 2, 0, 1, 2, 0, 2]
pattern good
排序前[2, 3, 6, 8, 9, 10, 11, 12, 15, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 10, 8, 15, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
169
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 10, 8, 15, 3, 9, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 5, 7, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 5, 7, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 14 rows and 22 columns.
MIP Presolve modified 159 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 92 rows, 87 columns, and 409 nonzeros.
Reduced MIP has 71 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 18 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.24 ticks)
Cover probing fixed 3 vars, tightened 20 bounds.
Tried aggregator 3 times.
MIP Presolve eliminated 29 rows and 28 columns.
MIP Presolve modified 115 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 51 rows, 47 columns, and 189 nonzeros.
Reduced MIP has 32 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.52 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.65 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.65 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_7,0 + 1.0*s_13,0 + 1.0*s_14,0 - 4.0*n_0) <= 0.0无法将物品 [4, 5, 7, 13, 14]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 8]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 8],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 34 rows and 38 columns.
MIP Presolve modified 76 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 5 rows, 5 columns, and 14 nonzeros.
Reduced MIP has 2 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.24 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.25 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.26 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.26 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2, 3, 6, 9, 10, 11, 12, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 2, 0, 1, 3, 1, 2]
pattern good
排序前[2, 3, 6, 9, 10, 11, 12, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 19, 10, 15, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
176
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_19,9 + 1.0*s_10,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 11.0*n_9) <= 0.0无法将物品 [2, 6, 19, 10, 15, 3, 9, 16, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 9, 11, 12, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 2, 1, 0, 2, 0, 0]
pattern good
排序前[4, 7, 9, 11, 12, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 9, 16, 17, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
16
——————————————————————————————————————————第4层——————————————————————————————————————
42
——————————————————————————————————————————第5层——————————————————————————————————————
51
——————————————————————————————————————————第6层——————————————————————————————————————
89
——————————————————————————————————————————第7层——————————————————————————————————————
30
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 + 1.0*s_12,0 - 7.0*n_0) <= 0.0无法将物品 [13, 4, 7, 9, 16, 17, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 10, 14, 15]  放进袋子  5  袋子种类为1
patten : [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1]
pattern good
排序前[1, 3, 6, 10, 14, 15]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 1, 10, 14, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
49
——————————————————————————————————————————第5层——————————————————————————————————————
46
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_1,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 - 5.0*n_5) <= 0.0无法将物品 [6, 1, 10, 14, 15, 3]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 8, 18, 19]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1]
pattern good
排序前[0, 2, 5, 8, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 5, 0, 8, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
8
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_0,6 + 1.0*s_8,6 + 1.0*s_18,6 - 5.0*n_6) <= 0.0无法将物品 [2, 19, 5, 0, 8, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 15, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0]
pattern good
排序前[4, 7, 13, 14, 15, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 15, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
10
——————————————————————————————————————————第5层——————————————————————————————————————
7
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 15, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 9, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 8, 9, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
214
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
6
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 9.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 3, 9, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 2, 5, 6],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 20 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 81 rows, 85 columns, and 399 nonzeros.
Reduced MIP has 72 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.40 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.92 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.93 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.93 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 9, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0]
pattern good
排序前[4, 7, 9, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 9, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
29
——————————————————————————————————————————第5层——————————————————————————————————————
11
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 9, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 8, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 3, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
246
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 3, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 2, 5, 6, 15],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 29 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 118 rows, 121 columns, and 600 nonzeros.
Reduced MIP has 105 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Probing fixed 2 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 16 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 47 coefficients.
Reduced MIP has 118 rows, 119 columns, and 594 nonzeros.
Reduced MIP has 103 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.58 ticks)
Probing fixed 2 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Clique table members: 69.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.32 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    32                      0.0000       26         
      0     0        0.0000    32                     Cuts: 6       35         
      0     0        0.0000    32                    Cuts: 36       56         
      0     0        0.0000    32                    Cuts: 18       77         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       77    0.00%
Elapsed time = 0.03 sec. (11.77 ticks, tree = 0.01 MB, solutions = 1)

GUB cover cuts applied:  2
Cover cuts applied:  2
Implied bound cuts applied:  2
Flow cuts applied:  2
Mixed integer rounding cuts applied:  18
Zero-half cuts applied:  3
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.03 sec. (11.78 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (11.78 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
排序前[3, 4, 7, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 14, 3, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
29
——————————————————————————————————————————第5层——————————————————————————————————————
11
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 3, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 8, 9, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 8, 9, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
246
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 9, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 13, 14, 16],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 18 columns.
MIP Presolve modified 136 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 95 rows, 93 columns, and 434 nonzeros.
Reduced MIP has 77 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 8 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 10 columns.
MIP Presolve modified 59 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 88 rows, 81 columns, and 373 nonzeros.
Reduced MIP has 65 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.52 ticks)
Probing fixed 3 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 15 coefficients.
Reduced MIP has 88 rows, 78 columns, and 361 nonzeros.
Reduced MIP has 62 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.29 ticks)
Probing fixed 3 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Clique table members: 165.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.20 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    31                      0.0000       23         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       30    0.00%
Elapsed time = 0.01 sec. (6.91 ticks, tree = 0.01 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.01 sec. (6.92 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (6.92 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 3, 8, 9, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 8, 9, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 8, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
30
——————————————————————————————————————————第4层——————————————————————————————————————
94
——————————————————————————————————————————第5层——————————————————————————————————————
354
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 0, 8, 3, 9, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 10, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 10, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[2, 6, 1, 5, 10, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
447
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_15,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 10, 15]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 8, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
排序前[4, 7, 8, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 8, 14, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
9
——————————————————————————————————————————第5层——————————————————————————————————————
5
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 9, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 9, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
36
——————————————————————————————————————————第4层——————————————————————————————————————
126
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
214
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 0, 10, 3, 9, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 8, 9, 10, 11, 12, 17, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 1, 1, 0]
pattern good
排序前[0, 3, 8, 9, 10, 11, 12, 17, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 3, 9, 17, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
262
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
26
——————————————————————————————————————————第8层——————————————————————————————————————
4
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 3, 9, 17, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 15, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2]
pattern good
排序前[1, 2, 5, 6, 15, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 6, 1, 5, 15, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
486
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_18,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 15, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16, 19]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]
pattern good
排序前[4, 7, 13, 14, 16, 19]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 19, 4, 7, 14, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
4
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_19,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 19, 4, 7, 14, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 9, 10, 11, 12, 17, 18]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 0, 0]
pattern good
排序前[0, 3, 8, 9, 10, 11, 12, 17, 18]
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[0, 10, 8, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
18
——————————————————————————————————————————第4层——————————————————————————————————————
108
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
haha
Position{type=0, x=0, y=0, z=0, lx=240, ly=190, lz=20}
Position{type=9, x=0, y=0, z=20, lx=120, ly=180, lz=30}
Position{type=7, x=0, y=0, z=50, lx=150, ly=180, lz=20}
Position{type=3, x=0, y=0, z=70, lx=70, ly=170, lz=40}
Position{type=8, x=70, y=0, z=70, lx=170, ly=70, lz=40}
Position{type=13, x=70, y=70, z=70, lx=90, ly=120, lz=40}
Position{type=13, x=160, y=70, z=70, lx=90, ly=120, lz=40}
Position{type=10, x=150, y=0, z=20, lx=100, ly=80, lz=50}
Position{type=10, x=150, y=80, z=20, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 8, 9, 10, 11, 12, 17, 18]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 0, 0]
pattern good
排序前[0, 3, 8, 9, 10, 11, 12, 17, 18]
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[0, 10, 8, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
18
——————————————————————————————————————————第4层——————————————————————————————————————
108
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
haha
Position{type=0, x=0, y=0, z=0, lx=240, ly=190, lz=20}
Position{type=9, x=0, y=0, z=20, lx=120, ly=180, lz=30}
Position{type=7, x=0, y=0, z=50, lx=150, ly=180, lz=20}
Position{type=3, x=0, y=0, z=70, lx=70, ly=170, lz=40}
Position{type=8, x=70, y=0, z=70, lx=170, ly=70, lz=40}
Position{type=13, x=70, y=70, z=70, lx=90, ly=120, lz=40}
Position{type=13, x=160, y=70, z=70, lx=90, ly=120, lz=40}
Position{type=10, x=150, y=0, z=20, lx=100, ly=80, lz=50}
Position{type=10, x=150, y=80, z=20, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [1, 2, 5, 6, 15, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2]
pattern good
排序前[1, 2, 5, 6, 15, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[2, 6, 1, 19, 5, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
63
——————————————————————————————————————————第4层——————————————————————————————————————
281
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_15,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 19, 5, 15]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999996, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 8, 9, 10, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 8, 9, 10, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 0, 10, 8, 3, 9, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
214
——————————————————————————————————————————第6层——————————————————————————————————————
228
——————————————————————————————————————————第7层——————————————————————————————————————
122
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 3, 9, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 11, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 11, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 15, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
490
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_11,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 15, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 9, 10, 11, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 9, 10, 11, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 3, 9, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
36
——————————————————————————————————————————第4层——————————————————————————————————————
126
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 3, 9, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 8, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 8, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 8, 15, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
417
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 8, 15, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 8, 9, 10, 11, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 1, 0]
pattern good
排序前[0, 8, 9, 10, 11, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 9, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
246
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
54
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 9, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 6, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 3, 5, 6, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 15, 3, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
488
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 15, 3, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 9, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 9, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
36
——————————————————————————————————————————第4层——————————————————————————————————————
238
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_9,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 9, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 6, 8, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 3, 5, 6, 8, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 6, 1, 5, 8, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
415
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 8, 15, 3]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 8, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 8, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
112
——————————————————————————————————————————第5层——————————————————————————————————————
486
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 6, 9, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 3, 5, 6, 9, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 6, 1, 5, 15, 3, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
488
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 15, 3, 9]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000002, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 3, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
36
——————————————————————————————————————————第4层——————————————————————————————————————
238
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 3, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 8, 9, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 8, 9, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 6, 1, 5, 8, 15, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
415
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_9,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 8, 15, 9]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 8, 10, 11, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 2, 1, 0]
pattern good
排序前[0, 3, 8, 10, 11, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 10, 8, 3, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
16
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
246
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
54
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 10, 8, 3, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 9, 12, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 9, 12, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 15, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
488
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 15, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [4, 7, 8, 13, 14, 19]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]
pattern good
排序前[4, 7, 8, 13, 14, 19]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 19, 4, 7, 8, 14]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
4
装不完，装了3
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_19,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 - 5.0*n_0) <= 0.0无法将物品 [13, 19, 4, 7, 8, 14]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 5, 6, 9, 10, 15, 16]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]
pattern good
排序前[0, 3, 5, 6, 9, 10, 15, 16]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 5, 0, 10, 15, 3, 9, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
29
——————————————————————————————————————————第6层——————————————————————————————————————
16
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 - 7.0*n_5) <= 0.0无法将物品 [6, 5, 0, 10, 15, 3, 9, 16]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 11, 12, 17, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 1]
pattern good
排序前[1, 2, 11, 12, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 1, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
56
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_1,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [2, 1, 17, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [4, 7, 13, 14, 19]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 13, 14, 19],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 18 columns.
MIP Presolve modified 148 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 95 rows, 93 columns, and 434 nonzeros.
Reduced MIP has 77 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 18 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.25 ticks)
Cover probing fixed 7 vars, tightened 17 bounds.
Presolve time = 0.00 sec. (0.25 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (2.34 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (2.34 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_13,0 + 1.0*s_14,0 + 1.0*s_19,0 - 4.0*n_0) <= 0.0无法将物品 [4, 7, 13, 14, 19]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 6, 8, 9, 10, 15, 16, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 2, 0, 1]
pattern good
排序前[0, 3, 6, 8, 9, 10, 15, 16, 17]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 0, 10, 8, 15, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
57
——————————————————————————————————————————第7层——————————————————————————————————————
14
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 8.0*n_5) <= 0.0无法将物品 [6, 0, 10, 8, 15, 3, 9, 16, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 11, 12, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1]
pattern good
排序前[1, 2, 5, 11, 12, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 1, 5, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
74
——————————————————————————————————————————第5层——————————————————————————————————————
295
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [2, 1, 5, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0]
pattern good
排序前[0, 4, 7, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 4, 7, 0, 14, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
7
——————————————————————————————————————————第4层——————————————————————————————————————
6
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_14,0 + 1.0*s_15,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 14, 15]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 8, 9, 10, 11, 16, 17, 18]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 3, 0, 0]
pattern good
排序前[3, 8, 9, 10, 11, 16, 17, 18]
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[10, 8, 3, 9, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
144
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
haha
Position{type=9, x=0, y=0, z=0, lx=120, ly=180, lz=30}
Position{type=7, x=0, y=0, z=30, lx=150, ly=180, lz=20}
Position{type=3, x=0, y=0, z=50, lx=70, ly=170, lz=40}
Position{type=8, x=70, y=0, z=50, lx=70, ly=170, lz=40}
Position{type=13, x=150, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=190, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=230, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=150, y=120, z=0, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 2, 5, 6, 12, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2]
pattern good
排序前[1, 2, 5, 6, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 19, 5, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
63
——————————————————————————————————————————第4层——————————————————————————————————————
325
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 19, 5, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999996, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 18 columns.
MIP Presolve modified 96 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 58 rows, 57 columns, and 249 nonzeros.
Reduced MIP has 44 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.59 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.82 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.82 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.82 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 8, 9, 10, 11, 12, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 3, 1, 0]
pattern good
排序前[3, 8, 9, 10, 11, 12, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 10, 8, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
58
——————————————————————————————————————————第4层——————————————————————————————————————
230
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
488
——————————————————————————————————————————第8层——————————————————————————————————————
160
——————————————————————————————————————————第9层——————————————————————————————————————
36
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 9.0*n_1) <= 0.0无法将物品 [19, 10, 8, 3, 9, 16, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
排序前[0, 1, 2, 5, 6, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[2, 6, 1, 5, 0, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
300
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 0, 15]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 9, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 0, 0, 0]
pattern good
排序前[4, 7, 9, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 14, 15, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
7
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_9,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 15, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 8, 10, 11, 12, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 3, 1, 0]
pattern good
排序前[3, 8, 10, 11, 12, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 10, 8, 3, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
58
——————————————————————————————————————————第4层——————————————————————————————————————
230
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
441
——————————————————————————————————————————第8层——————————————————————————————————————
24
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 8.0*n_1) <= 0.0无法将物品 [19, 10, 8, 3, 16, 17, 18, 11, 12]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 5, 6]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 2, 5, 6],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 79 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 118 rows, 121 columns, and 595 nonzeros.
Reduced MIP has 105 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.79 ticks)
Probing fixed 2 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 28 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 52 coefficients.
Reduced MIP has 118 rows, 119 columns, and 588 nonzeros.
Reduced MIP has 103 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Probing fixed 0 vars, tightened 8 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 177.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.32 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    31                      0.0000       26         
      0     0        0.0000    31                    Cuts: 10       39         
      0     0        0.0000    31                    Cuts: 55       54         
      0     0        0.0000    31                    Cuts: 35       73         
      0     0        0.0000    31                    Cuts: 18       89         
      0     0        0.0000    31                    Cuts: 45      102         
      0     0        0.0000    31                    Cuts: 12      122         
      0     2        0.0000     9                      0.0000      122         
Elapsed time = 0.05 sec. (18.39 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  3
Clique cuts applied:  13
Cover cuts applied:  27
Implied bound cuts applied:  20
Flow cuts applied:  11
Mixed integer rounding cuts applied:  18
Zero-half cuts applied:  4
Gomory fractional cuts applied:  10

Root node processing (before b&c):
  Real time             =    0.05 sec. (18.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.06 sec. (30.17 ticks)
  Sync time (average)   =    0.02 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.11 sec. (48.48 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,9 + 1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_6,9 - 4.0*n_9) <= 0.0无法将物品 [0, 1, 2, 5, 6]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
排序前[0, 4, 7, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 0, 14, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
11
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_14,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 14, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 8, 9, 10, 11, 12, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 1, 0]
pattern good
排序前[3, 8, 9, 10, 11, 12, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 10, 8, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
58
——————————————————————————————————————————第4层——————————————————————————————————————
230
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
488
——————————————————————————————————————————第8层——————————————————————————————————————
174
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=9, x=0, y=0, z=60, lx=180, ly=120, lz=30}
Position{type=7, x=0, y=0, z=90, lx=180, ly=150, lz=20}
Position{type=3, x=0, y=150, z=0, lx=170, ly=40, lz=70}
Position{type=8, x=0, y=150, z=70, lx=170, ly=70, lz=40}
Position{type=13, x=180, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=220, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=180, y=120, z=0, lx=80, ly=100, lz=50}
Position{type=10, x=180, y=120, z=50, lx=80, ly=100, lz=50}
needToSolve=true needToAddCut=false
将物品  [1, 2, 5, 6, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 11, 12, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 1, 1, 1, 0, 0]
pattern good
排序前[4, 7, 11, 12, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 14, 16, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
40
——————————————————————————————————————————第5层——————————————————————————————————————
190
——————————————————————————————————————————第6层——————————————————————————————————————
7
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_11,0 + 1.0*s_12,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 16, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 9, 10, 15]  放进袋子  5  袋子种类为1
patten : [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1]
pattern good
排序前[0, 1, 2, 9, 10, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 1, 0, 10, 15, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
5
——————————————————————————————————————————第4层——————————————————————————————————————
6
——————————————————————————————————————————第5层——————————————————————————————————————
4
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_1,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_9,5 - 5.0*n_5) <= 0.0无法将物品 [2, 1, 0, 10, 15, 9]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [3, 5, 6, 8, 17, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 1, 1]
pattern good
排序前[3, 5, 6, 8, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 19, 5, 8, 3, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
46
——————————————————————————————————————————第6层——————————————————————————————————————
32
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_3,6 + 1.0*s_17,6 + 1.0*s_18,6 - 6.0*n_6) <= 0.0无法将物品 [6, 19, 5, 8, 3, 17, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 8, 11, 12, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 8, 11, 12, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 8, 14, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
61
——————————————————————————————————————————第5层——————————————————————————————————————
8
——————————————————————————————————————————第6层——————————————————————————————————————
6
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_11,0 + 1.0*s_12,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 9, 10, 15, 16, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 2, 0, 1]
pattern good
排序前[0, 2, 5, 9, 10, 15, 16, 17]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 5, 0, 10, 15, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
25
——————————————————————————————————————————第6层——————————————————————————————————————
64
——————————————————————————————————————————第7层——————————————————————————————————————
31
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 7.0*n_5) <= 0.0无法将物品 [2, 5, 0, 10, 15, 9, 16, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 3, 6, 18, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 98 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 31 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 43 rows and 44 columns.
MIP Presolve modified 112 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 66 rows, 66 columns, and 283 nonzeros.
Reduced MIP has 56 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.44 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.17 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_3,6 + 1.0*s_6,6 + 1.0*s_18,6 + 1.0*s_19,6 - 4.0*n_6) <= 0.0无法将物品 [1, 3, 6, 18, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 8, 9, 10, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]
pattern good
排序前[1, 3, 8, 9, 10, 13]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[1, 13, 10, 8, 3, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
3
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
4
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_3,0 + 1.0*s_9,0 - 5.0*n_0) <= 0.0无法将物品 [1, 13, 10, 8, 3, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 11, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]
pattern good
排序前[4, 5, 6, 7, 11, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 4, 5, 7, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
36
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_7,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [6, 19, 4, 5, 7, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 12, 14, 15, 16, 17, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 0, 1]
pattern good
排序前[0, 2, 12, 14, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 14, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
18
——————————————————————————————————————————第4层——————————————————————————————————————
52
——————————————————————————————————————————第5层——————————————————————————————————————
225
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
haha
Position{type=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=12, x=190, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=12, x=220, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=13, x=190, y=120, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=230, y=120, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=250, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=190, y=120, z=90, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 9, 10, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 9, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 11 rows and 17 columns.
MIP Presolve modified 148 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 94 rows, 91 columns, and 415 nonzeros.
Reduced MIP has 75 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.62 ticks)
Probing fixed 24 vars, tightened 22 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 1 vars, tightened 49 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 51 rows and 45 columns.
MIP Presolve modified 82 coefficients.
Reduced MIP has 43 rows, 46 columns, and 164 nonzeros.
Reduced MIP has 38 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.21 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.75 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.75 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_9,0 + 1.0*s_10,0 + 1.0*s_13,0 - 4.0*n_0) <= 0.0无法将物品 [1, 3, 9, 10, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 8, 11, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1]
pattern good
排序前[4, 5, 6, 8, 11, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 4, 5, 8, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
70
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_8,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [6, 19, 4, 5, 8, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 12, 14, 15, 16, 17, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 3, 0, 1]
pattern good
排序前[0, 2, 7, 12, 14, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 7, 0, 14, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
16
——————————————————————————————————————————第4层——————————————————————————————————————
43
——————————————————————————————————————————第5层——————————————————————————————————————
108
——————————————————————————————————————————第6层——————————————————————————————————————
158
——————————————————————————————————————————第7层——————————————————————————————————————
116
——————————————————————————————————————————第8层——————————————————————————————————————
18
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_12,6 - 8.0*n_6) <= 0.0无法将物品 [2, 7, 0, 14, 15, 16, 17, 18, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 8, 9, 10, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 9, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 11 rows and 17 columns.
MIP Presolve modified 153 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 94 rows, 91 columns, and 415 nonzeros.
Reduced MIP has 75 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.64 ticks)
Probing fixed 57 vars, tightened 47 bounds.
Probing time = 0.00 sec. (0.21 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.52 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.52 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_8,0 + 1.0*s_9,0 + 1.0*s_10,0 + 1.0*s_13,0 - 4.0*n_0) <= 0.0无法将物品 [1, 8, 9, 10, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 6, 7, 11, 14]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]
pattern good
排序前[0, 3, 4, 6, 7, 11, 14]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 4, 7, 0, 14, 3, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
25
——————————————————————————————————————————第5层——————————————————————————————————————
64
——————————————————————————————————————————第6层——————————————————————————————————————
4
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [6, 4, 7, 0, 14, 3, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 5, 12, 15, 16, 17, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 1]
pattern good
排序前[2, 5, 12, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 5, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
100
——————————————————————————————————————————第6层——————————————————————————————————————
60
——————————————————————————————————————————第7层——————————————————————————————————————
60
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_12,6 - 7.0*n_6) <= 0.0无法将物品 [2, 19, 5, 15, 16, 17, 18, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 1, 9, 10, 13]  放进袋子  0  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 9, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 20 rows and 31 columns.
MIP Presolve modified 253 coefficients.
Aggregator did 17 substitutions.
Reduced MIP has 83 rows, 75 columns, and 342 nonzeros.
Reduced MIP has 59 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.68 ticks)
Probing fixed 25 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.18 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.48 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_9,0 + 1.0*s_10,0 + 1.0*s_13,0 - 4.0*n_0) <= 0.0无法将物品 [0, 1, 9, 10, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 4, 6, 7, 11, 16, 17, 18]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 3, 0, 1]
pattern good
排序前[3, 4, 6, 7, 11, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 4, 7, 3, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
39
——————————————————————————————————————————第5层——————————————————————————————————————
116
——————————————————————————————————————————第6层——————————————————————————————————————
411
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [6, 4, 7, 3, 16, 17, 18, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 5, 8, 12, 14, 15, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 1, 1]
pattern good
排序前[2, 5, 8, 12, 14, 15, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 5, 8, 14, 15, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
54
——————————————————————————————————————————第5层——————————————————————————————————————
80
——————————————————————————————————————————第6层——————————————————————————————————————
34
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 19, 5, 8, 14, 15, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 9, 10, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 9, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 11 rows and 16 columns.
MIP Presolve modified 97 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 59 rows, 58 columns, and 248 nonzeros.
Reduced MIP has 45 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)
Probing fixed 32 vars, tightened 34 bounds.
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 1 vars, tightened 9 bounds.
Presolve time = 0.00 sec. (0.13 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.09 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_9,0 + 1.0*s_10,0 + 1.0*s_13,0 - 3.0*n_0) <= 0.0无法将物品 [1, 9, 10, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 6, 7, 8, 11, 12]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1]
pattern good
排序前[0, 3, 4, 6, 7, 8, 11, 12]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 4, 7, 0, 8, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
198
——————————————————————————————————————————第6层——————————————————————————————————————
3
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_11,5 + 1.0*s_12,5 - 7.0*n_5) <= 0.0无法将物品 [6, 4, 7, 0, 8, 3, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 5, 14, 15, 16, 17, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 3, 1, 1]
pattern good
排序前[2, 5, 14, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 5, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
74
——————————————————————————————————————————第5层——————————————————————————————————————
124
——————————————————————————————————————————第6层——————————————————————————————————————
68
——————————————————————————————————————————第7层——————————————————————————————————————
6
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 - 7.0*n_6) <= 0.0无法将物品 [2, 19, 5, 14, 15, 16, 17, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 8, 9, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 8, 9, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 11 rows and 17 columns.
MIP Presolve modified 149 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 94 rows, 91 columns, and 415 nonzeros.
Reduced MIP has 75 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.63 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.46 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.46 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_8,0 + 1.0*s_9,0 + 1.0*s_13,0 - 4.0*n_0) <= 0.0无法将物品 [1, 3, 8, 9, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 6, 7, 11, 12, 14]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 0, 1, 0, 0, 1]
pattern good
排序前[0, 4, 6, 7, 11, 12, 14]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 4, 7, 0, 14, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
43
——————————————————————————————————————————第5层——————————————————————————————————————
171
——————————————————————————————————————————第6层——————————————————————————————————————
6
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_14,5 + 1.0*s_11,5 + 1.0*s_12,5 - 6.0*n_5) <= 0.0无法将物品 [6, 4, 7, 0, 14, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 5, 10, 15, 16, 17, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 3, 1, 1]
pattern good
排序前[2, 5, 10, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 5, 10, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
48
——————————————————————————————————————————第5层——————————————————————————————————————
78
——————————————————————————————————————————第6层——————————————————————————————————————
32
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_10,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 - 7.0*n_6) <= 0.0无法将物品 [2, 19, 5, 10, 15, 16, 17, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 9, 13, 16]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 9, 13, 16],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 11 rows and 16 columns.
MIP Presolve modified 136 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 96 rows, 94 columns, and 431 nonzeros.
Reduced MIP has 78 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.65 ticks)
Probing fixed 17 vars, tightened 22 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 4 vars, tightened 5 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 15 rows and 21 columns.
MIP Presolve modified 100 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 76 rows, 68 columns, and 326 nonzeros.
Reduced MIP has 54 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.44 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.22 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.22 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_9,0 + 1.0*s_13,0 + 1.0*s_16,0 - 4.0*n_0) <= 0.0无法将物品 [1, 3, 9, 13, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 6, 7, 10, 11, 12, 14, 17, 18]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2, 0, 1, 2, 0, 1]
pattern good
排序前[0, 6, 7, 10, 11, 12, 14, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 7, 0, 10, 14, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
32
——————————————————————————————————————————第5层——————————————————————————————————————
43
——————————————————————————————————————————第6层——————————————————————————————————————
38
——————————————————————————————————————————第7层——————————————————————————————————————
37
——————————————————————————————————————————第8层——————————————————————————————————————
2
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 - 8.0*n_5) <= 0.0无法将物品 [6, 7, 0, 10, 14, 17, 18, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 4, 5, 8, 15, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
pattern good
排序前[2, 4, 5, 8, 15, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[2, 19, 4, 5, 8, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
32
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_15,6 - 5.0*n_6) <= 0.0无法将物品 [2, 19, 4, 5, 8, 15]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 9, 13, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 3, 0, 0]
pattern good
排序前[1, 9, 13, 16, 17, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[1, 13, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
7
——————————————————————————————————————————第4层——————————————————————————————————————
7
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 5.0*n_0) <= 0.0无法将物品 [1, 13, 9, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 6, 7, 10, 11, 12, 14, 15]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0, 2, 0, 0, 1]
pattern good
排序前[0, 3, 6, 7, 10, 11, 12, 14, 15]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 7, 0, 10, 14, 15, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
32
——————————————————————————————————————————第5层——————————————————————————————————————
47
——————————————————————————————————————————第6层——————————————————————————————————————
49
——————————————————————————————————————————第7层——————————————————————————————————————
18
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_11,5 + 1.0*s_12,5 - 8.0*n_5) <= 0.0无法将物品 [6, 7, 0, 10, 14, 15, 3, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 4, 5, 8, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 4, 5, 8, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 4 columns.
MIP Presolve modified 107 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 115 rows, 115 columns, and 573 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.77 ticks)
Probing fixed 6 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 13 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 3 rows and 8 columns.
MIP Presolve modified 67 coefficients.
Reduced MIP has 112 rows, 107 columns, and 532 nonzeros.
Reduced MIP has 91 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.54 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Clique table members: 228.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.27 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       23         
      0     0        0.0000    23                    Cuts: 13       41         
      0     0        0.0000    23                    Cuts: 38       70         
      0     0        0.0000    23                     Cuts: 8       79         
      0     0        0.0000    23                    Cuts: 31       97         
      0     0        cutoff                                         97         
Elapsed time = 0.03 sec. (16.56 ticks, tree = 0.01 MB, solutions = 0)

Clique cuts applied:  5
Cover cuts applied:  1
Implied bound cuts applied:  3
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.03 sec. (16.56 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (16.56 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_19,6 - 4.0*n_6) <= 0.0无法将物品 [2, 4, 5, 8, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [3, 7, 10, 11, 12, 13, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 1, 1, 2, 0, 0]
pattern good
排序前[3, 7, 10, 11, 12, 13, 14, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 7, 10, 14, 3, 16, 17, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
52
——————————————————————————————————————————第5层——————————————————————————————————————
107
——————————————————————————————————————————第6层——————————————————————————————————————
76
——————————————————————————————————————————第7层——————————————————————————————————————
23
——————————————————————————————————————————第8层——————————————————————————————————————
2
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 + 1.0*s_12,0 - 8.0*n_0) <= 0.0无法将物品 [13, 7, 10, 14, 3, 16, 17, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 6, 8, 15, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
pattern good
排序前[0, 4, 6, 8, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[6, 19, 4, 0, 8, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
4
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 - 5.0*n_5) <= 0.0无法将物品 [6, 19, 4, 0, 8, 15]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 9, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 5, 9, 18],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 98 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 30 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 42 rows and 43 columns.
MIP Presolve modified 123 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 68 rows, 68 columns, and 292 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.18 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.18 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_9,6 + 1.0*s_18,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 5, 9, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]
将物品  [3, 7, 10, 11, 12, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 1, 1, 1, 0, 0]
pattern good
排序前[3, 7, 10, 11, 12, 13, 14, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 7, 10, 14, 3, 16, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
52
——————————————————————————————————————————第5层——————————————————————————————————————
107
——————————————————————————————————————————第6层——————————————————————————————————————
80
——————————————————————————————————————————第7层——————————————————————————————————————
23
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_11,0 + 1.0*s_12,0 - 7.0*n_0) <= 0.0无法将物品 [13, 7, 10, 14, 3, 16, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 5, 6, 8, 15, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1]
pattern good
排序前[0, 4, 5, 6, 8, 15, 17]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 4, 5, 0, 8, 15, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
6
——————————————————————————————————————————第5层——————————————————————————————————————
20
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_17,5 - 6.0*n_5) <= 0.0无法将物品 [6, 4, 5, 0, 8, 15, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 9, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 9, 18, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 98 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 31 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 43 rows and 44 columns.
MIP Presolve modified 112 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 66 rows, 66 columns, and 283 nonzeros.
Reduced MIP has 56 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.14 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.14 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_9,6 + 1.0*s_18,6 + 1.0*s_19,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 9, 18, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 13, 14, 16]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 7, 13, 14, 16],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 21 rows and 26 columns.
MIP Presolve modified 139 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 84 rows, 82 columns, and 366 nonzeros.
Reduced MIP has 66 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.86 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.42 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_13,0 + 1.0*s_14,0 + 1.0*s_16,0 - 4.0*n_0) <= 0.0无法将物品 [1, 7, 13, 14, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 6, 8, 9, 15, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1]
pattern good
排序前[0, 4, 6, 8, 9, 15, 17]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 4, 0, 8, 15, 9, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
30
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_17,5 - 6.0*n_5) <= 0.0无法将物品 [6, 4, 0, 8, 15, 9, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 10, 11, 12, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 2, 0, 0, 1, 1, 1]
pattern good
排序前[2, 3, 5, 10, 11, 12, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 5, 10, 3, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
42
——————————————————————————————————————————第5层——————————————————————————————————————
28
——————————————————————————————————————————第6层——————————————————————————————————————
4
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_10,6 + 1.0*s_3,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 7.0*n_6) <= 0.0无法将物品 [2, 19, 5, 10, 3, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000004, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 13, 16]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 7, 13, 16],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 21 rows and 26 columns.
MIP Presolve modified 89 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 47 rows, 46 columns, and 186 nonzeros.
Reduced MIP has 33 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.81 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.81 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_13,0 + 1.0*s_16,0 - 3.0*n_0) <= 0.0无法将物品 [1, 7, 13, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 6, 8, 9, 17, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1]
pattern good
排序前[0, 4, 6, 8, 9, 17, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 19, 4, 0, 8, 9, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
8
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_17,5 - 6.0*n_5) <= 0.0无法将物品 [6, 19, 4, 0, 8, 9, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 10, 11, 12, 14, 15, 18]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 2, 0, 2, 1, 0, 1]
pattern good
排序前[2, 3, 5, 10, 11, 12, 14, 15, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 5, 10, 14, 15, 3, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
21
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
80
——————————————————————————————————————————第6层——————————————————————————————————————
115
——————————————————————————————————————————第7层——————————————————————————————————————
229
——————————————————————————————————————————第8层——————————————————————————————————————
82
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_10,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_3,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 8.0*n_6) <= 0.0无法将物品 [2, 5, 10, 14, 15, 3, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 13]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 7, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasible column 'z_1'.
Presolve time = 0.00 sec. (0.19 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.20 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.20 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_13,0 - 2.0*n_0) <= 0.0无法将物品 [1, 7, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 6, 8, 9, 10, 16, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 2, 0, 1]
pattern good
排序前[0, 3, 4, 6, 8, 9, 10, 16, 17]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 4, 0, 10, 8, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
28
——————————————————————————————————————————第6层——————————————————————————————————————
53
——————————————————————————————————————————第7层——————————————————————————————————————
30
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 8.0*n_5) <= 0.0无法将物品 [6, 4, 0, 10, 8, 3, 9, 16, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 5, 11, 12, 14, 15, 18, 19]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 1, 1, 1]
pattern good
排序前[2, 5, 11, 12, 14, 15, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 5, 14, 15, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
74
——————————————————————————————————————————第5层——————————————————————————————————————
132
——————————————————————————————————————————第6层——————————————————————————————————————
102
——————————————————————————————————————————第7层——————————————————————————————————————
24
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_5,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 7.0*n_6) <= 0.0无法将物品 [2, 19, 5, 14, 15, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [3, 7, 8, 10, 11, 12, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0, 2, 0, 0]
pattern good
排序前[3, 7, 8, 10, 11, 12, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 7, 10, 8, 3, 16, 17, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
40
——————————————————————————————————————————第5层——————————————————————————————————————
73
——————————————————————————————————————————第6层——————————————————————————————————————
32
——————————————————————————————————————————第7层——————————————————————————————————————
11
——————————————————————————————————————————第8层——————————————————————————————————————
2
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 + 1.0*s_12,0 - 8.0*n_0) <= 0.0无法将物品 [13, 7, 10, 8, 3, 16, 17, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2]  放进袋子  1  袋子种类为0
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'c1':  0  = -1.
Presolve time = 0.00 sec. (0.01 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.01 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.01 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,1 + 0.0*n_1) <= 0.0无法将物品 [2]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 9, 14, 15]  放进袋子  2  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 9, 14, 15],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 9 columns.
MIP Presolve modified 113 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 72 rows, 71 columns, and 324 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.49 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.77 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.78 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.78 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 4, 5, 6, 18, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
pattern good
排序前[0, 4, 5, 6, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 19, 4, 5, 0, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
20
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_18,5 - 5.0*n_5) <= 0.0无法将物品 [6, 19, 4, 5, 0, 18]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, -0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 8, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0]
pattern good
排序前[4, 7, 8, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 4, 7, 8, 14, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
6
——————————————————————————————————————————第4层——————————————————————————————————————
7
——————————————————————————————————————————第5层——————————————————————————————————————
1
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_15,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 8, 14, 15]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 5, 6, 11, 12, 16, 17, 18]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 3, 0, 1]
pattern good
排序前[0, 3, 5, 6, 11, 12, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 5, 0, 3, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
36
——————————————————————————————————————————第5层——————————————————————————————————————
125
——————————————————————————————————————————第6层——————————————————————————————————————
420
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
353
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 - 8.0*n_5) <= 0.0无法将物品 [6, 5, 0, 3, 16, 17, 18, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 9, 10, 19]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 9, 10, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 93 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 30 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 41 rows and 42 columns.
MIP Presolve modified 96 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 69 rows, 69 columns, and 298 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.17 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_9,6 + 1.0*s_10,6 + 1.0*s_19,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 9, 10, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [3, 4, 7, 9, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
pattern good
排序前[3, 4, 7, 9, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 14, 3, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
44
——————————————————————————————————————————第5层——————————————————————————————————————
20
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_9,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 14, 3, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 6, 15, 16, 19]  放进袋子  5  袋子种类为1
patten : [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 6, 15, 16, 19],5
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 98 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 30 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 41 rows and 42 columns.
MIP Presolve modified 103 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 69 rows, 69 columns, and 298 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.17 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,5 + 1.0*s_6,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_19,5 - 4.0*n_5) <= 0.0无法将物品 [1, 6, 15, 16, 19]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 8, 10, 11, 12, 17, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 2, 0, 0, 2, 0, 1]
pattern good
排序前[0, 2, 5, 8, 10, 11, 12, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 5, 0, 10, 8, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
29
——————————————————————————————————————————第5层——————————————————————————————————————
120
——————————————————————————————————————————第6层——————————————————————————————————————
397
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_8,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 8.0*n_6) <= 0.0无法将物品 [2, 5, 0, 10, 8, 17, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 11]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 12 columns.
MIP Presolve modified 94 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 67 rows, 66 columns, and 297 nonzeros.
Reduced MIP has 53 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.46 ticks)
Probing fixed 24 vars, tightened 20 bounds.
Probing time = 0.00 sec. (0.10 ticks)
Cover probing fixed 4 vars, tightened 22 bounds.
Presolve time = 0.00 sec. (0.10 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.20 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.20 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_11,0 - 3.0*n_0) <= 0.0无法将物品 [1, 4, 5, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 6, 8, 12, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 2, 3, 1, 1]
pattern good
排序前[3, 6, 8, 12, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 8, 14, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
82
——————————————————————————————————————————第6层——————————————————————————————————————
76
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_12,5 - 9.0*n_5) <= 0.0无法将物品 [6, 19, 8, 14, 15, 3, 16, 17, 18, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 9, 10, 13]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1]
pattern good
排序前[0, 2, 7, 9, 10, 13]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[2, 13, 7, 0, 10, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
9
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
1
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_9,6 - 5.0*n_6) <= 0.0无法将物品 [2, 13, 7, 0, 10, 9]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 4, 5]  放进袋子  0  袋子种类为0
patten : [1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 4, 5],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 15 rows and 25 columns.
MIP Presolve modified 167 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 55 rows, 49 columns, and 225 nonzeros.
Reduced MIP has 37 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.57 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.94 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.94 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_5,0 - 3.0*n_0) <= 0.0无法将物品 [0, 1, 4, 5]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 6, 8, 11, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 2, 3, 1, 1]
pattern good
排序前[3, 6, 8, 11, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 8, 14, 15, 3, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
82
——————————————————————————————————————————第6层——————————————————————————————————————
76
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 - 9.0*n_5) <= 0.0无法将物品 [6, 19, 8, 14, 15, 3, 16, 17, 18, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 7, 9, 10, 12, 13]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1]
pattern good
排序前[2, 7, 9, 10, 12, 13]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 10, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
13
——————————————————————————————————————————第5层——————————————————————————————————————
34
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_10,6 + 1.0*s_9,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [2, 13, 7, 10, 9, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 9]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 13 columns.
MIP Presolve modified 100 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 65 rows, 63 columns, and 283 nonzeros.
Reduced MIP has 50 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.42 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.69 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.70 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.70 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 6, 7, 8, 11, 14, 15, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 1]
pattern good
排序前[3, 6, 7, 8, 11, 14, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 7, 8, 14, 15, 3, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
18
——————————————————————————————————————————第5层——————————————————————————————————————
24
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [6, 19, 7, 8, 14, 15, 3, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 10, 12, 13, 16, 17, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 1]
pattern good
排序前[0, 2, 10, 12, 13, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 0, 10, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
19
——————————————————————————————————————————第5层——————————————————————————————————————
46
——————————————————————————————————————————第6层——————————————————————————————————————
84
——————————————————————————————————————————第7层——————————————————————————————————————
48
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_12,6 - 7.0*n_6) <= 0.0无法将物品 [2, 13, 0, 10, 16, 17, 18, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 13 columns.
MIP Presolve modified 99 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 65 rows, 63 columns, and 283 nonzeros.
Reduced MIP has 50 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.41 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.68 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.69 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.69 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 6, 8, 11, 12, 14, 15, 16, 17, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 2, 2, 1, 1]
pattern good
排序前[3, 6, 8, 11, 12, 14, 15, 16, 17, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 8, 14, 15, 3, 16, 17, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
82
——————————————————————————————————————————第6层——————————————————————————————————————
76
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 + 1.0*s_12,5 - 9.0*n_5) <= 0.0无法将物品 [6, 19, 8, 14, 15, 3, 16, 17, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 9, 13, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]
pattern good
排序前[0, 2, 7, 9, 13, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 13, 7, 0, 9, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
32
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_9,6 + 1.0*s_18,6 - 5.0*n_6) <= 0.0无法将物品 [2, 13, 7, 0, 9, 18]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999998, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [3, 6, 8, 9, 14, 15, 16, 17, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 2, 2, 1, 1]
pattern good
排序前[3, 6, 8, 9, 14, 15, 16, 17, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 19, 8, 14, 15, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
86
——————————————————————————————————————————第6层——————————————————————————————————————
78
——————————————————————————————————————————第7层——————————————————————————————————————
4
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 8.0*n_5) <= 0.0无法将物品 [6, 19, 8, 14, 15, 3, 9, 16, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 11, 12, 13, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1]
pattern good
排序前[0, 2, 7, 11, 12, 13, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 0, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
70
——————————————————————————————————————————第5层——————————————————————————————————————
360
——————————————————————————————————————————第6层——————————————————————————————————————
14
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 13, 7, 0, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999998, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 16, 17],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 15 columns.
MIP Presolve modified 160 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 104 rows, 99 columns, and 481 nonzeros.
Reduced MIP has 83 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (0.74 ticks)
Found incumbent of value 0.000000 after 0.01 sec. (1.28 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (1.29 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (1.29 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 6, 7, 8, 14, 15, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 1, 1]
pattern good
排序前[3, 6, 7, 8, 14, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 19, 7, 8, 14, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
18
——————————————————————————————————————————第5层——————————————————————————————————————
6
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 - 6.0*n_5) <= 0.0无法将物品 [6, 19, 7, 8, 14, 15, 3]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 9, 10, 11, 12, 13, 18]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 0, 1]
pattern good
排序前[0, 2, 9, 10, 11, 12, 13, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 0, 10, 9, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
22
——————————————————————————————————————————第6层——————————————————————————————————————
41
——————————————————————————————————————————第7层——————————————————————————————————————
30
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_9,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 7.0*n_6) <= 0.0无法将物品 [2, 13, 0, 10, 9, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 6, 8, 9, 14, 15, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 2, 0, 1, 1]
pattern good
排序前[0, 3, 6, 8, 9, 14, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 19, 0, 8, 14, 15, 3, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
2
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 - 7.0*n_5) <= 0.0无法将物品 [6, 19, 0, 8, 14, 15, 3, 9]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 7, 10, 11, 12, 13, 18]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 2, 1, 0, 1, 0, 1]
pattern good
排序前[2, 7, 10, 11, 12, 13, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 10, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
23
——————————————————————————————————————————第5层——————————————————————————————————————
68
——————————————————————————————————————————第6层——————————————————————————————————————
172
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_10,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 13, 7, 10, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 6, 8, 10, 14, 15, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1]
pattern good
排序前[0, 3, 6, 8, 10, 14, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 19, 0, 10, 8, 14, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
2
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 - 7.0*n_5) <= 0.0无法将物品 [6, 19, 0, 10, 8, 14, 15, 3]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [2, 7, 9, 11, 12, 13, 18]  放进袋子  6  袋子种类为1
patten : [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 0, 1, 0, 1]
pattern good
排序前[2, 7, 9, 11, 12, 13, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 9, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
161
——————————————————————————————————————————第6层——————————————————————————————————————
406
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_9,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 13, 7, 9, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0]
pattern good
排序前[1, 4, 5, 16, 17, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[1, 4, 5, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
3
——————————————————————————————————————————第3层——————————————————————————————————————
5
——————————————————————————————————————————第4层——————————————————————————————————————
7
——————————————————————————————————————————第5层——————————————————————————————————————
4
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 5.0*n_0) <= 0.0无法将物品 [1, 4, 5, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 6, 8, 10, 14, 15, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 1, 1]
pattern good
排序前[3, 6, 8, 10, 14, 15, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 19, 10, 8, 14, 15, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
22
——————————————————————————————————————————第6层——————————————————————————————————————
22
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 - 6.0*n_5) <= 0.0无法将物品 [6, 19, 10, 8, 14, 15, 3]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 9, 11, 12, 13]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 0, 0, 0, 1]
pattern good
排序前[0, 2, 7, 9, 11, 12, 13]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 0, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
43
——————————————————————————————————————————第5层——————————————————————————————————————
211
——————————————————————————————————————————第6层——————————————————————————————————————
5
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_9,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 13, 7, 0, 9, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 4, 5, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [3, 6, 8, 9, 14, 15, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 2, 1, 1, 1]
pattern good
排序前[3, 6, 8, 9, 14, 15, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 19, 8, 14, 15, 3, 9, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
86
——————————————————————————————————————————第6层——————————————————————————————————————
62
——————————————————————————————————————————第7层——————————————————————————————————————
4
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_18,5 - 7.0*n_5) <= 0.0无法将物品 [6, 19, 8, 14, 15, 3, 9, 18]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 2, 7, 10, 11, 12, 13]  放进袋子  6  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 2, 1, 0, 0, 0, 1]
pattern good
排序前[0, 2, 7, 10, 11, 12, 13]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 7, 0, 10, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
7
——————————————————————————————————————————第3层——————————————————————————————————————
9
——————————————————————————————————————————第4层——————————————————————————————————————
19
——————————————————————————————————————————第5层——————————————————————————————————————
51
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_7,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [2, 13, 7, 0, 10, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 16, 17, 18]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 3, 0, 0]
pattern good
排序前[4, 7, 10, 13, 16, 17, 18]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 10, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
27
——————————————————————————————————————————第6层——————————————————————————————————————
3
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 16, 17, 18]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 5, 8, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 5, 8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 8 columns.
MIP Presolve modified 102 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 69 rows, 70 columns, and 311 nonzeros.
Reduced MIP has 57 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.47 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (1.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (1.03 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_5,1 + 1.0*s_8,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [1, 5, 8, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
pattern good
排序前[0, 2, 3, 6, 9, 11, 12, 14, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 0, 14, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
121
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 0, 14, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 10, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 2, 0, 0]
pattern good
排序前[0, 4, 7, 10, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 0, 10, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
6
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_16,0 + 1.0*s_17,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 10, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 18, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 6 columns.
MIP Presolve modified 97 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 72 rows, 74 columns, and 330 nonzeros.
Reduced MIP has 61 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.54 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.09 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_18,1 + 1.0*s_19,1 - 3.0*n_1) <= 0.0无法将物品 [1, 8, 18, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
pattern good
排序前[2, 3, 5, 6, 9, 11, 12, 14, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 14, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
230
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 14, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 2, 0, 0]
pattern good
排序前[4, 7, 10, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 10, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
6
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_16,0 + 1.0*s_17,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 14, 15, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 14, 15, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 9 columns.
MIP Presolve modified 161 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 109 rows, 107 columns, and 516 nonzeros.
Reduced MIP has 91 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.85 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.65 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.65 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_19,1 - 4.0*n_1) <= 0.0无法将物品 [1, 8, 14, 15, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 2]
pattern good
排序前[0, 2, 3, 5, 6, 9, 11, 12, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 0, 3, 9, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
129
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 3, 9, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 10, 13, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
pattern good
排序前[3, 4, 7, 10, 13, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 10, 3, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
28
——————————————————————————————————————————第5层——————————————————————————————————————
10
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_3,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 3, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 8, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 6 columns.
MIP Presolve modified 60 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 42 rows, 44 columns, and 180 nonzeros.
Reduced MIP has 34 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.63 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.63 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_19,1 - 2.0*n_1) <= 0.0无法将物品 [1, 8, 19]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 6, 9, 11, 12, 14, 15, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 2, 0, 2, 2, 0, 2]
pattern good
排序前[0, 2, 5, 6, 9, 11, 12, 14, 15, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 0, 14, 15, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 14, 15, 9, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 10, 13, 16]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
pattern good
排序前[0, 4, 7, 10, 13, 16]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
排序后[13, 4, 7, 0, 10, 16]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
10
——————————————————————————————————————————第4层——————————————————————————————————————
9
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_16,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 10, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 8, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[5, 8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 38 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 47 rows, 49 columns, and 214 nonzeros.
Reduced MIP has 39 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.48 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.49 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.49 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 6, 9, 11, 12, 14, 15, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 2, 2, 0, 2]
pattern good
排序前[1, 2, 3, 6, 9, 11, 12, 14, 15, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 14, 15, 3, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
92
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 1, 14, 15, 3, 9, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 16]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 10, 13, 16],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 19 columns.
MIP Presolve modified 144 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 93 rows, 90 columns, and 418 nonzeros.
Reduced MIP has 74 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 8 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 0 vars, tightened 11 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 10 columns.
MIP Presolve modified 58 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 86 rows, 78 columns, and 357 nonzeros.
Reduced MIP has 62 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.50 ticks)
Probing fixed 6 vars, tightened 3 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 3 bounds.
Tried aggregator 2 times.
Detecting symmetries...
MIP Presolve eliminated 3 rows and 7 columns.
MIP Presolve modified 13 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 82 rows, 70 columns, and 321 nonzeros.
Reduced MIP has 54 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.47 ticks)
Probing fixed 5 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.12 ticks)
Clique table members: 133.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.17 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    24                      0.0000       20         
      0     0        0.0000    24                     Cuts: 5       34         
      0     0        0.0000    24                    Cuts: 14       48         
      0     0        0.0000    24                    Cuts: 22       65         
      0     0        cutoff                                         69         
Elapsed time = 0.03 sec. (10.24 ticks, tree = 0.01 MB, solutions = 0)

Clique cuts applied:  3
Implied bound cuts applied:  6
Flow cuts applied:  1
Mixed integer rounding cuts applied:  7
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.03 sec. (10.24 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (10.24 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_13,0 + 1.0*s_16,0 - 4.0*n_0) <= 0.0无法将物品 [4, 7, 10, 13, 16]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 5, 8, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[3, 5, 8, 19],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 72 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 75 rows, 76 columns, and 354 nonzeros.
Reduced MIP has 63 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.48 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.79 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.80 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.80 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 6, 9, 11, 12, 14, 15, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 2, 2, 0, 2]
pattern good
排序前[0, 1, 2, 6, 9, 11, 12, 14, 15, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 14, 15, 9, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
68
——————————————————————————————————————————第4层——————————————————————————————————————
386
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 14, 15, 9, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 3, 4, 7, 10, 13]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
pattern good
排序前[0, 3, 4, 7, 10, 13]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 0, 10, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
13
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_3,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 10, 3]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 8, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 2, 6, 9, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 2, 3, 0, 2]
pattern good
排序前[1, 2, 6, 9, 11, 12, 14, 15, 16, 17, 18]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 14, 15, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
92
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 10.0*n_9) <= 0.0无法将物品 [2, 6, 1, 14, 15, 9, 16, 17, 18, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 10, 13]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 4, 7, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 20 rows and 28 columns.
MIP Presolve modified 163 coefficients.
Aggregator did 19 substitutions.
Reduced MIP has 81 rows, 76 columns, and 336 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 31 vars, tightened 30 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 2 vars, tightened 21 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 39 rows and 43 columns.
MIP Presolve modified 76 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 29 rows, 20 columns, and 80 nonzeros.
Reduced MIP has 12 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.18 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.81 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.81 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_13,0 - 4.0*n_0) <= 0.0无法将物品 [0, 4, 7, 10, 13]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 8, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0]
pattern good
排序前[5, 8, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 5, 8, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
64
——————————————————————————————————————————第4层——————————————————————————————————————
268
——————————————————————————————————————————第5层——————————————————————————————————————
500
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=150, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=7, x=0, y=0, z=60, lx=150, ly=180, lz=20}
Position{type=13, x=0, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=0, y=90, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=210, y=0, z=0, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
pattern good
排序前[1, 2, 3, 6, 9, 11, 12, 14, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 14, 15, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
92
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 1, 14, 15, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 10, 13]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[3, 4, 7, 10, 13],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 14 rows and 21 columns.
MIP Presolve modified 160 coefficients.
Aggregator did 16 substitutions.
Reduced MIP has 90 rows, 86 columns, and 396 nonzeros.
Reduced MIP has 70 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.98 ticks)
Probing fixed 8 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.25 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 12 columns.
MIP Presolve modified 61 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 84 rows, 72 columns, and 343 nonzeros.
Reduced MIP has 56 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.48 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 2 coefficients.
Reduced MIP has 84 rows, 71 columns, and 341 nonzeros.
Reduced MIP has 55 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
Probing time = 0.00 sec. (0.17 ticks)
Clique table members: 249.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.14 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    22                      0.0000       28         
      0     0        0.0000    22                     Cuts: 8       31         
      0     0        0.0000    22                    Cuts: 29       42         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       42    0.00%
Elapsed time = 0.03 sec. (5.93 ticks, tree = 0.01 MB, solutions = 1)

Clique cuts applied:  1
Cover cuts applied:  1
Implied bound cuts applied:  2
Flow cuts applied:  7
Mixed integer rounding cuts applied:  9
Zero-half cuts applied:  1
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.03 sec. (5.94 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (5.94 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [5, 8, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0]
pattern good
排序前[5, 8, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 5, 8, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
64
——————————————————————————————————————————第4层——————————————————————————————————————
268
——————————————————————————————————————————第5层——————————————————————————————————————
500
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=150, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=7, x=0, y=0, z=60, lx=150, ly=180, lz=20}
Position{type=13, x=0, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=0, y=90, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=210, y=0, z=0, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
pattern good
排序前[0, 1, 2, 6, 9, 11, 12, 14, 15]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 14, 15, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
68
——————————————————————————————————————————第4层——————————————————————————————————————
386
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 14, 15, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
排序前[3, 4, 7, 10, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 10, 14, 3]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
5
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_3,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 14, 3]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 8, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0]
pattern good
排序前[5, 8, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 5, 8, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
194
——————————————————————————————————————————第5层——————————————————————————————————————
448
——————————————————————————————————————————第6层——————————————————————————————————————
500
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=150, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=7, x=0, y=0, z=60, lx=150, ly=180, lz=20}
Position{type=12, x=210, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=13, x=0, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=0, y=90, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=150, y=170, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 6, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 6, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
70
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000002, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 10, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 19 columns.
MIP Presolve modified 150 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 93 rows, 90 columns, and 418 nonzeros.
Reduced MIP has 74 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.97 ticks)
Probing fixed 9 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.25 ticks)
Cover probing fixed 0 vars, tightened 11 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 6 rows and 12 columns.
MIP Presolve modified 56 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 85 rows, 76 columns, and 352 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.49 ticks)
Probing fixed 7 vars, tightened 3 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 3 bounds.
Tried aggregator 2 times.
Detecting symmetries...
MIP Presolve eliminated 2 rows and 7 columns.
MIP Presolve modified 17 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 81 rows, 67 columns, and 310 nonzeros.
Reduced MIP has 51 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.35 ticks)
Probing fixed 8 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Clique table members: 173.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.18 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    25                      0.0000       21         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       31    0.00%
Elapsed time = 0.02 sec. (5.06 ticks, tree = 0.01 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.02 sec. (5.06 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (5.06 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 5, 8, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0]
pattern good
排序前[0, 5, 8, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 5, 0, 8, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
188
——————————————————————————————————————————第5层——————————————————————————————————————
416
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
279
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_5,1 + 1.0*s_0,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 7.0*n_1) <= 0.0无法将物品 [19, 5, 0, 8, 15, 16, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 6, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 3, 6, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 8, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0]
pattern good
排序前[0, 3, 8, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 0, 8, 15, 3, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
60
——————————————————————————————————————————第4层——————————————————————————————————————
188
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
74
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 8, 15, 3, 16, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14, 15]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 2, 0, 0, 0]
pattern good
排序前[4, 7, 10, 13, 14, 15]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 4, 7, 10, 14, 15]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
6
——————————————————————————————————————————第4层——————————————————————————————————————
4
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_15,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 14, 15]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 3, 5, 8, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0]
pattern good
排序前[0, 3, 5, 8, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 5, 0, 8, 3, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
150
——————————————————————————————————————————第5层——————————————————————————————————————
318
——————————————————————————————————————————第6层——————————————————————————————————————
132
——————————————————————————————————————————第7层——————————————————————————————————————
24
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_5,1 + 1.0*s_0,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 7.0*n_1) <= 0.0无法将物品 [19, 5, 0, 8, 3, 16, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 6, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 6, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
127
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 10, 11, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 10, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_11,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 14, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 8, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0]
pattern good
排序前[0, 8, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[19, 0, 8, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
60
——————————————————————————————————————————第4层——————————————————————————————————————
372
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 6.0*n_1) <= 0.0无法将物品 [19, 0, 8, 15, 16, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 6, 9, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 3, 5, 6, 9, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 3, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 3, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [5, 8, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[5, 8, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 8, 15, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
194
——————————————————————————————————————————第5层——————————————————————————————————————
448
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
253
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=0, y=150, z=0, lx=170, ly=60, lz=120}
Position{type=7, x=0, y=0, z=60, lx=180, ly=150, lz=20}
Position{type=12, x=180, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=13, x=0, y=0, z=80, lx=90, ly=120, lz=40}
Position{type=13, x=90, y=0, z=80, lx=90, ly=120, lz=40}
Position{type=13, x=210, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=170, y=150, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 9, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 6, 9, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 3, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
70
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 3, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [3, 5, 8, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[3, 5, 8, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 8, 15, 3, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
184
——————————————————————————————————————————第5层——————————————————————————————————————
290
——————————————————————————————————————————第6层——————————————————————————————————————
308
——————————————————————————————————————————第7层——————————————————————————————————————
100
——————————————————————————————————————————第8层——————————————————————————————————————
6
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_5,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 8.0*n_1) <= 0.0无法将物品 [19, 5, 8, 15, 3, 16, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 6, 9, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 6, 9, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
70
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_9,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000002, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999998, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0]
pattern good
排序前[1, 15, 16, 17, 18, 19]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[1, 19, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
3
——————————————————————————————————————————第3层——————————————————————————————————————
6
——————————————————————————————————————————第4层——————————————————————————————————————
15
——————————————————————————————————————————第5层——————————————————————————————————————
22
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_19,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 5.0*n_1) <= 0.0无法将物品 [1, 19, 15, 16, 17, 18]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 8, 9, 11, 12]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 2]
pattern good
排序前[0, 2, 3, 5, 6, 8, 9, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 5, 0, 8, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
27
——————————————————————————————————————————第3层——————————————————————————————————————
120
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 - 8.0*n_9) <= 0.0无法将物品 [2, 6, 5, 0, 8, 3, 9, 11, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 3, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[0, 3, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 15, 3, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
80
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 15, 3, 16, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 6, 8, 9, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 5, 6, 8, 9, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 8, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
417
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 8, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 5, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[0, 5, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 0, 15, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
102
——————————————————————————————————————————第4层——————————————————————————————————————
494
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
367
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_5,1 + 1.0*s_0,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 5, 0, 15, 16, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 6, 8, 9, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 3, 6, 8, 9, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 8, 3, 9, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
74
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 8, 3, 9, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0000000000000002, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [5, 9, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[5, 9, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 15, 9, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
106
——————————————————————————————————————————第4层——————————————————————————————————————
320
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
266
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=0, y=0, z=60, lx=120, ly=170, lz=60}
Position{type=12, x=0, y=170, z=0, lx=150, ly=30, lz=120}
Position{type=8, x=150, y=0, z=0, lx=70, ly=170, lz=40}
Position{type=13, x=150, y=0, z=40, lx=90, ly=120, lz=40}
Position{type=13, x=120, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=150, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=150, y=120, z=40, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 8, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 6, 8, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 8, 3, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
64
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 8, 3, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0000000000000002, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [3, 5, 9, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[3, 5, 9, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 15, 3, 9, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
106
——————————————————————————————————————————第4层——————————————————————————————————————
320
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
426
——————————————————————————————————————————第7层——————————————————————————————————————
186
——————————————————————————————————————————第8层——————————————————————————————————————
22
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_5,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 8.0*n_1) <= 0.0无法将物品 [19, 5, 15, 3, 9, 16, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 6, 8, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 6, 8, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 8, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
76
——————————————————————————————————————————第4层——————————————————————————————————————
313
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 8, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0000000000000002, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 9, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[0, 9, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 0, 15, 9, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
80
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_19,1 + 1.0*s_0,1 + 1.0*s_15,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0.0无法将物品 [19, 0, 15, 9, 16, 17, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 6, 8, 12]  放进袋子  9  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[1, 2, 3, 5, 6, 8, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 5, 8, 3, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
87
——————————————————————————————————————————第4层——————————————————————————————————————
417
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_12,9 - 6.0*n_9) <= 0.0无法将物品 [2, 6, 1, 5, 8, 3, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.9999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0000000000000002, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 8, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 8, 10, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
排序后[13, 4, 7, 10, 8, 14]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
6
——————————————————————————————————————————第4层——————————————————————————————————————
5
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 8, 14]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 9, 11, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 3, 1, 0]
pattern good
排序前[5, 9, 11, 15, 16, 17, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 5, 15, 9, 16, 17, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
106
——————————————————————————————————————————第4层——————————————————————————————————————
320
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
266
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, x=0, y=0, z=60, lx=120, ly=170, lz=60}
Position{type=12, x=0, y=170, z=0, lx=150, ly=30, lz=120}
Position{type=8, x=150, y=0, z=0, lx=70, ly=170, lz=40}
Position{type=13, x=150, y=0, z=40, lx=90, ly=120, lz=40}
Position{type=13, x=120, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, x=150, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=150, y=120, z=40, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 12]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2]
pattern good
排序前[0, 1, 2, 3, 6, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 1, 0, 3, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
18
——————————————————————————————————————————第3层——————————————————————————————————————
70
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 1, 0, 3, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.9999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 9, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0]
pattern good
排序前[4, 7, 9, 10, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[13, 4, 7, 10, 14, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
5
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_9,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 10, 14, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1]
pattern good
排序前[0, 2, 5, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 5, 0, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
20
——————————————————————————————————————————第5层——————————————————————————————————————
52
——————————————————————————————————————————第6层——————————————————————————————————————
92
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 5, 0, 16, 17, 18]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 8, 11, 12, 15]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1]
pattern good
排序前[1, 3, 6, 8, 11, 12, 15]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 8, 15, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
19
——————————————————————————————————————————第5层——————————————————————————————————————
111
——————————————————————————————————————————第6层——————————————————————————————————————
462
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_8,6 + 1.0*s_15,6 + 1.0*s_3,6 + 1.0*s_11,6 + 1.0*s_12,6 - 6.0*n_6) <= 0.0无法将物品 [6, 1, 8, 15, 3, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 8, 9, 11, 15, 16, 17, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 2, 1, 1]
pattern good
排序前[0, 2, 8, 9, 11, 15, 16, 17, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 15, 9, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
6
——————————————————————————————————————————第6层——————————————————————————————————————
6
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 - 8.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 15, 9, 16, 17, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 5, 6, 12, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1]
pattern good
排序前[1, 3, 5, 6, 12, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 5, 3, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
16
——————————————————————————————————————————第5层——————————————————————————————————————
53
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_3,6 + 1.0*s_18,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [6, 1, 5, 3, 18, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 9, 11, 15, 16, 17, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 2, 1, 1]
pattern good
排序前[0, 2, 3, 9, 11, 15, 16, 17, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 15, 3, 9, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
30
——————————————————————————————————————————第6层——————————————————————————————————————
40
——————————————————————————————————————————第7层——————————————————————————————————————
4
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 - 8.0*n_5) <= 0.0无法将物品 [2, 19, 0, 15, 3, 9, 16, 17, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 5, 6, 8, 12, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1]
pattern good
排序前[1, 5, 6, 8, 12, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 5, 8, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
48
——————————————————————————————————————————第5层——————————————————————————————————————
26
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_18,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [6, 1, 5, 8, 18, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 8, 9, 15, 16, 17, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1]
pattern good
排序前[0, 2, 3, 8, 9, 15, 16, 17, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 0, 8, 15, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
6
——————————————————————————————————————————第6层——————————————————————————————————————
6
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 8.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 15, 3, 9, 16, 17]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 5, 6, 11, 12, 18]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1]
pattern good
排序前[1, 5, 6, 11, 12, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 5, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
13
——————————————————————————————————————————第4层——————————————————————————————————————
74
——————————————————————————————————————————第5层——————————————————————————————————————
295
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [6, 1, 5, 18, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999996, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999996, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 8, 9, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 3, 1, 1]
pattern good
排序前[0, 2, 8, 9, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 0, 8, 15, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
6
——————————————————————————————————————————第6层——————————————————————————————————————
6
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 8.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 15, 9, 16, 17, 18]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 5, 6, 11, 12]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1]
pattern good
排序前[1, 3, 5, 6, 11, 12]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 5, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
105
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_3,6 + 1.0*s_11,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [6, 1, 5, 3, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999996, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [4, 7, 10, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 9, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 1, 1]
pattern good
排序前[0, 2, 3, 9, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[2, 19, 0, 15, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
14
——————————————————————————————————————————第5层——————————————————————————————————————
30
——————————————————————————————————————————第6层——————————————————————————————————————
40
——————————————————————————————————————————第7层——————————————————————————————————————
4
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 8.0*n_5) <= 0.0无法将物品 [2, 19, 0, 15, 3, 9, 16, 17, 18]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 5, 6, 8, 11, 12]  放进袋子  6  袋子种类为1
patten : [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1]
pattern good
排序前[1, 5, 6, 8, 11, 12]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 5, 8, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
65
——————————————————————————————————————————第5层——————————————————————————————————————
25
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,6 + 1.0*s_1,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_11,6 + 1.0*s_12,6 - 5.0*n_6) <= 0.0无法将物品 [6, 1, 5, 8, 11, 12]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [3, 4, 7, 8, 9, 10, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 2, 0, 0]
pattern good
排序前[3, 4, 7, 8, 9, 10, 14, 16, 17]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[4, 7, 10, 8, 14, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
35
——————————————————————————————————————————第4层——————————————————————————————————————
68
——————————————————————————————————————————第5层——————————————————————————————————————
135
——————————————————————————————————————————第6层——————————————————————————————————————
129
——————————————————————————————————————————第7层——————————————————————————————————————
44
——————————————————————————————————————————第8层——————————————————————————————————————
4
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 - 8.0*n_0) <= 0.0无法将物品 [4, 7, 10, 8, 14, 3, 9, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 5, 11, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 5, 11, 15, 18],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 7 columns.
MIP Presolve modified 134 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 108 rows, 109 columns, and 517 nonzeros.
Reduced MIP has 93 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.84 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.68 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.68 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.68 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 6, 12, 13, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2]
pattern good
排序前[0, 2, 6, 12, 13, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 13, 19, 0, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
19
——————————————————————————————————————————第3层——————————————————————————————————————
86
——————————————————————————————————————————第4层——————————————————————————————————————
328
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_0,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 13, 19, 0, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 8, 9, 10, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 2, 0, 0]
pattern good
排序前[0, 4, 7, 8, 9, 10, 14, 16, 17]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[4, 7, 0, 10, 8, 14, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
17
——————————————————————————————————————————第4层——————————————————————————————————————
23
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
53
——————————————————————————————————————————第7层——————————————————————————————————————
29
——————————————————————————————————————————第8层——————————————————————————————————————
10
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 - 8.0*n_0) <= 0.0无法将物品 [4, 7, 0, 10, 8, 14, 9, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 3, 5, 11, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
pattern good
排序前[1, 3, 5, 11, 15, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 5, 15, 3, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
3
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
3
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_5,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_18,1 + 1.0*s_11,1 - 5.0*n_1) <= 0.0无法将物品 [1, 5, 15, 3, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 6, 12, 13, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[2, 6, 12, 13, 19],9
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 37 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 118 rows, 121 columns, and 600 nonzeros.
Reduced MIP has 105 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.20 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.21 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.21 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0000000000000004, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 3, 4, 7, 8, 10, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 2, 0, 0]
pattern good
排序前[0, 3, 4, 7, 8, 10, 14, 16, 17]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[4, 7, 0, 10, 8, 14, 3, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
17
——————————————————————————————————————————第4层——————————————————————————————————————
23
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
53
——————————————————————————————————————————第7层——————————————————————————————————————
29
——————————————————————————————————————————第8层——————————————————————————————————————
10
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_17,0 - 8.0*n_0) <= 0.0无法将物品 [4, 7, 0, 10, 8, 14, 3, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 5, 9, 11, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]
pattern good
排序前[1, 5, 9, 11, 15, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 5, 15, 9, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
3
——————————————————————————————————————————第3层——————————————————————————————————————
4
——————————————————————————————————————————第4层——————————————————————————————————————
3
——————————————————————————————————————————第5层——————————————————————————————————————
2
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_5,1 + 1.0*s_15,1 + 1.0*s_9,1 + 1.0*s_18,1 + 1.0*s_11,1 - 5.0*n_1) <= 0.0无法将物品 [1, 5, 15, 9, 18, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 6, 12, 13, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 4, 7, 8, 10, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 2, 0, 0]
pattern good
排序前[0, 4, 7, 8, 10, 14, 16, 17]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[4, 7, 0, 10, 8, 14, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
17
——————————————————————————————————————————第4层——————————————————————————————————————
23
——————————————————————————————————————————第5层——————————————————————————————————————
38
——————————————————————————————————————————第6层——————————————————————————————————————
64
——————————————————————————————————————————第7层——————————————————————————————————————
87
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 - 7.0*n_0) <= 0.0无法将物品 [4, 7, 0, 10, 8, 14, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 3, 9, 11, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]
pattern good
排序前[1, 3, 9, 11, 15, 18]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 15, 3, 9, 18, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
11
——————————————————————————————————————————第4层——————————————————————————————————————
18
——————————————————————————————————————————第5层——————————————————————————————————————
25
haha
Position{type=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=12, x=0, y=0, z=60, lx=120, ly=150, lz=30}
Position{type=3, x=120, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, x=190, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=13, x=0, y=170, z=0, lx=120, ly=40, lz=90}
Position{type=10, x=120, y=170, z=0, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [2, 5, 6, 12, 13, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2]
pattern good
排序前[2, 5, 6, 12, 13, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 13, 19, 5, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
19
——————————————————————————————————————————第3层——————————————————————————————————————
74
——————————————————————————————————————————第4层——————————————————————————————————————
377
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 13, 19, 5, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0000000000000004, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 3, 4, 7, 9, 10, 14, 16, 17]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0, 0]
pattern good
排序前[0, 3, 4, 7, 9, 10, 14, 16, 17]
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
排序后[4, 7, 0, 10, 14, 3, 9, 16, 17]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
17
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
76
——————————————————————————————————————————第6层——————————————————————————————————————
98
——————————————————————————————————————————第7层——————————————————————————————————————
44
——————————————————————————————————————————第8层——————————————————————————————————————
7
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 - 8.0*n_0) <= 0.0无法将物品 [4, 7, 0, 10, 14, 3, 9, 16, 17]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 5, 11, 15, 18]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [2, 6, 8, 12, 13, 19]  放进袋子  9  袋子种类为2
patten : [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 2]
pattern good
排序前[2, 6, 8, 12, 13, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 6, 13, 19, 8, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
19
——————————————————————————————————————————第3层——————————————————————————————————————
86
——————————————————————————————————————————第4层——————————————————————————————————————
411
——————————————————————————————————————————第5层——————————————————————————————————————
500
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,9 + 1.0*s_6,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_8,9 + 1.0*s_12,9 - 5.0*n_9) <= 0.0无法将物品 [2, 6, 13, 19, 8, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2]  放进袋子  0  袋子种类为0
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_2,0 + 0.0*n_0) <= 0.0无法将物品 [2]  放进袋子 0 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [1, 3, 9, 10, 11, 14, 15]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 0, 0, 0]
pattern good
排序前[1, 3, 9, 10, 11, 14, 15]
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[1, 10, 14, 15, 3, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
12
——————————————————————————————————————————第4层——————————————————————————————————————
28
——————————————————————————————————————————第5层——————————————————————————————————————
15
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_10,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_11,1 - 6.0*n_1) <= 0.0无法将物品 [1, 10, 14, 15, 3, 9, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [1, 0, 0, 0, 2, 1, 1, 1, 0, 0, 1, 1, 0, 3, 1, 2]
pattern good
排序前[0, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 13, 19, 4, 5, 7, 0, 8, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
34
——————————————————————————————————————————第3层——————————————————————————————————————
210
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 11.0*n_9) <= 0.0无法将物品 [6, 13, 19, 4, 5, 7, 0, 8, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [4, 5, 7, 11, 13, 16, 17]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0]
pattern good
排序前[4, 5, 7, 11, 13, 16, 17]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 5, 7, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
9
——————————————————————————————————————————第4层——————————————————————————————————————
18
——————————————————————————————————————————第5层——————————————————————————————————————
83
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_7,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 5, 7, 16, 17, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 8, 10, 12, 18, 19]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]
pattern good
排序前[3, 8, 10, 12, 18, 19]
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[19, 10, 8, 3, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
24
——————————————————————————————————————————第3层——————————————————————————————————————
58
——————————————————————————————————————————第4层——————————————————————————————————————
230
——————————————————————————————————————————第5层——————————————————————————————————————
500
haha
Position{type=14, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=9, x=0, y=150, z=0, lx=180, ly=30, lz=120}
Position{type=7, x=0, y=0, z=60, lx=180, ly=150, lz=20}
Position{type=3, x=0, y=0, z=80, lx=170, ly=70, lz=40}
Position{type=13, x=180, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=180, y=90, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [2]  放进袋子  2  袋子种类为0
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_2,2 + 0.0*n_2) <= 0.0无法将物品 [2]  放进袋子 2 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [0, 1, 6, 9, 14, 15]  放进袋子  5  袋子种类为1
patten : [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1]
pattern good
排序前[0, 1, 6, 9, 14, 15]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
排序后[6, 1, 0, 14, 15, 9]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
4
——————————————————————————————————————————第3层——————————————————————————————————————
7
——————————————————————————————————————————第4层——————————————————————————————————————
11
——————————————————————————————————————————第5层——————————————————————————————————————
9
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_1,5 + 1.0*s_0,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_9,5 - 5.0*n_5) <= 0.0无法将物品 [6, 1, 0, 14, 15, 9]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0000000000000004, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999997, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000004, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0]
[0.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000004, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000004, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 7, 9, 13, 14]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 7, 9, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 19 columns.
MIP Presolve modified 149 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 93 rows, 90 columns, and 418 nonzeros.
Reduced MIP has 74 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.97 ticks)
Probing fixed 7 vars, tightened 11 bounds.
Probing time = 0.00 sec. (0.23 ticks)
Cover probing fixed 0 vars, tightened 11 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 4 rows and 9 columns.
MIP Presolve modified 57 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 87 rows, 79 columns, and 362 nonzeros.
Reduced MIP has 63 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.50 ticks)
Probing fixed 2 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 12 coefficients.
Reduced MIP has 87 rows, 77 columns, and 353 nonzeros.
Reduced MIP has 61 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.23 ticks)
Probing fixed 3 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Clique table members: 213.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    25                      0.0000       26         
      0     0        0.0000    25                  MIRcuts: 1       34         
      0     0        0.0000    25                    Cuts: 13       48         
      0     0        0.0000    25                 Flowcuts: 1       50         
      0     0        0.0000    25                     Cuts: 6       63         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       63    0.00%
Elapsed time = 0.01 sec. (7.72 ticks, tree = 0.01 MB, solutions = 1)

Implied bound cuts applied:  4
Flow cuts applied:  2
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0.01 sec. (7.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (7.72 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [6]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[6],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'c1':  0  = -1.
Presolve time = 0.00 sec. (0.01 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.01 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.01 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_6,1 + 0.0*n_1) <= 0.0无法将物品 [6]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 5, 8, 10, 11, 12, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 2, 0, 1, 3, 1, 2]
pattern good
排序前[0, 1, 2, 3, 5, 8, 10, 11, 12, 15, 16, 17, 18, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 1, 19, 5, 0, 10, 8, 15, 3, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
164
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
500
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=14, x=0, y=250, z=0, lx=150, ly=60, lz=150}
Position{type=4, x=150, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, x=0, y=0, z=150, lx=120, ly=180, lz=30}
Position{type=7, x=250, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=12, x=120, y=0, z=150, lx=150, ly=120, lz=30}
Position{type=3, x=250, y=180, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=270, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=290, y=180, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=290, y=180, z=90, lx=40, ly=120, lz=90}
Position{type=10, x=270, y=0, z=90, lx=50, ly=100, lz=80}
Position{type=10, x=270, y=100, z=90, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [0, 4, 7, 8, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]
pattern good
排序前[0, 4, 7, 8, 11, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 0, 8, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
10
——————————————————————————————————————————第5层——————————————————————————————————————
4
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_11,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 8, 14, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 6, 9, 10, 12, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 3, 1, 1]
pattern good
排序前[3, 6, 9, 10, 12, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 10, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
42
——————————————————————————————————————————第5层——————————————————————————————————————
30
——————————————————————————————————————————第6层——————————————————————————————————————
2
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_12,5 - 8.0*n_5) <= 0.0无法将物品 [6, 19, 10, 3, 9, 16, 17, 18, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 15]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 5, 15],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 64 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 76 rows, 78 columns, and 364 nonzeros.
Reduced MIP has 65 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.49 ticks)
Probing fixed 23 vars, tightened 13 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 9 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 34 rows and 35 columns.
MIP Presolve modified 71 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 40 rows, 41 columns, and 159 nonzeros.
Reduced MIP has 33 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.42 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_15,6 - 3.0*n_6) <= 0.0无法将物品 [1, 2, 5, 15]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 4, 7, 11, 12, 13, 14]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0]
pattern good
排序前[0, 4, 7, 11, 12, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 0, 14, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
60
——————————————————————————————————————————第5层——————————————————————————————————————
10
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_14,0 + 1.0*s_11,0 + 1.0*s_12,0 - 6.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 14, 11, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 5, 6, 9, 10, 16, 17, 18]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 3, 0, 1]
pattern good
排序前[3, 5, 6, 9, 10, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 5, 10, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
21
——————————————————————————————————————————第4层——————————————————————————————————————
36
——————————————————————————————————————————第5层——————————————————————————————————————
75
——————————————————————————————————————————第6层——————————————————————————————————————
99
——————————————————————————————————————————第7层——————————————————————————————————————
75
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=4, x=190, y=0, z=0, lx=120, ly=170, lz=60}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=3, x=190, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, x=260, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=13, x=190, y=170, z=0, lx=120, ly=90, lz=40}
Position{type=13, x=190, y=170, z=40, lx=120, ly=90, lz=40}
Position{type=13, x=190, y=170, z=80, lx=120, ly=90, lz=40}
needToSolve=true needToAddCut=false
将物品  [1, 2, 8, 15, 19]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 8, 15, 19],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 94 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 29 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 40 rows and 41 columns.
MIP Presolve modified 95 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 71 rows, 71 columns, and 307 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (2.21 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (2.21 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_8,6 + 1.0*s_15,6 + 1.0*s_19,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 8, 15, 19]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0000000000000002, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [0, 4, 7, 11, 13, 14]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
pattern good
排序前[0, 4, 7, 11, 13, 14]
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[13, 4, 7, 0, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
2
——————————————————————————————————————————第2层——————————————————————————————————————
5
——————————————————————————————————————————第3层——————————————————————————————————————
15
——————————————————————————————————————————第4层——————————————————————————————————————
9
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_14,0 + 1.0*s_11,0 - 5.0*n_0) <= 0.0无法将物品 [13, 4, 7, 0, 14, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [6, 9, 10, 12, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 3, 1, 1]
pattern good
排序前[6, 9, 10, 12, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 10, 15, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
52
——————————————————————————————————————————第5层——————————————————————————————————————
80
——————————————————————————————————————————第6层——————————————————————————————————————
20
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_12,5 - 8.0*n_5) <= 0.0无法将物品 [6, 19, 10, 15, 9, 16, 17, 18, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 5, 8]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 3, 5, 8],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 94 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 30 vars, tightened 15 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 41 rows and 42 columns.
MIP Presolve modified 112 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 69 rows, 69 columns, and 298 nonzeros.
Reduced MIP has 58 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.17 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_3,6 + 1.0*s_5,6 + 1.0*s_8,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 3, 5, 8]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0000000000000002, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [0, 4, 7, 13, 14]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 4, 7, 13, 14],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 20 rows and 28 columns.
MIP Presolve modified 164 coefficients.
Aggregator did 19 substitutions.
Reduced MIP has 81 rows, 76 columns, and 336 nonzeros.
Reduced MIP has 60 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.81 ticks)
Probing fixed 31 vars, tightened 30 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 2 vars, tightened 13 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 39 rows and 43 columns.
MIP Presolve modified 72 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 29 rows, 20 columns, and 80 nonzeros.
Reduced MIP has 12 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.18 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.86 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.86 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_4,0 + 1.0*s_7,0 + 1.0*s_13,0 + 1.0*s_14,0 - 4.0*n_0) <= 0.0无法将物品 [0, 4, 7, 13, 14]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 6, 9, 11, 12, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 2, 0, 1, 3, 1, 1]
pattern good
排序前[3, 6, 9, 11, 12, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 19, 15, 3, 9, 16, 17, 18, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
26
——————————————————————————————————————————第4层——————————————————————————————————————
66
——————————————————————————————————————————第5层——————————————————————————————————————
68
——————————————————————————————————————————第6层——————————————————————————————————————
20
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 - 9.0*n_5) <= 0.0无法将物品 [6, 19, 15, 3, 9, 16, 17, 18, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 2, 5, 8, 10]  放进袋子  6  袋子种类为1
patten : [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 5, 8, 10],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 95 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 114 columns, and 561 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Probing fixed 28 vars, tightened 15 bounds.
Probing time = 0.02 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 39 rows and 40 columns.
MIP Presolve modified 105 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 73 rows, 73 columns, and 316 nonzeros.
Reduced MIP has 62 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.46 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (2.22 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (2.22 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_5,6 + 1.0*s_8,6 + 1.0*s_10,6 - 4.0*n_6) <= 0.0无法将物品 [1, 2, 5, 8, 10]  放进袋子 6 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 4, 5, 8, 10, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 2, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 4, 5, 8, 10, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 4, 5, 0, 10, 8, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
32
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 4, 5, 0, 10, 8, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 7, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
344
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=0, y=0, z=130, lx=170, ly=250, lz=60}
Position{type=11, x=0, y=250, z=0, lx=220, ly=40, lz=180}
Position{type=14, x=220, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=6, x=190, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=12, x=220, y=150, z=0, lx=30, ly=120, lz=150}
Position{type=12, x=170, y=0, z=160, lx=120, ly=150, lz=30}
Position{type=3, x=250, y=150, z=0, lx=40, ly=70, lz=170}
Position{type=8, x=250, y=220, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=290, y=150, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=290, y=0, z=90, lx=40, ly=120, lz=90}
Position{type=13, x=290, y=150, z=90, lx=40, ly=120, lz=90}
Position{type=10, x=280, y=0, z=0, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 4, 5, 8, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 4, 5, 8, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 4, 5, 0, 8, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
32
装不完，装了4
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [2, 4, 5, 0, 8, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 7, 10, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
344
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
252
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=14, x=0, y=250, z=0, lx=150, ly=60, lz=150}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=280, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=12, x=150, y=250, z=0, lx=120, ly=30, lz=150}
Position{type=12, x=150, y=280, z=0, lx=120, ly=30, lz=150}
Position{type=3, x=270, y=200, z=0, lx=40, ly=70, lz=170}
Position{type=8, x=280, y=0, z=120, lx=70, ly=170, lz=40}
Position{type=13, x=310, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=180, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=270, y=270, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 4, 5, 10, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 4, 5, 10, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 4, 5, 0, 10, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
32
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [2, 4, 5, 0, 10, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 7, 8, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
352
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
371
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=14, x=250, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=6, x=0, y=250, z=0, lx=200, ly=30, lz=160}
Position{type=7, x=0, y=280, z=0, lx=180, ly=20, lz=150}
Position{type=12, x=250, y=150, z=0, lx=30, ly=150, lz=120}
Position{type=12, x=280, y=150, z=0, lx=30, ly=150, lz=120}
Position{type=3, x=310, y=0, z=0, lx=40, ly=70, lz=170}
Position{type=8, x=310, y=70, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=250, y=150, z=120, lx=90, ly=120, lz=40}
Position{type=13, x=310, y=140, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=230, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=200, y=250, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 4, 5, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 4, 5, 11],5
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 1 rows and 6 columns.
MIP Presolve modified 137 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 113 rows, 111 columns, and 551 nonzeros.
Reduced MIP has 95 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.79 ticks)
Probing fixed 7 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 11 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 11 columns.
MIP Presolve modified 66 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 105 rows, 99 columns, and 490 nonzeros.
Reduced MIP has 83 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (0.56 ticks)
Probing fixed 3 vars, tightened 5 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 66 coefficients.
Reduced MIP has 105 rows, 95 columns, and 479 nonzeros.
Reduced MIP has 79 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.44 ticks)
Probing fixed 4 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.24 ticks)
Cover probing fixed 2 vars, tightened 4 bounds.
Clique table members: 390.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.26 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    22                      0.0000       23         
      0     0        cutoff                                         29         
Elapsed time = 0.03 sec. (9.04 ticks, tree = 0.01 MB, solutions = 0)

Root node processing (before b&c):
  Real time             =    0.03 sec. (9.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (9.04 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,5 + 1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_11,5 - 4.0*n_5) <= 0.0无法将物品 [0, 2, 4, 5, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 7, 10, 8, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
344
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
246
——————————————————————————————————————————第13层——————————————————————————————————————
60
装不完，装了13
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_7,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 14.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 7, 10, 8, 14, 15, 3, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 10, 11, 13]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1]
pattern good
排序前[0, 2, 8, 10, 11, 13]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 13, 0, 10, 8, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
20
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [2, 13, 0, 10, 8, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0, 2, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 19, 4, 5, 7, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
164
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
333
——————————————————————————————————————————第13层——————————————————————————————————————
15
装不完，装了13
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 13.0*n_9) <= 0.0无法将物品 [6, 1, 19, 4, 5, 7, 14, 15, 3, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 7, 8, 10, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 7, 8, 10, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 7, 0, 10, 8, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
31
——————————————————————————————————————————第5层——————————————————————————————————————
12
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=6, x=0, y=190, z=0, lx=200, ly=30, lz=160}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, x=0, y=220, z=0, lx=180, ly=20, lz=150}
Position{type=10, x=200, y=190, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 14, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
334
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 13.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 14, 15, 3, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 10, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 8, 9, 10, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 10, 8, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
54
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, x=0, y=190, z=0, lx=180, ly=30, lz=120}
Position{type=7, x=0, y=220, z=0, lx=180, ly=20, lz=150}
Position{type=8, x=250, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=10, x=180, y=190, z=0, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 7, 14, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
330
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
18
装不完，装了13
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 13.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 7, 14, 15, 3, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 7, 8, 9, 10, 11]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 7, 8, 9, 10, 11]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 7, 0, 10, 8, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
29
——————————————————————————————————————————第5层——————————————————————————————————————
35
——————————————————————————————————————————第6层——————————————————————————————————————
7
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 7, 0, 10, 8, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 1, 1, 2, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 14, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
334
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 14, 15, 3, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999993, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 7, 8, 10, 11, 14]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1]
pattern good
排序前[0, 2, 7, 8, 10, 11, 14]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 7, 0, 10, 8, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
28
——————————————————————————————————————————第5层——————————————————————————————————————
29
——————————————————————————————————————————第6层——————————————————————————————————————
13
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 7, 0, 10, 8, 14, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 9, 12, 13, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1, 1, 1, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 9, 12, 13, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
334
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
2
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 15, 3, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 10, 11, 14]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]
pattern good
排序前[0, 2, 8, 9, 10, 11, 14]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 10, 8, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
63
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, x=0, y=190, z=0, lx=180, ly=20, lz=150}
Position{type=12, x=0, y=210, z=0, lx=120, ly=30, lz=150}
Position{type=8, x=120, y=210, z=0, lx=170, ly=40, lz=70}
Position{type=10, x=120, y=210, z=70, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 1, 3, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 7, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
330
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
81
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 7, 15, 3, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 7, 8, 10, 11, 16, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 2, 0, 1]
pattern good
排序前[0, 2, 7, 8, 10, 11, 16, 17]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 7, 0, 10, 8, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
31
——————————————————————————————————————————第5层——————————————————————————————————————
47
——————————————————————————————————————————第6层——————————————————————————————————————
134
——————————————————————————————————————————第7层——————————————————————————————————————
2
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [2, 7, 0, 10, 8, 16, 17, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 9, 12, 13, 14, 15, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1, 1, 2, 1, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 9, 12, 13, 14, 15, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 14, 15, 3, 9, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
334
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
65
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_12,9 - 11.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 14, 15, 3, 9, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 10, 11, 16, 17]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 0, 1]
pattern good
排序前[0, 2, 8, 9, 10, 11, 16, 17]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 10, 8, 9, 16, 17, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
49
——————————————————————————————————————————第6层——————————————————————————————————————
28
——————————————————————————————————————————第7层——————————————————————————————————————
14
haha
Position{type=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, x=190, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, x=220, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=8, x=240, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=13, x=190, y=180, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=190, y=220, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=240, y=0, z=70, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 2, 1, 1, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 7, 14, 15, 3, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
330
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
96
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_18,9 + 1.0*s_12,9 - 11.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 7, 14, 15, 3, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999993379, -0.0, -0.0, -0.0, 6.621370118864434E-13, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 10, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 8, 9, 10, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 10, 8, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [2, 19, 0, 10, 8, 14, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=12, x=280, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=3, x=280, y=150, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=250, y=220, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=290, y=220, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=10, x=250, y=220, z=120, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 10, 11, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 8, 9, 10, 11, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 10, 8, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
16
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 10, 8, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 2, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 14, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 14, 15, 3, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000013, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 10, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 8, 10, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 10, 8, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 10, 8, 14, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 9, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 9, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=12, x=280, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=3, x=250, y=200, z=0, lx=70, ly=40, lz=170}
Position{type=8, x=280, y=120, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=250, y=240, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=310, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=240, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=250, y=240, z=120, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 9, 10, 11, 14]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]
pattern good
排序前[0, 2, 3, 8, 9, 10, 11, 14]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 10, 8, 14, 3, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
45
——————————————————————————————————————————第6层——————————————————————————————————————
75
——————————————————————————————————————————第7层——————————————————————————————————————
2
装不完，装了7
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [2, 0, 10, 8, 14, 3, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 3, 1, 2]
pattern good
排序前[1, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 19, 4, 5, 7, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
330
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
130
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 11.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 7, 15, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 9, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 3, 8, 9, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 14, 3, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 14, 3, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 0, 1, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 10, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=0, y=280, z=0, lx=150, ly=30, lz=120}
Position{type=13, x=0, y=220, z=130, lx=120, ly=90, lz=40}
Position{type=13, x=180, y=250, z=0, lx=120, ly=40, lz=90}
Position{type=13, x=310, y=200, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=180, y=250, z=90, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 8, 9, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 14, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 1, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 10, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=180, y=250, z=0, lx=120, ly=30, lz=150}
Position{type=3, x=0, y=220, z=130, lx=170, ly=70, lz=40}
Position{type=13, x=0, y=280, z=0, lx=120, ly=40, lz=90}
Position{type=13, x=120, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=210, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=300, y=240, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.999999999999999, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 3, 8, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 14, 3, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 14, 3, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 10, 15, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=180, y=250, z=0, lx=120, ly=30, lz=150}
Position{type=8, x=0, y=220, z=130, lx=170, ly=70, lz=40}
Position{type=13, x=0, y=280, z=0, lx=120, ly=40, lz=90}
Position{type=13, x=120, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=210, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=10, x=300, y=240, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]
pattern good
排序前[0, 2, 8, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 14, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
14
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_11,5 - 5.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 14, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 10, 15, 3, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
——————————————————————————————————————————第13层——————————————————————————————————————
325
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=4, x=250, y=170, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=0, y=290, z=0, lx=200, ly=30, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=200, y=290, z=0, lx=120, ly=30, lz=150}
Position{type=3, x=0, y=220, z=130, lx=170, ly=70, lz=40}
Position{type=8, x=180, y=250, z=0, lx=70, ly=40, lz=170}
Position{type=13, x=310, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=310, y=180, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=250, y=0, z=120, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000013, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 3, 8, 9, 10, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
pattern good
排序前[2, 3, 8, 9, 10, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 10, 8, 14, 3, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
66
——————————————————————————————————————————第6层——————————————————————————————————————
18
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 7.0*n_5) <= 0.0无法将物品 [2, 19, 10, 8, 14, 3, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 3, 0, 2]
pattern good
排序前[0, 1, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 0, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=1, x=130, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=250, z=0, lx=220, ly=40, lz=180}
Position{type=4, x=190, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=190, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=0, x=130, y=0, z=170, lx=190, ly=240, lz=20}
Position{type=12, x=280, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=13, x=250, y=200, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=290, y=120, z=0, lx=40, ly=90, lz=120}
Position{type=13, x=290, y=210, z=0, lx=40, ly=90, lz=120}
Position{type=10, x=250, y=200, z=120, lx=80, ly=100, lz=50}
needToSolve=true needToAddCut=false
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 6.061817714453355E-13, -0.0, -0.0, -0.0, 0.9999999999993938, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 6.041833700010102E-13, -0.0, -0.0, -0.0, 0.9999999999993958, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.000000000000001, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.000000000000001, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999993936, -0.0, -0.0, -0.0, 6.064038160502605E-13, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 8, 9, 10, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
pattern good
排序前[2, 8, 9, 10, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 10, 8, 14, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
66
——————————————————————————————————————————第6层——————————————————————————————————————
18
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 10, 8, 14, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 0, 1, 2, 1, 1, 0, 0, 0, 1, 1, 1, 3, 0, 2]
pattern good
排序前[0, 1, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 0, 15, 3, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
158
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 0, 15, 3, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, 6.061817714453355E-13, -0.0, -0.0, -0.0, 0.9999999999993938, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999993, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.000000000000001, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 6.061817714453355E-13, -0.0, -0.0, -0.0, 0.9999999999993938, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999993936, -0.0, -0.0, -0.0, 6.064038160502605E-13, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 3, 8, 9, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
pattern good
排序前[2, 3, 8, 9, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 8, 14, 3, 9, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
50
——————————————————————————————————————————第5层——————————————————————————————————————
110
——————————————————————————————————————————第6层——————————————————————————————————————
4
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 8, 14, 3, 9, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 0, 0, 2, 1, 1, 0, 0, 1, 1, 1, 1, 3, 0, 2]
pattern good
排序前[0, 1, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 0, 10, 15, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 0, 10, 15, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 3, 8, 10, 11, 14, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]
pattern good
排序前[2, 3, 8, 10, 11, 14, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 10, 8, 14, 3, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
34
——————————————————————————————————————————第5层——————————————————————————————————————
66
——————————————————————————————————————————第6层——————————————————————————————————————
18
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 10, 8, 14, 3, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 4, 5, 6, 7, 9, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 0, 0, 2, 1, 1, 0, 1, 0, 1, 1, 1, 3, 0, 2]
pattern good
排序前[0, 1, 4, 5, 6, 7, 9, 12, 13, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 0, 15, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
158
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 0, 15, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 10, 11, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 3, 8, 10, 11, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 10, 8, 3, 11]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
16
装不完，装了5
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_11,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 10, 8, 3, 11]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 1, 0, 1, 1, 2, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[6, 1, 13, 4, 5, 7, 14, 15, 9, 16, 17, 18, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 14, 15, 9, 16, 17, 18, 12]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999979, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 9, 10, 11, 12]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 1]
pattern good
排序前[0, 2, 3, 8, 9, 10, 11, 12]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 0, 10, 8, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
6
——————————————————————————————————————————第3层——————————————————————————————————————
14
——————————————————————————————————————————第4层——————————————————————————————————————
27
——————————————————————————————————————————第5层——————————————————————————————————————
54
——————————————————————————————————————————第6层——————————————————————————————————————
39
——————————————————————————————————————————第7层——————————————————————————————————————
24
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, x=0, y=190, z=0, lx=180, ly=20, lz=150}
Position{type=3, x=0, y=210, z=0, lx=170, ly=40, lz=70}
Position{type=8, x=0, y=210, z=70, lx=170, ly=40, lz=70}
Position{type=10, x=180, y=190, z=0, lx=100, ly=50, lz=80}
Position{type=10, x=180, y=190, z=80, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 1, 2]
pattern good
排序前[1, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 19, 4, 5, 7, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
330
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
105
装不完，装了11
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 11.0*n_9) <= 0.0无法将物品 [6, 1, 13, 19, 4, 5, 7, 14, 15, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 10, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 8, 10, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 10, 8, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
28
——————————————————————————————————————————第6层——————————————————————————————————————
24
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_11,5 + 1.0*s_12,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 10, 8, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 14, 15, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=12, x=280, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=12, x=280, y=150, z=0, lx=30, ly=120, lz=150}
Position{type=3, x=240, y=270, z=0, lx=70, ly=40, lz=170}
Position{type=8, x=310, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=13, x=310, y=0, z=70, lx=40, ly=120, lz=90}
Position{type=13, x=310, y=120, z=70, lx=40, ly=120, lz=90}
Position{type=13, x=310, y=240, z=0, lx=40, ly=90, lz=120}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000007, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000009, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 9, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 3, 8, 9, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
16
——————————————————————————————————————————第6层——————————————————————————————————————
24
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_12,5 - 7.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 3, 9, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 0, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 10, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=180, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=12, x=0, y=280, z=0, lx=150, ly=30, lz=120}
Position{type=13, x=0, y=220, z=130, lx=120, ly=90, lz=40}
Position{type=13, x=150, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=240, y=280, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0000000000000007, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 9, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 8, 9, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
16
——————————————————————————————————————————第6层——————————————————————————————————————
24
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_12,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 9, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 10, 14, 15, 3, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
365
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=180, y=250, z=0, lx=120, ly=30, lz=150}
Position{type=12, x=180, y=280, z=0, lx=120, ly=30, lz=150}
Position{type=3, x=300, y=240, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=0, y=220, z=130, lx=120, ly=90, lz=40}
Position{type=13, x=0, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=90, y=280, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.9999999999999998, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 8, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 3, 8, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 3, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
16
——————————————————————————————————————————第6层——————————————————————————————————————
24
装不完，装了6
addCuts——IloRange  : -infinity <= (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_11,5 + 1.0*s_12,5 - 6.0*n_5) <= 0.0无法将物品 [2, 19, 0, 8, 3, 11, 12]  放进袋子 5 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 0, 1, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 10, 14, 15, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
365
haha
Position{type=5, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, x=190, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=11, x=0, y=0, z=130, lx=180, ly=220, lz=40}
Position{type=4, x=250, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, x=250, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, x=310, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, x=180, y=250, z=0, lx=120, ly=30, lz=150}
Position{type=12, x=180, y=280, z=0, lx=120, ly=30, lz=150}
Position{type=8, x=300, y=240, z=0, lx=40, ly=70, lz=170}
Position{type=13, x=0, y=220, z=130, lx=120, ly=90, lz=40}
Position{type=13, x=0, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, x=90, y=280, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 8, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 8, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 8, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
12
——————————————————————————————————————————第5层——————————————————————————————————————
28
haha
Position{type=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=14, x=0, y=190, z=0, lx=150, ly=60, lz=150}
Position{type=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=7, x=250, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=10, x=150, y=190, z=0, lx=100, ly=50, lz=80}
Position{type=10, x=150, y=190, z=80, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 1, 2, 1, 1, 0, 1, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 10, 14, 15, 3, 9, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
391
——————————————————————————————————————————第13层——————————————————————————————————————
77
装不完，装了13
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 13.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 10, 14, 15, 3, 9, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 3, 8, 9, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[2, 3, 8, 9, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 8, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
20
——————————————————————————————————————————第4层——————————————————————————————————————
42
——————————————————————————————————————————第5层——————————————————————————————————————
50
——————————————————————————————————————————第6层——————————————————————————————————————
40
haha
Position{type=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=14, x=190, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=7, x=0, y=0, z=130, lx=180, ly=150, lz=20}
Position{type=3, x=250, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=8, x=250, y=0, z=70, lx=40, ly=170, lz=70}
Position{type=10, x=190, y=170, z=0, lx=100, ly=80, lz=50}
Position{type=10, x=190, y=170, z=50, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [0, 1, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [1, 1, 0, 0, 2, 1, 1, 0, 0, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[0, 1, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 0, 10, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
500
——————————————————————————————————————————第12层——————————————————————————————————————
500
装不完，装了12
addCuts——IloRange  : -infinity <= (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 - 12.0*n_9) <= 0.0无法将物品 [6, 1, 13, 4, 5, 7, 0, 10, 14, 15, 16, 17, 18]  放进袋子 9 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, -0.0, 1.1041861869287573E-13, -0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 2, 3, 9, 11, 12, 19]  放进袋子  5  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 1]
pattern good
排序前[0, 2, 3, 9, 11, 12, 19]
Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}
Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}
Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}
Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}
Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}
Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}
排序后[2, 19, 0, 3, 9, 11, 12]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
3
——————————————————————————————————————————第2层——————————————————————————————————————
8
——————————————————————————————————————————第3层——————————————————————————————————————
8
——————————————————————————————————————————第4层——————————————————————————————————————
8
——————————————————————————————————————————第5层——————————————————————————————————————
4
——————————————————————————————————————————第6层——————————————————————————————————————
20
haha
Position{type=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=14, x=190, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=3, x=250, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=8, x=250, y=0, z=70, lx=40, ly=170, lz=70}
Position{type=10, x=190, y=170, z=0, lx=100, ly=80, lz=50}
Position{type=10, x=190, y=170, z=50, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [1, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2
patten : [0, 1, 0, 0, 2, 1, 1, 1, 0, 1, 0, 1, 2, 3, 0, 2]
pattern good
排序前[1, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18]
Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}
Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}
Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}
Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}
Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}
Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}
Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}
Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}
Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}
Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}
Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}
排序后[6, 1, 13, 4, 5, 7, 10, 8, 14, 15, 16, 17, 18]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
32
——————————————————————————————————————————第3层——————————————————————————————————————
101
——————————————————————————————————————————第4层——————————————————————————————————————
379
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
——————————————————————————————————————————第11层——————————————————————————————————————
337
——————————————————————————————————————————第12层——————————————————————————————————————
500
haha
Position{type=5, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, x=0, y=0, z=130, lx=220, ly=180, lz=40}
Position{type=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=6, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=9, x=280, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, x=0, y=310, z=0, lx=180, ly=20, lz=150}
Position{type=12, x=280, y=180, z=0, lx=30, ly=150, lz=120}
Position{type=12, x=250, y=200, z=0, lx=30, ly=120, lz=150}
Position{type=13, x=310, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=310, y=120, z=0, lx=40, ly=120, lz=90}
Position{type=13, x=310, y=240, z=0, lx=40, ly=90, lz=120}
needToSolve=true needToAddCut=false
*   369    17      integral     0        1.7000        1.5534     4116    8.63%

Clique cuts applied:  25
Cover cuts applied:  17
Implied bound cuts applied:  2
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  1
User cuts applied:  309

Root node processing (before b&c):
  Real time             =    2.30 sec. (14.15 ticks)
Sequential b&c:
  Real time             =    9.47 sec. (118.07 ticks)
                          ------------
Total (root+branch&cut) =   11.76 sec. (132.22 ticks)
!!Thread down
1.7000000000000441
[-0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
Total time =11.824s
——————————————————————————————————————————————————
