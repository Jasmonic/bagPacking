[8, 5, 3]
[Item{type=0, id=0, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=1, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=2, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=3, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=4, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=5, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=6, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=7, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=8, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=9, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=10, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=11, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=12, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=13, p=70, q=70, r=200, num=1, volume=980000}, Item{type=0, id=14, p=70, q=70, r=200, num=1, volume=980000}, Item{type=1, id=15, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=16, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=17, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=18, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=19, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=20, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=21, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=22, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=23, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=24, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=25, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=26, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=27, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=28, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=29, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=30, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=31, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=32, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=33, p=60, q=60, r=220, num=1, volume=792000}, Item{type=1, id=34, p=60, q=60, r=220, num=1, volume=792000}]
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=8}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=5}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=3}]
Instance{bagTypeCount=3, itemTypeCount=2, bagCount=16, itemCount=35}
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=8}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=5}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=3}]
3
6.0
6.0
6.0
6.0
6.0
6.0
6.0
6.0
11.0
11.0
11.0
11.0
11.0
0,15
7.0
7.0
7.0
7.0
7.0
7.0
7.0
7.0
14.0
14.0
14.0
14.0
14.0
15,35
IloModel  {
IloMinimize  : (0.4*n_0 + 0.4*n_1 + 0.4*n_2 + 0.4*n_3 + 0.4*n_4 + 0.4*n_5 + 0.4*n_6 + 0.4*n_7 + 0.7*n_8 + 0.7*n_9 + 0.7*n_10 + 0.7*n_11 + 0.7*n_12 + 1.0*n_13 + 1.0*n_14 + 1.0*n_15)
IloRange bag_and_box0 : 1.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 + 1.0*s_0,13 + 1.0*s_0,14 + 1.0*s_0,15) <= 1.0
IloRange bag_and_box1 : 1.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 + 1.0*s_1,13 + 1.0*s_1,14 + 1.0*s_1,15) <= 1.0
IloRange bag_and_box2 : 1.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15) <= 1.0
IloRange bag_and_box3 : 1.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15) <= 1.0
IloRange bag_and_box4 : 1.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15) <= 1.0
IloRange bag_and_box5 : 1.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15) <= 1.0
IloRange bag_and_box6 : 1.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 + 1.0*s_6,13 + 1.0*s_6,14 + 1.0*s_6,15) <= 1.0
IloRange bag_and_box7 : 1.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 + 1.0*s_7,13 + 1.0*s_7,14 + 1.0*s_7,15) <= 1.0
IloRange bag_and_box8 : 1.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 + 1.0*s_8,13 + 1.0*s_8,14 + 1.0*s_8,15) <= 1.0
IloRange bag_and_box9 : 1.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 + 1.0*s_9,13 + 1.0*s_9,14 + 1.0*s_9,15) <= 1.0
IloRange bag_and_box10 : 1.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 + 1.0*s_10,13 + 1.0*s_10,14 + 1.0*s_10,15) <= 1.0
IloRange bag_and_box11 : 1.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 + 1.0*s_11,13 + 1.0*s_11,14 + 1.0*s_11,15) <= 1.0
IloRange bag_and_box12 : 1.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 + 1.0*s_12,13 + 1.0*s_12,14 + 1.0*s_12,15) <= 1.0
IloRange bag_and_box13 : 1.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 + 1.0*s_13,12 + 1.0*s_13,13 + 1.0*s_13,14 + 1.0*s_13,15) <= 1.0
IloRange bag_and_box14 : 1.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 + 1.0*s_14,10 + 1.0*s_14,11 + 1.0*s_14,12 + 1.0*s_14,13 + 1.0*s_14,14 + 1.0*s_14,15) <= 1.0
IloRange bag_and_box15 : 1.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 + 1.0*s_15,12 + 1.0*s_15,13 + 1.0*s_15,14 + 1.0*s_15,15) <= 1.0
IloRange bag_and_box16 : 1.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 + 1.0*s_16,12 + 1.0*s_16,13 + 1.0*s_16,14 + 1.0*s_16,15) <= 1.0
IloRange bag_and_box17 : 1.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 + 1.0*s_17,12 + 1.0*s_17,13 + 1.0*s_17,14 + 1.0*s_17,15) <= 1.0
IloRange bag_and_box18 : 1.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 + 1.0*s_18,12 + 1.0*s_18,13 + 1.0*s_18,14 + 1.0*s_18,15) <= 1.0
IloRange bag_and_box19 : 1.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 + 1.0*s_19,12 + 1.0*s_19,13 + 1.0*s_19,14 + 1.0*s_19,15) <= 1.0
IloRange bag_and_box20 : 1.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 + 1.0*s_20,12 + 1.0*s_20,13 + 1.0*s_20,14 + 1.0*s_20,15) <= 1.0
IloRange bag_and_box21 : 1.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 + 1.0*s_21,12 + 1.0*s_21,13 + 1.0*s_21,14 + 1.0*s_21,15) <= 1.0
IloRange bag_and_box22 : 1.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 + 1.0*s_22,12 + 1.0*s_22,13 + 1.0*s_22,14 + 1.0*s_22,15) <= 1.0
IloRange bag_and_box23 : 1.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 + 1.0*s_23,12 + 1.0*s_23,13 + 1.0*s_23,14 + 1.0*s_23,15) <= 1.0
IloRange bag_and_box24 : 1.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 + 1.0*s_24,12 + 1.0*s_24,13 + 1.0*s_24,14 + 1.0*s_24,15) <= 1.0
IloRange bag_and_box25 : 1.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 + 1.0*s_25,12 + 1.0*s_25,13 + 1.0*s_25,14 + 1.0*s_25,15) <= 1.0
IloRange bag_and_box26 : 1.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 + 1.0*s_26,12 + 1.0*s_26,13 + 1.0*s_26,14 + 1.0*s_26,15) <= 1.0
IloRange bag_and_box27 : 1.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 + 1.0*s_27,12 + 1.0*s_27,13 + 1.0*s_27,14 + 1.0*s_27,15) <= 1.0
IloRange bag_and_box28 : 1.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 + 1.0*s_28,12 + 1.0*s_28,13 + 1.0*s_28,14 + 1.0*s_28,15) <= 1.0
IloRange bag_and_box29 : 1.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 + 1.0*s_29,12 + 1.0*s_29,13 + 1.0*s_29,14 + 1.0*s_29,15) <= 1.0
IloRange bag_and_box30 : 1.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 + 1.0*s_30,12 + 1.0*s_30,13 + 1.0*s_30,14 + 1.0*s_30,15) <= 1.0
IloRange bag_and_box31 : 1.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 + 1.0*s_31,12 + 1.0*s_31,13 + 1.0*s_31,14 + 1.0*s_31,15) <= 1.0
IloRange bag_and_box32 : 1.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 + 1.0*s_32,12 + 1.0*s_32,13 + 1.0*s_32,14 + 1.0*s_32,15) <= 1.0
IloRange bag_and_box33 : 1.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 + 1.0*s_33,12 + 1.0*s_33,13 + 1.0*s_33,14 + 1.0*s_33,15) <= 1.0
IloRange bag_and_box34 : 1.0 <= (1.0*s_34,0 + 1.0*s_34,1 + 1.0*s_34,2 + 1.0*s_34,3 + 1.0*s_34,4 + 1.0*s_34,5 + 1.0*s_34,6 + 1.0*s_34,7 + 1.0*s_34,8 + 1.0*s_34,9 + 1.0*s_34,10 + 1.0*s_34,11 + 1.0*s_34,12 + 1.0*s_34,13 + 1.0*s_34,14 + 1.0*s_34,15) <= 1.0
IloRange Volume_0 : -infinity <= (980000.0*s_0,0 + 980000.0*s_1,0 + 980000.0*s_2,0 + 980000.0*s_3,0 + 980000.0*s_4,0 + 980000.0*s_5,0 + 980000.0*s_6,0 + 980000.0*s_7,0 + 980000.0*s_8,0 + 980000.0*s_9,0 + 980000.0*s_10,0 + 980000.0*s_11,0 + 980000.0*s_12,0 + 980000.0*s_13,0 + 980000.0*s_14,0 + 792000.0*s_15,0 + 792000.0*s_16,0 + 792000.0*s_17,0 + 792000.0*s_18,0 + 792000.0*s_19,0 + 792000.0*s_20,0 + 792000.0*s_21,0 + 792000.0*s_22,0 + 792000.0*s_23,0 + 792000.0*s_24,0 + 792000.0*s_25,0 + 792000.0*s_26,0 + 792000.0*s_27,0 + 792000.0*s_28,0 + 792000.0*s_29,0 + 792000.0*s_30,0 + 792000.0*s_31,0 + 792000.0*s_32,0 + 792000.0*s_33,0 + 792000.0*s_34,0 - 6305299.284992639*n_0) <= 0.0
IloRange Volume_1 : -infinity <= (980000.0*s_0,1 + 980000.0*s_1,1 + 980000.0*s_2,1 + 980000.0*s_3,1 + 980000.0*s_4,1 + 980000.0*s_5,1 + 980000.0*s_6,1 + 980000.0*s_7,1 + 980000.0*s_8,1 + 980000.0*s_9,1 + 980000.0*s_10,1 + 980000.0*s_11,1 + 980000.0*s_12,1 + 980000.0*s_13,1 + 980000.0*s_14,1 + 792000.0*s_15,1 + 792000.0*s_16,1 + 792000.0*s_17,1 + 792000.0*s_18,1 + 792000.0*s_19,1 + 792000.0*s_20,1 + 792000.0*s_21,1 + 792000.0*s_22,1 + 792000.0*s_23,1 + 792000.0*s_24,1 + 792000.0*s_25,1 + 792000.0*s_26,1 + 792000.0*s_27,1 + 792000.0*s_28,1 + 792000.0*s_29,1 + 792000.0*s_30,1 + 792000.0*s_31,1 + 792000.0*s_32,1 + 792000.0*s_33,1 + 792000.0*s_34,1 - 6305299.284992639*n_1) <= 0.0
IloRange Volume_2 : -infinity <= (980000.0*s_0,2 + 980000.0*s_1,2 + 980000.0*s_2,2 + 980000.0*s_3,2 + 980000.0*s_4,2 + 980000.0*s_5,2 + 980000.0*s_6,2 + 980000.0*s_7,2 + 980000.0*s_8,2 + 980000.0*s_9,2 + 980000.0*s_10,2 + 980000.0*s_11,2 + 980000.0*s_12,2 + 980000.0*s_13,2 + 980000.0*s_14,2 + 792000.0*s_15,2 + 792000.0*s_16,2 + 792000.0*s_17,2 + 792000.0*s_18,2 + 792000.0*s_19,2 + 792000.0*s_20,2 + 792000.0*s_21,2 + 792000.0*s_22,2 + 792000.0*s_23,2 + 792000.0*s_24,2 + 792000.0*s_25,2 + 792000.0*s_26,2 + 792000.0*s_27,2 + 792000.0*s_28,2 + 792000.0*s_29,2 + 792000.0*s_30,2 + 792000.0*s_31,2 + 792000.0*s_32,2 + 792000.0*s_33,2 + 792000.0*s_34,2 - 6305299.284992639*n_2) <= 0.0
IloRange Volume_3 : -infinity <= (980000.0*s_0,3 + 980000.0*s_1,3 + 980000.0*s_2,3 + 980000.0*s_3,3 + 980000.0*s_4,3 + 980000.0*s_5,3 + 980000.0*s_6,3 + 980000.0*s_7,3 + 980000.0*s_8,3 + 980000.0*s_9,3 + 980000.0*s_10,3 + 980000.0*s_11,3 + 980000.0*s_12,3 + 980000.0*s_13,3 + 980000.0*s_14,3 + 792000.0*s_15,3 + 792000.0*s_16,3 + 792000.0*s_17,3 + 792000.0*s_18,3 + 792000.0*s_19,3 + 792000.0*s_20,3 + 792000.0*s_21,3 + 792000.0*s_22,3 + 792000.0*s_23,3 + 792000.0*s_24,3 + 792000.0*s_25,3 + 792000.0*s_26,3 + 792000.0*s_27,3 + 792000.0*s_28,3 + 792000.0*s_29,3 + 792000.0*s_30,3 + 792000.0*s_31,3 + 792000.0*s_32,3 + 792000.0*s_33,3 + 792000.0*s_34,3 - 6305299.284992639*n_3) <= 0.0
IloRange Volume_4 : -infinity <= (980000.0*s_0,4 + 980000.0*s_1,4 + 980000.0*s_2,4 + 980000.0*s_3,4 + 980000.0*s_4,4 + 980000.0*s_5,4 + 980000.0*s_6,4 + 980000.0*s_7,4 + 980000.0*s_8,4 + 980000.0*s_9,4 + 980000.0*s_10,4 + 980000.0*s_11,4 + 980000.0*s_12,4 + 980000.0*s_13,4 + 980000.0*s_14,4 + 792000.0*s_15,4 + 792000.0*s_16,4 + 792000.0*s_17,4 + 792000.0*s_18,4 + 792000.0*s_19,4 + 792000.0*s_20,4 + 792000.0*s_21,4 + 792000.0*s_22,4 + 792000.0*s_23,4 + 792000.0*s_24,4 + 792000.0*s_25,4 + 792000.0*s_26,4 + 792000.0*s_27,4 + 792000.0*s_28,4 + 792000.0*s_29,4 + 792000.0*s_30,4 + 792000.0*s_31,4 + 792000.0*s_32,4 + 792000.0*s_33,4 + 792000.0*s_34,4 - 6305299.284992639*n_4) <= 0.0
IloRange Volume_5 : -infinity <= (980000.0*s_0,5 + 980000.0*s_1,5 + 980000.0*s_2,5 + 980000.0*s_3,5 + 980000.0*s_4,5 + 980000.0*s_5,5 + 980000.0*s_6,5 + 980000.0*s_7,5 + 980000.0*s_8,5 + 980000.0*s_9,5 + 980000.0*s_10,5 + 980000.0*s_11,5 + 980000.0*s_12,5 + 980000.0*s_13,5 + 980000.0*s_14,5 + 792000.0*s_15,5 + 792000.0*s_16,5 + 792000.0*s_17,5 + 792000.0*s_18,5 + 792000.0*s_19,5 + 792000.0*s_20,5 + 792000.0*s_21,5 + 792000.0*s_22,5 + 792000.0*s_23,5 + 792000.0*s_24,5 + 792000.0*s_25,5 + 792000.0*s_26,5 + 792000.0*s_27,5 + 792000.0*s_28,5 + 792000.0*s_29,5 + 792000.0*s_30,5 + 792000.0*s_31,5 + 792000.0*s_32,5 + 792000.0*s_33,5 + 792000.0*s_34,5 - 6305299.284992639*n_5) <= 0.0
IloRange Volume_6 : -infinity <= (980000.0*s_0,6 + 980000.0*s_1,6 + 980000.0*s_2,6 + 980000.0*s_3,6 + 980000.0*s_4,6 + 980000.0*s_5,6 + 980000.0*s_6,6 + 980000.0*s_7,6 + 980000.0*s_8,6 + 980000.0*s_9,6 + 980000.0*s_10,6 + 980000.0*s_11,6 + 980000.0*s_12,6 + 980000.0*s_13,6 + 980000.0*s_14,6 + 792000.0*s_15,6 + 792000.0*s_16,6 + 792000.0*s_17,6 + 792000.0*s_18,6 + 792000.0*s_19,6 + 792000.0*s_20,6 + 792000.0*s_21,6 + 792000.0*s_22,6 + 792000.0*s_23,6 + 792000.0*s_24,6 + 792000.0*s_25,6 + 792000.0*s_26,6 + 792000.0*s_27,6 + 792000.0*s_28,6 + 792000.0*s_29,6 + 792000.0*s_30,6 + 792000.0*s_31,6 + 792000.0*s_32,6 + 792000.0*s_33,6 + 792000.0*s_34,6 - 6305299.284992639*n_6) <= 0.0
IloRange Volume_7 : -infinity <= (980000.0*s_0,7 + 980000.0*s_1,7 + 980000.0*s_2,7 + 980000.0*s_3,7 + 980000.0*s_4,7 + 980000.0*s_5,7 + 980000.0*s_6,7 + 980000.0*s_7,7 + 980000.0*s_8,7 + 980000.0*s_9,7 + 980000.0*s_10,7 + 980000.0*s_11,7 + 980000.0*s_12,7 + 980000.0*s_13,7 + 980000.0*s_14,7 + 792000.0*s_15,7 + 792000.0*s_16,7 + 792000.0*s_17,7 + 792000.0*s_18,7 + 792000.0*s_19,7 + 792000.0*s_20,7 + 792000.0*s_21,7 + 792000.0*s_22,7 + 792000.0*s_23,7 + 792000.0*s_24,7 + 792000.0*s_25,7 + 792000.0*s_26,7 + 792000.0*s_27,7 + 792000.0*s_28,7 + 792000.0*s_29,7 + 792000.0*s_30,7 + 792000.0*s_31,7 + 792000.0*s_32,7 + 792000.0*s_33,7 + 792000.0*s_34,7 - 6305299.284992639*n_7) <= 0.0
IloRange Volume_8 : -infinity <= (980000.0*s_0,8 + 980000.0*s_1,8 + 980000.0*s_2,8 + 980000.0*s_3,8 + 980000.0*s_4,8 + 980000.0*s_5,8 + 980000.0*s_6,8 + 980000.0*s_7,8 + 980000.0*s_8,8 + 980000.0*s_9,8 + 980000.0*s_10,8 + 980000.0*s_11,8 + 980000.0*s_12,8 + 980000.0*s_13,8 + 980000.0*s_14,8 + 792000.0*s_15,8 + 792000.0*s_16,8 + 792000.0*s_17,8 + 792000.0*s_18,8 + 792000.0*s_19,8 + 792000.0*s_20,8 + 792000.0*s_21,8 + 792000.0*s_22,8 + 792000.0*s_23,8 + 792000.0*s_24,8 + 792000.0*s_25,8 + 792000.0*s_26,8 + 792000.0*s_27,8 + 792000.0*s_28,8 + 792000.0*s_29,8 + 792000.0*s_30,8 + 792000.0*s_31,8 + 792000.0*s_32,8 + 792000.0*s_33,8 + 792000.0*s_34,8 - 1.1340839946075162E7*n_8) <= 0.0
IloRange Volume_9 : -infinity <= (980000.0*s_0,9 + 980000.0*s_1,9 + 980000.0*s_2,9 + 980000.0*s_3,9 + 980000.0*s_4,9 + 980000.0*s_5,9 + 980000.0*s_6,9 + 980000.0*s_7,9 + 980000.0*s_8,9 + 980000.0*s_9,9 + 980000.0*s_10,9 + 980000.0*s_11,9 + 980000.0*s_12,9 + 980000.0*s_13,9 + 980000.0*s_14,9 + 792000.0*s_15,9 + 792000.0*s_16,9 + 792000.0*s_17,9 + 792000.0*s_18,9 + 792000.0*s_19,9 + 792000.0*s_20,9 + 792000.0*s_21,9 + 792000.0*s_22,9 + 792000.0*s_23,9 + 792000.0*s_24,9 + 792000.0*s_25,9 + 792000.0*s_26,9 + 792000.0*s_27,9 + 792000.0*s_28,9 + 792000.0*s_29,9 + 792000.0*s_30,9 + 792000.0*s_31,9 + 792000.0*s_32,9 + 792000.0*s_33,9 + 792000.0*s_34,9 - 1.1340839946075162E7*n_9) <= 0.0
IloRange Volume_10 : -infinity <= (980000.0*s_0,10 + 980000.0*s_1,10 + 980000.0*s_2,10 + 980000.0*s_3,10 + 980000.0*s_4,10 + 980000.0*s_5,10 + 980000.0*s_6,10 + 980000.0*s_7,10 + 980000.0*s_8,10 + 980000.0*s_9,10 + 980000.0*s_10,10 + 980000.0*s_11,10 + 980000.0*s_12,10 + 980000.0*s_13,10 + 980000.0*s_14,10 + 792000.0*s_15,10 + 792000.0*s_16,10 + 792000.0*s_17,10 + 792000.0*s_18,10 + 792000.0*s_19,10 + 792000.0*s_20,10 + 792000.0*s_21,10 + 792000.0*s_22,10 + 792000.0*s_23,10 + 792000.0*s_24,10 + 792000.0*s_25,10 + 792000.0*s_26,10 + 792000.0*s_27,10 + 792000.0*s_28,10 + 792000.0*s_29,10 + 792000.0*s_30,10 + 792000.0*s_31,10 + 792000.0*s_32,10 + 792000.0*s_33,10 + 792000.0*s_34,10 - 1.1340839946075162E7*n_10) <= 0.0
IloRange Volume_11 : -infinity <= (980000.0*s_0,11 + 980000.0*s_1,11 + 980000.0*s_2,11 + 980000.0*s_3,11 + 980000.0*s_4,11 + 980000.0*s_5,11 + 980000.0*s_6,11 + 980000.0*s_7,11 + 980000.0*s_8,11 + 980000.0*s_9,11 + 980000.0*s_10,11 + 980000.0*s_11,11 + 980000.0*s_12,11 + 980000.0*s_13,11 + 980000.0*s_14,11 + 792000.0*s_15,11 + 792000.0*s_16,11 + 792000.0*s_17,11 + 792000.0*s_18,11 + 792000.0*s_19,11 + 792000.0*s_20,11 + 792000.0*s_21,11 + 792000.0*s_22,11 + 792000.0*s_23,11 + 792000.0*s_24,11 + 792000.0*s_25,11 + 792000.0*s_26,11 + 792000.0*s_27,11 + 792000.0*s_28,11 + 792000.0*s_29,11 + 792000.0*s_30,11 + 792000.0*s_31,11 + 792000.0*s_32,11 + 792000.0*s_33,11 + 792000.0*s_34,11 - 1.1340839946075162E7*n_11) <= 0.0
IloRange Volume_12 : -infinity <= (980000.0*s_0,12 + 980000.0*s_1,12 + 980000.0*s_2,12 + 980000.0*s_3,12 + 980000.0*s_4,12 + 980000.0*s_5,12 + 980000.0*s_6,12 + 980000.0*s_7,12 + 980000.0*s_8,12 + 980000.0*s_9,12 + 980000.0*s_10,12 + 980000.0*s_11,12 + 980000.0*s_12,12 + 980000.0*s_13,12 + 980000.0*s_14,12 + 792000.0*s_15,12 + 792000.0*s_16,12 + 792000.0*s_17,12 + 792000.0*s_18,12 + 792000.0*s_19,12 + 792000.0*s_20,12 + 792000.0*s_21,12 + 792000.0*s_22,12 + 792000.0*s_23,12 + 792000.0*s_24,12 + 792000.0*s_25,12 + 792000.0*s_26,12 + 792000.0*s_27,12 + 792000.0*s_28,12 + 792000.0*s_29,12 + 792000.0*s_30,12 + 792000.0*s_31,12 + 792000.0*s_32,12 + 792000.0*s_33,12 + 792000.0*s_34,12 - 1.1340839946075162E7*n_12) <= 0.0
IloRange Volume_13 : -infinity <= (980000.0*s_0,13 + 980000.0*s_1,13 + 980000.0*s_2,13 + 980000.0*s_3,13 + 980000.0*s_4,13 + 980000.0*s_5,13 + 980000.0*s_6,13 + 980000.0*s_7,13 + 980000.0*s_8,13 + 980000.0*s_9,13 + 980000.0*s_10,13 + 980000.0*s_11,13 + 980000.0*s_12,13 + 980000.0*s_13,13 + 980000.0*s_14,13 + 792000.0*s_15,13 + 792000.0*s_16,13 + 792000.0*s_17,13 + 792000.0*s_18,13 + 792000.0*s_19,13 + 792000.0*s_20,13 + 792000.0*s_21,13 + 792000.0*s_22,13 + 792000.0*s_23,13 + 792000.0*s_24,13 + 792000.0*s_25,13 + 792000.0*s_26,13 + 792000.0*s_27,13 + 792000.0*s_28,13 + 792000.0*s_29,13 + 792000.0*s_30,13 + 792000.0*s_31,13 + 792000.0*s_32,13 + 792000.0*s_33,13 + 792000.0*s_34,13 - 1.9635004901018865E7*n_13) <= 0.0
IloRange Volume_14 : -infinity <= (980000.0*s_0,14 + 980000.0*s_1,14 + 980000.0*s_2,14 + 980000.0*s_3,14 + 980000.0*s_4,14 + 980000.0*s_5,14 + 980000.0*s_6,14 + 980000.0*s_7,14 + 980000.0*s_8,14 + 980000.0*s_9,14 + 980000.0*s_10,14 + 980000.0*s_11,14 + 980000.0*s_12,14 + 980000.0*s_13,14 + 980000.0*s_14,14 + 792000.0*s_15,14 + 792000.0*s_16,14 + 792000.0*s_17,14 + 792000.0*s_18,14 + 792000.0*s_19,14 + 792000.0*s_20,14 + 792000.0*s_21,14 + 792000.0*s_22,14 + 792000.0*s_23,14 + 792000.0*s_24,14 + 792000.0*s_25,14 + 792000.0*s_26,14 + 792000.0*s_27,14 + 792000.0*s_28,14 + 792000.0*s_29,14 + 792000.0*s_30,14 + 792000.0*s_31,14 + 792000.0*s_32,14 + 792000.0*s_33,14 + 792000.0*s_34,14 - 1.9635004901018865E7*n_14) <= 0.0
IloRange Volume_15 : -infinity <= (980000.0*s_0,15 + 980000.0*s_1,15 + 980000.0*s_2,15 + 980000.0*s_3,15 + 980000.0*s_4,15 + 980000.0*s_5,15 + 980000.0*s_6,15 + 980000.0*s_7,15 + 980000.0*s_8,15 + 980000.0*s_9,15 + 980000.0*s_10,15 + 980000.0*s_11,15 + 980000.0*s_12,15 + 980000.0*s_13,15 + 980000.0*s_14,15 + 792000.0*s_15,15 + 792000.0*s_16,15 + 792000.0*s_17,15 + 792000.0*s_18,15 + 792000.0*s_19,15 + 792000.0*s_20,15 + 792000.0*s_21,15 + 792000.0*s_22,15 + 792000.0*s_23,15 + 792000.0*s_24,15 + 792000.0*s_25,15 + 792000.0*s_26,15 + 792000.0*s_27,15 + 792000.0*s_28,15 + 792000.0*s_29,15 + 792000.0*s_30,15 + 792000.0*s_31,15 + 792000.0*s_32,15 + 792000.0*s_33,15 + 792000.0*s_34,15 - 1.9635004901018865E7*n_15) <= 0.0
IloRange CutC_0_0 : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_6,0 + 1.0*s_7,0 + 1.0*s_8,0 + 1.0*s_9,0 + 1.0*s_10,0 + 1.0*s_11,0 + 1.0*s_12,0 + 1.0*s_13,0 + 1.0*s_14,0 - 6.0*n_0) <= 0.0
IloRange CutC_0_1 : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_10,1 + 1.0*s_11,1 + 1.0*s_12,1 + 1.0*s_13,1 + 1.0*s_14,1 - 6.0*n_1) <= 0.0
IloRange CutC_0_2 : -infinity <= (1.0*s_0,2 + 1.0*s_1,2 + 1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_12,2 + 1.0*s_13,2 + 1.0*s_14,2 - 6.0*n_2) <= 0.0
IloRange CutC_0_3 : -infinity <= (1.0*s_0,3 + 1.0*s_1,3 + 1.0*s_2,3 + 1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_14,3 - 6.0*n_3) <= 0.0
IloRange CutC_0_4 : -infinity <= (1.0*s_0,4 + 1.0*s_1,4 + 1.0*s_2,4 + 1.0*s_3,4 + 1.0*s_4,4 + 1.0*s_5,4 + 1.0*s_6,4 + 1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_14,4 - 6.0*n_4) <= 0.0
IloRange CutC_0_5 : -infinity <= (1.0*s_0,5 + 1.0*s_1,5 + 1.0*s_2,5 + 1.0*s_3,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_6,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_10,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_13,5 + 1.0*s_14,5 - 6.0*n_5) <= 0.0
IloRange CutC_0_6 : -infinity <= (1.0*s_0,6 + 1.0*s_1,6 + 1.0*s_2,6 + 1.0*s_3,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_6,6 + 1.0*s_7,6 + 1.0*s_8,6 + 1.0*s_9,6 + 1.0*s_10,6 + 1.0*s_11,6 + 1.0*s_12,6 + 1.0*s_13,6 + 1.0*s_14,6 - 6.0*n_6) <= 0.0
IloRange CutC_0_7 : -infinity <= (1.0*s_0,7 + 1.0*s_1,7 + 1.0*s_2,7 + 1.0*s_3,7 + 1.0*s_4,7 + 1.0*s_5,7 + 1.0*s_6,7 + 1.0*s_7,7 + 1.0*s_8,7 + 1.0*s_9,7 + 1.0*s_10,7 + 1.0*s_11,7 + 1.0*s_12,7 + 1.0*s_13,7 + 1.0*s_14,7 - 6.0*n_7) <= 0.0
IloRange CutC_0_8 : -infinity <= (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 - 11.0*n_8) <= 0.0
IloRange CutC_0_9 : -infinity <= (1.0*s_0,9 + 1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 - 11.0*n_9) <= 0.0
IloRange CutC_0_10 : -infinity <= (1.0*s_0,10 + 1.0*s_1,10 + 1.0*s_2,10 + 1.0*s_3,10 + 1.0*s_4,10 + 1.0*s_5,10 + 1.0*s_6,10 + 1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 - 11.0*n_10) <= 0.0
IloRange CutC_0_11 : -infinity <= (1.0*s_0,11 + 1.0*s_1,11 + 1.0*s_2,11 + 1.0*s_3,11 + 1.0*s_4,11 + 1.0*s_5,11 + 1.0*s_6,11 + 1.0*s_7,11 + 1.0*s_8,11 + 1.0*s_9,11 + 1.0*s_10,11 + 1.0*s_11,11 + 1.0*s_12,11 + 1.0*s_13,11 + 1.0*s_14,11 - 11.0*n_11) <= 0.0
IloRange CutC_0_12 : -infinity <= (1.0*s_0,12 + 1.0*s_1,12 + 1.0*s_2,12 + 1.0*s_3,12 + 1.0*s_4,12 + 1.0*s_5,12 + 1.0*s_6,12 + 1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_10,12 + 1.0*s_11,12 + 1.0*s_12,12 + 1.0*s_13,12 + 1.0*s_14,12 - 11.0*n_12) <= 0.0
IloRange CutC_1_0 : -infinity <= (1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_19,0 + 1.0*s_20,0 + 1.0*s_21,0 + 1.0*s_22,0 + 1.0*s_23,0 + 1.0*s_24,0 + 1.0*s_25,0 + 1.0*s_26,0 + 1.0*s_27,0 + 1.0*s_28,0 + 1.0*s_29,0 + 1.0*s_30,0 + 1.0*s_31,0 + 1.0*s_32,0 + 1.0*s_33,0 + 1.0*s_34,0 - 7.0*n_0) <= 0.0
IloRange CutC_1_1 : -infinity <= (1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 + 1.0*s_26,1 + 1.0*s_27,1 + 1.0*s_28,1 + 1.0*s_29,1 + 1.0*s_30,1 + 1.0*s_31,1 + 1.0*s_32,1 + 1.0*s_33,1 + 1.0*s_34,1 - 7.0*n_1) <= 0.0
IloRange CutC_1_2 : -infinity <= (1.0*s_15,2 + 1.0*s_16,2 + 1.0*s_17,2 + 1.0*s_18,2 + 1.0*s_19,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 + 1.0*s_30,2 + 1.0*s_31,2 + 1.0*s_32,2 + 1.0*s_33,2 + 1.0*s_34,2 - 7.0*n_2) <= 0.0
IloRange CutC_1_3 : -infinity <= (1.0*s_15,3 + 1.0*s_16,3 + 1.0*s_17,3 + 1.0*s_18,3 + 1.0*s_19,3 + 1.0*s_20,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 + 1.0*s_33,3 + 1.0*s_34,3 - 7.0*n_3) <= 0.0
IloRange CutC_1_4 : -infinity <= (1.0*s_15,4 + 1.0*s_16,4 + 1.0*s_17,4 + 1.0*s_18,4 + 1.0*s_19,4 + 1.0*s_20,4 + 1.0*s_21,4 + 1.0*s_22,4 + 1.0*s_23,4 + 1.0*s_24,4 + 1.0*s_25,4 + 1.0*s_26,4 + 1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 + 1.0*s_34,4 - 7.0*n_4) <= 0.0
IloRange CutC_1_5 : -infinity <= (1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_19,5 + 1.0*s_20,5 + 1.0*s_21,5 + 1.0*s_22,5 + 1.0*s_23,5 + 1.0*s_24,5 + 1.0*s_25,5 + 1.0*s_26,5 + 1.0*s_27,5 + 1.0*s_28,5 + 1.0*s_29,5 + 1.0*s_30,5 + 1.0*s_31,5 + 1.0*s_32,5 + 1.0*s_33,5 + 1.0*s_34,5 - 7.0*n_5) <= 0.0
IloRange CutC_1_6 : -infinity <= (1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_19,6 + 1.0*s_20,6 + 1.0*s_21,6 + 1.0*s_22,6 + 1.0*s_23,6 + 1.0*s_24,6 + 1.0*s_25,6 + 1.0*s_26,6 + 1.0*s_27,6 + 1.0*s_28,6 + 1.0*s_29,6 + 1.0*s_30,6 + 1.0*s_31,6 + 1.0*s_32,6 + 1.0*s_33,6 + 1.0*s_34,6 - 7.0*n_6) <= 0.0
IloRange CutC_1_7 : -infinity <= (1.0*s_15,7 + 1.0*s_16,7 + 1.0*s_17,7 + 1.0*s_18,7 + 1.0*s_19,7 + 1.0*s_20,7 + 1.0*s_21,7 + 1.0*s_22,7 + 1.0*s_23,7 + 1.0*s_24,7 + 1.0*s_25,7 + 1.0*s_26,7 + 1.0*s_27,7 + 1.0*s_28,7 + 1.0*s_29,7 + 1.0*s_30,7 + 1.0*s_31,7 + 1.0*s_32,7 + 1.0*s_33,7 + 1.0*s_34,7 - 7.0*n_7) <= 0.0
IloRange CutC_1_8 : -infinity <= (1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 14.0*n_8) <= 0.0
IloRange CutC_1_9 : -infinity <= (1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 14.0*n_9) <= 0.0
IloRange CutC_1_10 : -infinity <= (1.0*s_15,10 + 1.0*s_16,10 + 1.0*s_17,10 + 1.0*s_18,10 + 1.0*s_19,10 + 1.0*s_20,10 + 1.0*s_21,10 + 1.0*s_22,10 + 1.0*s_23,10 + 1.0*s_24,10 + 1.0*s_25,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 14.0*n_10) <= 0.0
IloRange CutC_1_11 : -infinity <= (1.0*s_15,11 + 1.0*s_16,11 + 1.0*s_17,11 + 1.0*s_18,11 + 1.0*s_19,11 + 1.0*s_20,11 + 1.0*s_21,11 + 1.0*s_22,11 + 1.0*s_23,11 + 1.0*s_24,11 + 1.0*s_25,11 + 1.0*s_26,11 + 1.0*s_27,11 + 1.0*s_28,11 + 1.0*s_29,11 + 1.0*s_30,11 + 1.0*s_31,11 + 1.0*s_32,11 + 1.0*s_33,11 + 1.0*s_34,11 - 14.0*n_11) <= 0.0
IloRange CutC_1_12 : -infinity <= (1.0*s_15,12 + 1.0*s_16,12 + 1.0*s_17,12 + 1.0*s_18,12 + 1.0*s_19,12 + 1.0*s_20,12 + 1.0*s_21,12 + 1.0*s_22,12 + 1.0*s_23,12 + 1.0*s_24,12 + 1.0*s_25,12 + 1.0*s_26,12 + 1.0*s_27,12 + 1.0*s_28,12 + 1.0*s_29,12 + 1.0*s_30,12 + 1.0*s_31,12 + 1.0*s_32,12 + 1.0*s_33,12 + 1.0*s_34,12 - 14.0*n_12) <= 0.0
IloRange boxCut0,0 : 0.0 <= (1.0*s_0,0 - 1.0*s_1,0) <= infinity
IloRange boxCut0,1 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 - 1.0*s_1,1) <= infinity
IloRange boxCut0,2 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 - 1.0*s_1,2) <= infinity
IloRange boxCut0,3 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 - 1.0*s_1,3) <= infinity
IloRange boxCut0,4 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 - 1.0*s_1,4) <= infinity
IloRange boxCut0,5 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 - 1.0*s_1,5) <= infinity
IloRange boxCut0,6 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 - 1.0*s_1,6) <= infinity
IloRange boxCut0,7 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 - 1.0*s_1,7) <= infinity
IloRange boxCut0,8 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 - 1.0*s_1,8) <= infinity
IloRange boxCut0,9 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 - 1.0*s_1,9) <= infinity
IloRange boxCut0,10 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 - 1.0*s_1,10) <= infinity
IloRange boxCut0,11 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 - 1.0*s_1,11) <= infinity
IloRange boxCut0,12 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 - 1.0*s_1,12) <= infinity
IloRange boxCut0,13 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 + 1.0*s_0,13 - 1.0*s_1,13) <= infinity
IloRange boxCut0,14 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 + 1.0*s_0,13 + 1.0*s_0,14 - 1.0*s_1,14) <= infinity
IloRange boxCut0,15 : 0.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 + 1.0*s_0,13 + 1.0*s_0,14 + 1.0*s_0,15 - 1.0*s_1,15) <= infinity
IloRange boxCut1,0 : 0.0 <= (1.0*s_1,0 - 1.0*s_2,0) <= infinity
IloRange boxCut1,1 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 - 1.0*s_2,1) <= infinity
IloRange boxCut1,2 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 - 1.0*s_2,2) <= infinity
IloRange boxCut1,3 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 - 1.0*s_2,3) <= infinity
IloRange boxCut1,4 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 - 1.0*s_2,4) <= infinity
IloRange boxCut1,5 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 - 1.0*s_2,5) <= infinity
IloRange boxCut1,6 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 - 1.0*s_2,6) <= infinity
IloRange boxCut1,7 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 - 1.0*s_2,7) <= infinity
IloRange boxCut1,8 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 - 1.0*s_2,8) <= infinity
IloRange boxCut1,9 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 - 1.0*s_2,9) <= infinity
IloRange boxCut1,10 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 - 1.0*s_2,10) <= infinity
IloRange boxCut1,11 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 - 1.0*s_2,11) <= infinity
IloRange boxCut1,12 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 - 1.0*s_2,12) <= infinity
IloRange boxCut1,13 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 + 1.0*s_1,13 - 1.0*s_2,13) <= infinity
IloRange boxCut1,14 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 + 1.0*s_1,13 + 1.0*s_1,14 - 1.0*s_2,14) <= infinity
IloRange boxCut1,15 : 0.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 + 1.0*s_1,13 + 1.0*s_1,14 + 1.0*s_1,15 - 1.0*s_2,15) <= infinity
IloRange boxCut2,0 : 0.0 <= (1.0*s_2,0 - 1.0*s_3,0) <= infinity
IloRange boxCut2,1 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 - 1.0*s_3,1) <= infinity
IloRange boxCut2,2 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 - 1.0*s_3,2) <= infinity
IloRange boxCut2,3 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 - 1.0*s_3,3) <= infinity
IloRange boxCut2,4 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 - 1.0*s_3,4) <= infinity
IloRange boxCut2,5 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 - 1.0*s_3,5) <= infinity
IloRange boxCut2,6 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 - 1.0*s_3,6) <= infinity
IloRange boxCut2,7 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 - 1.0*s_3,7) <= infinity
IloRange boxCut2,8 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 - 1.0*s_3,8) <= infinity
IloRange boxCut2,9 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 - 1.0*s_3,9) <= infinity
IloRange boxCut2,10 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 - 1.0*s_3,10) <= infinity
IloRange boxCut2,11 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 - 1.0*s_3,11) <= infinity
IloRange boxCut2,12 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 - 1.0*s_3,12) <= infinity
IloRange boxCut2,13 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 - 1.0*s_3,13) <= infinity
IloRange boxCut2,14 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 - 1.0*s_3,14) <= infinity
IloRange boxCut2,15 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 - 1.0*s_3,15) <= infinity
IloRange boxCut3,0 : 0.0 <= (1.0*s_3,0 - 1.0*s_4,0) <= infinity
IloRange boxCut3,1 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 - 1.0*s_4,1) <= infinity
IloRange boxCut3,2 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 - 1.0*s_4,2) <= infinity
IloRange boxCut3,3 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 - 1.0*s_4,3) <= infinity
IloRange boxCut3,4 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 - 1.0*s_4,4) <= infinity
IloRange boxCut3,5 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 - 1.0*s_4,5) <= infinity
IloRange boxCut3,6 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 - 1.0*s_4,6) <= infinity
IloRange boxCut3,7 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 - 1.0*s_4,7) <= infinity
IloRange boxCut3,8 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 - 1.0*s_4,8) <= infinity
IloRange boxCut3,9 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 - 1.0*s_4,9) <= infinity
IloRange boxCut3,10 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 - 1.0*s_4,10) <= infinity
IloRange boxCut3,11 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 - 1.0*s_4,11) <= infinity
IloRange boxCut3,12 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 - 1.0*s_4,12) <= infinity
IloRange boxCut3,13 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 - 1.0*s_4,13) <= infinity
IloRange boxCut3,14 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 - 1.0*s_4,14) <= infinity
IloRange boxCut3,15 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 - 1.0*s_4,15) <= infinity
IloRange boxCut4,0 : 0.0 <= (1.0*s_4,0 - 1.0*s_5,0) <= infinity
IloRange boxCut4,1 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 - 1.0*s_5,1) <= infinity
IloRange boxCut4,2 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 - 1.0*s_5,2) <= infinity
IloRange boxCut4,3 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 - 1.0*s_5,3) <= infinity
IloRange boxCut4,4 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 - 1.0*s_5,4) <= infinity
IloRange boxCut4,5 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 - 1.0*s_5,5) <= infinity
IloRange boxCut4,6 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 - 1.0*s_5,6) <= infinity
IloRange boxCut4,7 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 - 1.0*s_5,7) <= infinity
IloRange boxCut4,8 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 - 1.0*s_5,8) <= infinity
IloRange boxCut4,9 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 - 1.0*s_5,9) <= infinity
IloRange boxCut4,10 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 - 1.0*s_5,10) <= infinity
IloRange boxCut4,11 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 - 1.0*s_5,11) <= infinity
IloRange boxCut4,12 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 - 1.0*s_5,12) <= infinity
IloRange boxCut4,13 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 - 1.0*s_5,13) <= infinity
IloRange boxCut4,14 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 - 1.0*s_5,14) <= infinity
IloRange boxCut4,15 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 - 1.0*s_5,15) <= infinity
IloRange boxCut5,0 : 0.0 <= (1.0*s_5,0 - 1.0*s_6,0) <= infinity
IloRange boxCut5,1 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 - 1.0*s_6,1) <= infinity
IloRange boxCut5,2 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 - 1.0*s_6,2) <= infinity
IloRange boxCut5,3 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 - 1.0*s_6,3) <= infinity
IloRange boxCut5,4 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 - 1.0*s_6,4) <= infinity
IloRange boxCut5,5 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 - 1.0*s_6,5) <= infinity
IloRange boxCut5,6 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 - 1.0*s_6,6) <= infinity
IloRange boxCut5,7 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 - 1.0*s_6,7) <= infinity
IloRange boxCut5,8 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 - 1.0*s_6,8) <= infinity
IloRange boxCut5,9 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 - 1.0*s_6,9) <= infinity
IloRange boxCut5,10 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 - 1.0*s_6,10) <= infinity
IloRange boxCut5,11 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 - 1.0*s_6,11) <= infinity
IloRange boxCut5,12 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 - 1.0*s_6,12) <= infinity
IloRange boxCut5,13 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 - 1.0*s_6,13) <= infinity
IloRange boxCut5,14 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 - 1.0*s_6,14) <= infinity
IloRange boxCut5,15 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 - 1.0*s_6,15) <= infinity
IloRange boxCut6,0 : 0.0 <= (1.0*s_6,0 - 1.0*s_7,0) <= infinity
IloRange boxCut6,1 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 - 1.0*s_7,1) <= infinity
IloRange boxCut6,2 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 - 1.0*s_7,2) <= infinity
IloRange boxCut6,3 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 - 1.0*s_7,3) <= infinity
IloRange boxCut6,4 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 - 1.0*s_7,4) <= infinity
IloRange boxCut6,5 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 - 1.0*s_7,5) <= infinity
IloRange boxCut6,6 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 - 1.0*s_7,6) <= infinity
IloRange boxCut6,7 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 - 1.0*s_7,7) <= infinity
IloRange boxCut6,8 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 - 1.0*s_7,8) <= infinity
IloRange boxCut6,9 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 - 1.0*s_7,9) <= infinity
IloRange boxCut6,10 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 - 1.0*s_7,10) <= infinity
IloRange boxCut6,11 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 - 1.0*s_7,11) <= infinity
IloRange boxCut6,12 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 - 1.0*s_7,12) <= infinity
IloRange boxCut6,13 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 + 1.0*s_6,13 - 1.0*s_7,13) <= infinity
IloRange boxCut6,14 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 + 1.0*s_6,13 + 1.0*s_6,14 - 1.0*s_7,14) <= infinity
IloRange boxCut6,15 : 0.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 + 1.0*s_6,13 + 1.0*s_6,14 + 1.0*s_6,15 - 1.0*s_7,15) <= infinity
IloRange boxCut7,0 : 0.0 <= (1.0*s_7,0 - 1.0*s_8,0) <= infinity
IloRange boxCut7,1 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 - 1.0*s_8,1) <= infinity
IloRange boxCut7,2 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 - 1.0*s_8,2) <= infinity
IloRange boxCut7,3 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 - 1.0*s_8,3) <= infinity
IloRange boxCut7,4 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 - 1.0*s_8,4) <= infinity
IloRange boxCut7,5 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 - 1.0*s_8,5) <= infinity
IloRange boxCut7,6 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 - 1.0*s_8,6) <= infinity
IloRange boxCut7,7 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 - 1.0*s_8,7) <= infinity
IloRange boxCut7,8 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 - 1.0*s_8,8) <= infinity
IloRange boxCut7,9 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 - 1.0*s_8,9) <= infinity
IloRange boxCut7,10 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 - 1.0*s_8,10) <= infinity
IloRange boxCut7,11 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 - 1.0*s_8,11) <= infinity
IloRange boxCut7,12 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 - 1.0*s_8,12) <= infinity
IloRange boxCut7,13 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 + 1.0*s_7,13 - 1.0*s_8,13) <= infinity
IloRange boxCut7,14 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 + 1.0*s_7,13 + 1.0*s_7,14 - 1.0*s_8,14) <= infinity
IloRange boxCut7,15 : 0.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 + 1.0*s_7,13 + 1.0*s_7,14 + 1.0*s_7,15 - 1.0*s_8,15) <= infinity
IloRange boxCut8,0 : 0.0 <= (1.0*s_8,0 - 1.0*s_9,0) <= infinity
IloRange boxCut8,1 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 - 1.0*s_9,1) <= infinity
IloRange boxCut8,2 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 - 1.0*s_9,2) <= infinity
IloRange boxCut8,3 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 - 1.0*s_9,3) <= infinity
IloRange boxCut8,4 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 - 1.0*s_9,4) <= infinity
IloRange boxCut8,5 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 - 1.0*s_9,5) <= infinity
IloRange boxCut8,6 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 - 1.0*s_9,6) <= infinity
IloRange boxCut8,7 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 - 1.0*s_9,7) <= infinity
IloRange boxCut8,8 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 - 1.0*s_9,8) <= infinity
IloRange boxCut8,9 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 - 1.0*s_9,9) <= infinity
IloRange boxCut8,10 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 - 1.0*s_9,10) <= infinity
IloRange boxCut8,11 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 - 1.0*s_9,11) <= infinity
IloRange boxCut8,12 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 - 1.0*s_9,12) <= infinity
IloRange boxCut8,13 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 + 1.0*s_8,13 - 1.0*s_9,13) <= infinity
IloRange boxCut8,14 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 + 1.0*s_8,13 + 1.0*s_8,14 - 1.0*s_9,14) <= infinity
IloRange boxCut8,15 : 0.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 + 1.0*s_8,13 + 1.0*s_8,14 + 1.0*s_8,15 - 1.0*s_9,15) <= infinity
IloRange boxCut9,0 : 0.0 <= (1.0*s_9,0 - 1.0*s_10,0) <= infinity
IloRange boxCut9,1 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 - 1.0*s_10,1) <= infinity
IloRange boxCut9,2 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 - 1.0*s_10,2) <= infinity
IloRange boxCut9,3 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 - 1.0*s_10,3) <= infinity
IloRange boxCut9,4 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 - 1.0*s_10,4) <= infinity
IloRange boxCut9,5 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 - 1.0*s_10,5) <= infinity
IloRange boxCut9,6 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 - 1.0*s_10,6) <= infinity
IloRange boxCut9,7 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 - 1.0*s_10,7) <= infinity
IloRange boxCut9,8 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 - 1.0*s_10,8) <= infinity
IloRange boxCut9,9 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 - 1.0*s_10,9) <= infinity
IloRange boxCut9,10 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 - 1.0*s_10,10) <= infinity
IloRange boxCut9,11 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 - 1.0*s_10,11) <= infinity
IloRange boxCut9,12 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 - 1.0*s_10,12) <= infinity
IloRange boxCut9,13 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 + 1.0*s_9,13 - 1.0*s_10,13) <= infinity
IloRange boxCut9,14 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 + 1.0*s_9,13 + 1.0*s_9,14 - 1.0*s_10,14) <= infinity
IloRange boxCut9,15 : 0.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 + 1.0*s_9,13 + 1.0*s_9,14 + 1.0*s_9,15 - 1.0*s_10,15) <= infinity
IloRange boxCut10,0 : 0.0 <= (1.0*s_10,0 - 1.0*s_11,0) <= infinity
IloRange boxCut10,1 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 - 1.0*s_11,1) <= infinity
IloRange boxCut10,2 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 - 1.0*s_11,2) <= infinity
IloRange boxCut10,3 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 - 1.0*s_11,3) <= infinity
IloRange boxCut10,4 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 - 1.0*s_11,4) <= infinity
IloRange boxCut10,5 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 - 1.0*s_11,5) <= infinity
IloRange boxCut10,6 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 - 1.0*s_11,6) <= infinity
IloRange boxCut10,7 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 - 1.0*s_11,7) <= infinity
IloRange boxCut10,8 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 - 1.0*s_11,8) <= infinity
IloRange boxCut10,9 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 - 1.0*s_11,9) <= infinity
IloRange boxCut10,10 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 - 1.0*s_11,10) <= infinity
IloRange boxCut10,11 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 - 1.0*s_11,11) <= infinity
IloRange boxCut10,12 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 - 1.0*s_11,12) <= infinity
IloRange boxCut10,13 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 + 1.0*s_10,13 - 1.0*s_11,13) <= infinity
IloRange boxCut10,14 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 + 1.0*s_10,13 + 1.0*s_10,14 - 1.0*s_11,14) <= infinity
IloRange boxCut10,15 : 0.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 + 1.0*s_10,13 + 1.0*s_10,14 + 1.0*s_10,15 - 1.0*s_11,15) <= infinity
IloRange boxCut11,0 : 0.0 <= (1.0*s_11,0 - 1.0*s_12,0) <= infinity
IloRange boxCut11,1 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 - 1.0*s_12,1) <= infinity
IloRange boxCut11,2 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 - 1.0*s_12,2) <= infinity
IloRange boxCut11,3 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 - 1.0*s_12,3) <= infinity
IloRange boxCut11,4 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 - 1.0*s_12,4) <= infinity
IloRange boxCut11,5 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 - 1.0*s_12,5) <= infinity
IloRange boxCut11,6 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 - 1.0*s_12,6) <= infinity
IloRange boxCut11,7 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 - 1.0*s_12,7) <= infinity
IloRange boxCut11,8 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 - 1.0*s_12,8) <= infinity
IloRange boxCut11,9 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 - 1.0*s_12,9) <= infinity
IloRange boxCut11,10 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 - 1.0*s_12,10) <= infinity
IloRange boxCut11,11 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 - 1.0*s_12,11) <= infinity
IloRange boxCut11,12 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 - 1.0*s_12,12) <= infinity
IloRange boxCut11,13 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 + 1.0*s_11,13 - 1.0*s_12,13) <= infinity
IloRange boxCut11,14 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 + 1.0*s_11,13 + 1.0*s_11,14 - 1.0*s_12,14) <= infinity
IloRange boxCut11,15 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 + 1.0*s_11,13 + 1.0*s_11,14 + 1.0*s_11,15 - 1.0*s_12,15) <= infinity
IloRange boxCut12,0 : 0.0 <= (1.0*s_12,0 - 1.0*s_13,0) <= infinity
IloRange boxCut12,1 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 - 1.0*s_13,1) <= infinity
IloRange boxCut12,2 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 - 1.0*s_13,2) <= infinity
IloRange boxCut12,3 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 - 1.0*s_13,3) <= infinity
IloRange boxCut12,4 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 - 1.0*s_13,4) <= infinity
IloRange boxCut12,5 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 - 1.0*s_13,5) <= infinity
IloRange boxCut12,6 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 - 1.0*s_13,6) <= infinity
IloRange boxCut12,7 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 - 1.0*s_13,7) <= infinity
IloRange boxCut12,8 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 - 1.0*s_13,8) <= infinity
IloRange boxCut12,9 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 - 1.0*s_13,9) <= infinity
IloRange boxCut12,10 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 - 1.0*s_13,10) <= infinity
IloRange boxCut12,11 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 - 1.0*s_13,11) <= infinity
IloRange boxCut12,12 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 - 1.0*s_13,12) <= infinity
IloRange boxCut12,13 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 + 1.0*s_12,13 - 1.0*s_13,13) <= infinity
IloRange boxCut12,14 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 + 1.0*s_12,13 + 1.0*s_12,14 - 1.0*s_13,14) <= infinity
IloRange boxCut12,15 : 0.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 + 1.0*s_12,13 + 1.0*s_12,14 + 1.0*s_12,15 - 1.0*s_13,15) <= infinity
IloRange boxCut13,0 : 0.0 <= (1.0*s_13,0 - 1.0*s_14,0) <= infinity
IloRange boxCut13,1 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 - 1.0*s_14,1) <= infinity
IloRange boxCut13,2 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 - 1.0*s_14,2) <= infinity
IloRange boxCut13,3 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 - 1.0*s_14,3) <= infinity
IloRange boxCut13,4 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 - 1.0*s_14,4) <= infinity
IloRange boxCut13,5 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 - 1.0*s_14,5) <= infinity
IloRange boxCut13,6 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 - 1.0*s_14,6) <= infinity
IloRange boxCut13,7 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 - 1.0*s_14,7) <= infinity
IloRange boxCut13,8 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 - 1.0*s_14,8) <= infinity
IloRange boxCut13,9 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 - 1.0*s_14,9) <= infinity
IloRange boxCut13,10 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 - 1.0*s_14,10) <= infinity
IloRange boxCut13,11 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 - 1.0*s_14,11) <= infinity
IloRange boxCut13,12 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 + 1.0*s_13,12 - 1.0*s_14,12) <= infinity
IloRange boxCut13,13 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 + 1.0*s_13,12 + 1.0*s_13,13 - 1.0*s_14,13) <= infinity
IloRange boxCut13,14 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 + 1.0*s_13,12 + 1.0*s_13,13 + 1.0*s_13,14 - 1.0*s_14,14) <= infinity
IloRange boxCut13,15 : 0.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10 + 1.0*s_13,11 + 1.0*s_13,12 + 1.0*s_13,13 + 1.0*s_13,14 + 1.0*s_13,15 - 1.0*s_14,15) <= infinity
IloRange boxCut15,0 : 0.0 <= (1.0*s_15,0 - 1.0*s_16,0) <= infinity
IloRange boxCut15,1 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 - 1.0*s_16,1) <= infinity
IloRange boxCut15,2 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 - 1.0*s_16,2) <= infinity
IloRange boxCut15,3 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 - 1.0*s_16,3) <= infinity
IloRange boxCut15,4 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 - 1.0*s_16,4) <= infinity
IloRange boxCut15,5 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 - 1.0*s_16,5) <= infinity
IloRange boxCut15,6 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 - 1.0*s_16,6) <= infinity
IloRange boxCut15,7 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 - 1.0*s_16,7) <= infinity
IloRange boxCut15,8 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 - 1.0*s_16,8) <= infinity
IloRange boxCut15,9 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 - 1.0*s_16,9) <= infinity
IloRange boxCut15,10 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 - 1.0*s_16,10) <= infinity
IloRange boxCut15,11 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 - 1.0*s_16,11) <= infinity
IloRange boxCut15,12 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 + 1.0*s_15,12 - 1.0*s_16,12) <= infinity
IloRange boxCut15,13 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 + 1.0*s_15,12 + 1.0*s_15,13 - 1.0*s_16,13) <= infinity
IloRange boxCut15,14 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 + 1.0*s_15,12 + 1.0*s_15,13 + 1.0*s_15,14 - 1.0*s_16,14) <= infinity
IloRange boxCut15,15 : 0.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10 + 1.0*s_15,11 + 1.0*s_15,12 + 1.0*s_15,13 + 1.0*s_15,14 + 1.0*s_15,15 - 1.0*s_16,15) <= infinity
IloRange boxCut16,0 : 0.0 <= (1.0*s_16,0 - 1.0*s_17,0) <= infinity
IloRange boxCut16,1 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 - 1.0*s_17,1) <= infinity
IloRange boxCut16,2 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 - 1.0*s_17,2) <= infinity
IloRange boxCut16,3 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 - 1.0*s_17,3) <= infinity
IloRange boxCut16,4 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 - 1.0*s_17,4) <= infinity
IloRange boxCut16,5 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 - 1.0*s_17,5) <= infinity
IloRange boxCut16,6 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 - 1.0*s_17,6) <= infinity
IloRange boxCut16,7 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 - 1.0*s_17,7) <= infinity
IloRange boxCut16,8 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 - 1.0*s_17,8) <= infinity
IloRange boxCut16,9 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 - 1.0*s_17,9) <= infinity
IloRange boxCut16,10 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 - 1.0*s_17,10) <= infinity
IloRange boxCut16,11 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 - 1.0*s_17,11) <= infinity
IloRange boxCut16,12 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 + 1.0*s_16,12 - 1.0*s_17,12) <= infinity
IloRange boxCut16,13 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 + 1.0*s_16,12 + 1.0*s_16,13 - 1.0*s_17,13) <= infinity
IloRange boxCut16,14 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 + 1.0*s_16,12 + 1.0*s_16,13 + 1.0*s_16,14 - 1.0*s_17,14) <= infinity
IloRange boxCut16,15 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 + 1.0*s_16,11 + 1.0*s_16,12 + 1.0*s_16,13 + 1.0*s_16,14 + 1.0*s_16,15 - 1.0*s_17,15) <= infinity
IloRange boxCut17,0 : 0.0 <= (1.0*s_17,0 - 1.0*s_18,0) <= infinity
IloRange boxCut17,1 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 - 1.0*s_18,1) <= infinity
IloRange boxCut17,2 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 - 1.0*s_18,2) <= infinity
IloRange boxCut17,3 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 - 1.0*s_18,3) <= infinity
IloRange boxCut17,4 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 - 1.0*s_18,4) <= infinity
IloRange boxCut17,5 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 - 1.0*s_18,5) <= infinity
IloRange boxCut17,6 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 - 1.0*s_18,6) <= infinity
IloRange boxCut17,7 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 - 1.0*s_18,7) <= infinity
IloRange boxCut17,8 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 - 1.0*s_18,8) <= infinity
IloRange boxCut17,9 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 - 1.0*s_18,9) <= infinity
IloRange boxCut17,10 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 - 1.0*s_18,10) <= infinity
IloRange boxCut17,11 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 - 1.0*s_18,11) <= infinity
IloRange boxCut17,12 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 + 1.0*s_17,12 - 1.0*s_18,12) <= infinity
IloRange boxCut17,13 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 + 1.0*s_17,12 + 1.0*s_17,13 - 1.0*s_18,13) <= infinity
IloRange boxCut17,14 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 + 1.0*s_17,12 + 1.0*s_17,13 + 1.0*s_17,14 - 1.0*s_18,14) <= infinity
IloRange boxCut17,15 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 + 1.0*s_17,11 + 1.0*s_17,12 + 1.0*s_17,13 + 1.0*s_17,14 + 1.0*s_17,15 - 1.0*s_18,15) <= infinity
IloRange boxCut18,0 : 0.0 <= (1.0*s_18,0 - 1.0*s_19,0) <= infinity
IloRange boxCut18,1 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 - 1.0*s_19,1) <= infinity
IloRange boxCut18,2 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 - 1.0*s_19,2) <= infinity
IloRange boxCut18,3 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 - 1.0*s_19,3) <= infinity
IloRange boxCut18,4 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 - 1.0*s_19,4) <= infinity
IloRange boxCut18,5 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 - 1.0*s_19,5) <= infinity
IloRange boxCut18,6 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 - 1.0*s_19,6) <= infinity
IloRange boxCut18,7 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 - 1.0*s_19,7) <= infinity
IloRange boxCut18,8 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 - 1.0*s_19,8) <= infinity
IloRange boxCut18,9 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 - 1.0*s_19,9) <= infinity
IloRange boxCut18,10 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 - 1.0*s_19,10) <= infinity
IloRange boxCut18,11 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 - 1.0*s_19,11) <= infinity
IloRange boxCut18,12 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 + 1.0*s_18,12 - 1.0*s_19,12) <= infinity
IloRange boxCut18,13 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 + 1.0*s_18,12 + 1.0*s_18,13 - 1.0*s_19,13) <= infinity
IloRange boxCut18,14 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 + 1.0*s_18,12 + 1.0*s_18,13 + 1.0*s_18,14 - 1.0*s_19,14) <= infinity
IloRange boxCut18,15 : 0.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10 + 1.0*s_18,11 + 1.0*s_18,12 + 1.0*s_18,13 + 1.0*s_18,14 + 1.0*s_18,15 - 1.0*s_19,15) <= infinity
IloRange boxCut19,0 : 0.0 <= (1.0*s_19,0 - 1.0*s_20,0) <= infinity
IloRange boxCut19,1 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 - 1.0*s_20,1) <= infinity
IloRange boxCut19,2 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 - 1.0*s_20,2) <= infinity
IloRange boxCut19,3 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 - 1.0*s_20,3) <= infinity
IloRange boxCut19,4 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 - 1.0*s_20,4) <= infinity
IloRange boxCut19,5 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 - 1.0*s_20,5) <= infinity
IloRange boxCut19,6 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 - 1.0*s_20,6) <= infinity
IloRange boxCut19,7 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 - 1.0*s_20,7) <= infinity
IloRange boxCut19,8 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 - 1.0*s_20,8) <= infinity
IloRange boxCut19,9 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 - 1.0*s_20,9) <= infinity
IloRange boxCut19,10 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 - 1.0*s_20,10) <= infinity
IloRange boxCut19,11 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 - 1.0*s_20,11) <= infinity
IloRange boxCut19,12 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 + 1.0*s_19,12 - 1.0*s_20,12) <= infinity
IloRange boxCut19,13 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 + 1.0*s_19,12 + 1.0*s_19,13 - 1.0*s_20,13) <= infinity
IloRange boxCut19,14 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 + 1.0*s_19,12 + 1.0*s_19,13 + 1.0*s_19,14 - 1.0*s_20,14) <= infinity
IloRange boxCut19,15 : 0.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10 + 1.0*s_19,11 + 1.0*s_19,12 + 1.0*s_19,13 + 1.0*s_19,14 + 1.0*s_19,15 - 1.0*s_20,15) <= infinity
IloRange boxCut20,0 : 0.0 <= (1.0*s_20,0 - 1.0*s_21,0) <= infinity
IloRange boxCut20,1 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 - 1.0*s_21,1) <= infinity
IloRange boxCut20,2 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 - 1.0*s_21,2) <= infinity
IloRange boxCut20,3 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 - 1.0*s_21,3) <= infinity
IloRange boxCut20,4 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 - 1.0*s_21,4) <= infinity
IloRange boxCut20,5 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 - 1.0*s_21,5) <= infinity
IloRange boxCut20,6 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 - 1.0*s_21,6) <= infinity
IloRange boxCut20,7 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 - 1.0*s_21,7) <= infinity
IloRange boxCut20,8 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 - 1.0*s_21,8) <= infinity
IloRange boxCut20,9 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 - 1.0*s_21,9) <= infinity
IloRange boxCut20,10 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 - 1.0*s_21,10) <= infinity
IloRange boxCut20,11 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 - 1.0*s_21,11) <= infinity
IloRange boxCut20,12 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 + 1.0*s_20,12 - 1.0*s_21,12) <= infinity
IloRange boxCut20,13 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 + 1.0*s_20,12 + 1.0*s_20,13 - 1.0*s_21,13) <= infinity
IloRange boxCut20,14 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 + 1.0*s_20,12 + 1.0*s_20,13 + 1.0*s_20,14 - 1.0*s_21,14) <= infinity
IloRange boxCut20,15 : 0.0 <= (1.0*s_20,0 + 1.0*s_20,1 + 1.0*s_20,2 + 1.0*s_20,3 + 1.0*s_20,4 + 1.0*s_20,5 + 1.0*s_20,6 + 1.0*s_20,7 + 1.0*s_20,8 + 1.0*s_20,9 + 1.0*s_20,10 + 1.0*s_20,11 + 1.0*s_20,12 + 1.0*s_20,13 + 1.0*s_20,14 + 1.0*s_20,15 - 1.0*s_21,15) <= infinity
IloRange boxCut21,0 : 0.0 <= (1.0*s_21,0 - 1.0*s_22,0) <= infinity
IloRange boxCut21,1 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 - 1.0*s_22,1) <= infinity
IloRange boxCut21,2 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 - 1.0*s_22,2) <= infinity
IloRange boxCut21,3 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 - 1.0*s_22,3) <= infinity
IloRange boxCut21,4 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 - 1.0*s_22,4) <= infinity
IloRange boxCut21,5 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 - 1.0*s_22,5) <= infinity
IloRange boxCut21,6 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 - 1.0*s_22,6) <= infinity
IloRange boxCut21,7 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 - 1.0*s_22,7) <= infinity
IloRange boxCut21,8 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 - 1.0*s_22,8) <= infinity
IloRange boxCut21,9 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 - 1.0*s_22,9) <= infinity
IloRange boxCut21,10 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 - 1.0*s_22,10) <= infinity
IloRange boxCut21,11 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 - 1.0*s_22,11) <= infinity
IloRange boxCut21,12 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 + 1.0*s_21,12 - 1.0*s_22,12) <= infinity
IloRange boxCut21,13 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 + 1.0*s_21,12 + 1.0*s_21,13 - 1.0*s_22,13) <= infinity
IloRange boxCut21,14 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 + 1.0*s_21,12 + 1.0*s_21,13 + 1.0*s_21,14 - 1.0*s_22,14) <= infinity
IloRange boxCut21,15 : 0.0 <= (1.0*s_21,0 + 1.0*s_21,1 + 1.0*s_21,2 + 1.0*s_21,3 + 1.0*s_21,4 + 1.0*s_21,5 + 1.0*s_21,6 + 1.0*s_21,7 + 1.0*s_21,8 + 1.0*s_21,9 + 1.0*s_21,10 + 1.0*s_21,11 + 1.0*s_21,12 + 1.0*s_21,13 + 1.0*s_21,14 + 1.0*s_21,15 - 1.0*s_22,15) <= infinity
IloRange boxCut22,0 : 0.0 <= (1.0*s_22,0 - 1.0*s_23,0) <= infinity
IloRange boxCut22,1 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 - 1.0*s_23,1) <= infinity
IloRange boxCut22,2 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 - 1.0*s_23,2) <= infinity
IloRange boxCut22,3 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 - 1.0*s_23,3) <= infinity
IloRange boxCut22,4 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 - 1.0*s_23,4) <= infinity
IloRange boxCut22,5 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 - 1.0*s_23,5) <= infinity
IloRange boxCut22,6 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 - 1.0*s_23,6) <= infinity
IloRange boxCut22,7 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 - 1.0*s_23,7) <= infinity
IloRange boxCut22,8 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 - 1.0*s_23,8) <= infinity
IloRange boxCut22,9 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 - 1.0*s_23,9) <= infinity
IloRange boxCut22,10 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 - 1.0*s_23,10) <= infinity
IloRange boxCut22,11 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 - 1.0*s_23,11) <= infinity
IloRange boxCut22,12 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 + 1.0*s_22,12 - 1.0*s_23,12) <= infinity
IloRange boxCut22,13 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 + 1.0*s_22,12 + 1.0*s_22,13 - 1.0*s_23,13) <= infinity
IloRange boxCut22,14 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 + 1.0*s_22,12 + 1.0*s_22,13 + 1.0*s_22,14 - 1.0*s_23,14) <= infinity
IloRange boxCut22,15 : 0.0 <= (1.0*s_22,0 + 1.0*s_22,1 + 1.0*s_22,2 + 1.0*s_22,3 + 1.0*s_22,4 + 1.0*s_22,5 + 1.0*s_22,6 + 1.0*s_22,7 + 1.0*s_22,8 + 1.0*s_22,9 + 1.0*s_22,10 + 1.0*s_22,11 + 1.0*s_22,12 + 1.0*s_22,13 + 1.0*s_22,14 + 1.0*s_22,15 - 1.0*s_23,15) <= infinity
IloRange boxCut23,0 : 0.0 <= (1.0*s_23,0 - 1.0*s_24,0) <= infinity
IloRange boxCut23,1 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 - 1.0*s_24,1) <= infinity
IloRange boxCut23,2 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 - 1.0*s_24,2) <= infinity
IloRange boxCut23,3 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 - 1.0*s_24,3) <= infinity
IloRange boxCut23,4 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 - 1.0*s_24,4) <= infinity
IloRange boxCut23,5 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 - 1.0*s_24,5) <= infinity
IloRange boxCut23,6 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 - 1.0*s_24,6) <= infinity
IloRange boxCut23,7 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 - 1.0*s_24,7) <= infinity
IloRange boxCut23,8 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 - 1.0*s_24,8) <= infinity
IloRange boxCut23,9 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 - 1.0*s_24,9) <= infinity
IloRange boxCut23,10 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 - 1.0*s_24,10) <= infinity
IloRange boxCut23,11 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 - 1.0*s_24,11) <= infinity
IloRange boxCut23,12 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 + 1.0*s_23,12 - 1.0*s_24,12) <= infinity
IloRange boxCut23,13 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 + 1.0*s_23,12 + 1.0*s_23,13 - 1.0*s_24,13) <= infinity
IloRange boxCut23,14 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 + 1.0*s_23,12 + 1.0*s_23,13 + 1.0*s_23,14 - 1.0*s_24,14) <= infinity
IloRange boxCut23,15 : 0.0 <= (1.0*s_23,0 + 1.0*s_23,1 + 1.0*s_23,2 + 1.0*s_23,3 + 1.0*s_23,4 + 1.0*s_23,5 + 1.0*s_23,6 + 1.0*s_23,7 + 1.0*s_23,8 + 1.0*s_23,9 + 1.0*s_23,10 + 1.0*s_23,11 + 1.0*s_23,12 + 1.0*s_23,13 + 1.0*s_23,14 + 1.0*s_23,15 - 1.0*s_24,15) <= infinity
IloRange boxCut24,0 : 0.0 <= (1.0*s_24,0 - 1.0*s_25,0) <= infinity
IloRange boxCut24,1 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 - 1.0*s_25,1) <= infinity
IloRange boxCut24,2 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 - 1.0*s_25,2) <= infinity
IloRange boxCut24,3 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 - 1.0*s_25,3) <= infinity
IloRange boxCut24,4 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 - 1.0*s_25,4) <= infinity
IloRange boxCut24,5 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 - 1.0*s_25,5) <= infinity
IloRange boxCut24,6 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 - 1.0*s_25,6) <= infinity
IloRange boxCut24,7 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 - 1.0*s_25,7) <= infinity
IloRange boxCut24,8 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 - 1.0*s_25,8) <= infinity
IloRange boxCut24,9 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 - 1.0*s_25,9) <= infinity
IloRange boxCut24,10 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 - 1.0*s_25,10) <= infinity
IloRange boxCut24,11 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 - 1.0*s_25,11) <= infinity
IloRange boxCut24,12 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 + 1.0*s_24,12 - 1.0*s_25,12) <= infinity
IloRange boxCut24,13 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 + 1.0*s_24,12 + 1.0*s_24,13 - 1.0*s_25,13) <= infinity
IloRange boxCut24,14 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 + 1.0*s_24,12 + 1.0*s_24,13 + 1.0*s_24,14 - 1.0*s_25,14) <= infinity
IloRange boxCut24,15 : 0.0 <= (1.0*s_24,0 + 1.0*s_24,1 + 1.0*s_24,2 + 1.0*s_24,3 + 1.0*s_24,4 + 1.0*s_24,5 + 1.0*s_24,6 + 1.0*s_24,7 + 1.0*s_24,8 + 1.0*s_24,9 + 1.0*s_24,10 + 1.0*s_24,11 + 1.0*s_24,12 + 1.0*s_24,13 + 1.0*s_24,14 + 1.0*s_24,15 - 1.0*s_25,15) <= infinity
IloRange boxCut25,0 : 0.0 <= (1.0*s_25,0 - 1.0*s_26,0) <= infinity
IloRange boxCut25,1 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 - 1.0*s_26,1) <= infinity
IloRange boxCut25,2 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 - 1.0*s_26,2) <= infinity
IloRange boxCut25,3 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 - 1.0*s_26,3) <= infinity
IloRange boxCut25,4 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 - 1.0*s_26,4) <= infinity
IloRange boxCut25,5 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 - 1.0*s_26,5) <= infinity
IloRange boxCut25,6 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 - 1.0*s_26,6) <= infinity
IloRange boxCut25,7 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 - 1.0*s_26,7) <= infinity
IloRange boxCut25,8 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 - 1.0*s_26,8) <= infinity
IloRange boxCut25,9 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 - 1.0*s_26,9) <= infinity
IloRange boxCut25,10 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 - 1.0*s_26,10) <= infinity
IloRange boxCut25,11 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 - 1.0*s_26,11) <= infinity
IloRange boxCut25,12 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 + 1.0*s_25,12 - 1.0*s_26,12) <= infinity
IloRange boxCut25,13 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 + 1.0*s_25,12 + 1.0*s_25,13 - 1.0*s_26,13) <= infinity
IloRange boxCut25,14 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 + 1.0*s_25,12 + 1.0*s_25,13 + 1.0*s_25,14 - 1.0*s_26,14) <= infinity
IloRange boxCut25,15 : 0.0 <= (1.0*s_25,0 + 1.0*s_25,1 + 1.0*s_25,2 + 1.0*s_25,3 + 1.0*s_25,4 + 1.0*s_25,5 + 1.0*s_25,6 + 1.0*s_25,7 + 1.0*s_25,8 + 1.0*s_25,9 + 1.0*s_25,10 + 1.0*s_25,11 + 1.0*s_25,12 + 1.0*s_25,13 + 1.0*s_25,14 + 1.0*s_25,15 - 1.0*s_26,15) <= infinity
IloRange boxCut26,0 : 0.0 <= (1.0*s_26,0 - 1.0*s_27,0) <= infinity
IloRange boxCut26,1 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 - 1.0*s_27,1) <= infinity
IloRange boxCut26,2 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 - 1.0*s_27,2) <= infinity
IloRange boxCut26,3 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 - 1.0*s_27,3) <= infinity
IloRange boxCut26,4 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 - 1.0*s_27,4) <= infinity
IloRange boxCut26,5 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 - 1.0*s_27,5) <= infinity
IloRange boxCut26,6 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 - 1.0*s_27,6) <= infinity
IloRange boxCut26,7 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 - 1.0*s_27,7) <= infinity
IloRange boxCut26,8 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 - 1.0*s_27,8) <= infinity
IloRange boxCut26,9 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 - 1.0*s_27,9) <= infinity
IloRange boxCut26,10 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 - 1.0*s_27,10) <= infinity
IloRange boxCut26,11 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 - 1.0*s_27,11) <= infinity
IloRange boxCut26,12 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 + 1.0*s_26,12 - 1.0*s_27,12) <= infinity
IloRange boxCut26,13 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 + 1.0*s_26,12 + 1.0*s_26,13 - 1.0*s_27,13) <= infinity
IloRange boxCut26,14 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 + 1.0*s_26,12 + 1.0*s_26,13 + 1.0*s_26,14 - 1.0*s_27,14) <= infinity
IloRange boxCut26,15 : 0.0 <= (1.0*s_26,0 + 1.0*s_26,1 + 1.0*s_26,2 + 1.0*s_26,3 + 1.0*s_26,4 + 1.0*s_26,5 + 1.0*s_26,6 + 1.0*s_26,7 + 1.0*s_26,8 + 1.0*s_26,9 + 1.0*s_26,10 + 1.0*s_26,11 + 1.0*s_26,12 + 1.0*s_26,13 + 1.0*s_26,14 + 1.0*s_26,15 - 1.0*s_27,15) <= infinity
IloRange boxCut27,0 : 0.0 <= (1.0*s_27,0 - 1.0*s_28,0) <= infinity
IloRange boxCut27,1 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 - 1.0*s_28,1) <= infinity
IloRange boxCut27,2 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 - 1.0*s_28,2) <= infinity
IloRange boxCut27,3 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 - 1.0*s_28,3) <= infinity
IloRange boxCut27,4 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 - 1.0*s_28,4) <= infinity
IloRange boxCut27,5 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 - 1.0*s_28,5) <= infinity
IloRange boxCut27,6 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 - 1.0*s_28,6) <= infinity
IloRange boxCut27,7 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 - 1.0*s_28,7) <= infinity
IloRange boxCut27,8 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 - 1.0*s_28,8) <= infinity
IloRange boxCut27,9 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 - 1.0*s_28,9) <= infinity
IloRange boxCut27,10 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 - 1.0*s_28,10) <= infinity
IloRange boxCut27,11 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 - 1.0*s_28,11) <= infinity
IloRange boxCut27,12 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 + 1.0*s_27,12 - 1.0*s_28,12) <= infinity
IloRange boxCut27,13 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 + 1.0*s_27,12 + 1.0*s_27,13 - 1.0*s_28,13) <= infinity
IloRange boxCut27,14 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 + 1.0*s_27,12 + 1.0*s_27,13 + 1.0*s_27,14 - 1.0*s_28,14) <= infinity
IloRange boxCut27,15 : 0.0 <= (1.0*s_27,0 + 1.0*s_27,1 + 1.0*s_27,2 + 1.0*s_27,3 + 1.0*s_27,4 + 1.0*s_27,5 + 1.0*s_27,6 + 1.0*s_27,7 + 1.0*s_27,8 + 1.0*s_27,9 + 1.0*s_27,10 + 1.0*s_27,11 + 1.0*s_27,12 + 1.0*s_27,13 + 1.0*s_27,14 + 1.0*s_27,15 - 1.0*s_28,15) <= infinity
IloRange boxCut28,0 : 0.0 <= (1.0*s_28,0 - 1.0*s_29,0) <= infinity
IloRange boxCut28,1 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 - 1.0*s_29,1) <= infinity
IloRange boxCut28,2 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 - 1.0*s_29,2) <= infinity
IloRange boxCut28,3 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 - 1.0*s_29,3) <= infinity
IloRange boxCut28,4 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 - 1.0*s_29,4) <= infinity
IloRange boxCut28,5 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 - 1.0*s_29,5) <= infinity
IloRange boxCut28,6 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 - 1.0*s_29,6) <= infinity
IloRange boxCut28,7 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 - 1.0*s_29,7) <= infinity
IloRange boxCut28,8 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 - 1.0*s_29,8) <= infinity
IloRange boxCut28,9 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 - 1.0*s_29,9) <= infinity
IloRange boxCut28,10 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 - 1.0*s_29,10) <= infinity
IloRange boxCut28,11 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 - 1.0*s_29,11) <= infinity
IloRange boxCut28,12 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 + 1.0*s_28,12 - 1.0*s_29,12) <= infinity
IloRange boxCut28,13 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 + 1.0*s_28,12 + 1.0*s_28,13 - 1.0*s_29,13) <= infinity
IloRange boxCut28,14 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 + 1.0*s_28,12 + 1.0*s_28,13 + 1.0*s_28,14 - 1.0*s_29,14) <= infinity
IloRange boxCut28,15 : 0.0 <= (1.0*s_28,0 + 1.0*s_28,1 + 1.0*s_28,2 + 1.0*s_28,3 + 1.0*s_28,4 + 1.0*s_28,5 + 1.0*s_28,6 + 1.0*s_28,7 + 1.0*s_28,8 + 1.0*s_28,9 + 1.0*s_28,10 + 1.0*s_28,11 + 1.0*s_28,12 + 1.0*s_28,13 + 1.0*s_28,14 + 1.0*s_28,15 - 1.0*s_29,15) <= infinity
IloRange boxCut29,0 : 0.0 <= (1.0*s_29,0 - 1.0*s_30,0) <= infinity
IloRange boxCut29,1 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 - 1.0*s_30,1) <= infinity
IloRange boxCut29,2 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 - 1.0*s_30,2) <= infinity
IloRange boxCut29,3 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 - 1.0*s_30,3) <= infinity
IloRange boxCut29,4 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 - 1.0*s_30,4) <= infinity
IloRange boxCut29,5 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 - 1.0*s_30,5) <= infinity
IloRange boxCut29,6 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 - 1.0*s_30,6) <= infinity
IloRange boxCut29,7 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 - 1.0*s_30,7) <= infinity
IloRange boxCut29,8 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 - 1.0*s_30,8) <= infinity
IloRange boxCut29,9 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 - 1.0*s_30,9) <= infinity
IloRange boxCut29,10 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 - 1.0*s_30,10) <= infinity
IloRange boxCut29,11 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 - 1.0*s_30,11) <= infinity
IloRange boxCut29,12 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 + 1.0*s_29,12 - 1.0*s_30,12) <= infinity
IloRange boxCut29,13 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 + 1.0*s_29,12 + 1.0*s_29,13 - 1.0*s_30,13) <= infinity
IloRange boxCut29,14 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 + 1.0*s_29,12 + 1.0*s_29,13 + 1.0*s_29,14 - 1.0*s_30,14) <= infinity
IloRange boxCut29,15 : 0.0 <= (1.0*s_29,0 + 1.0*s_29,1 + 1.0*s_29,2 + 1.0*s_29,3 + 1.0*s_29,4 + 1.0*s_29,5 + 1.0*s_29,6 + 1.0*s_29,7 + 1.0*s_29,8 + 1.0*s_29,9 + 1.0*s_29,10 + 1.0*s_29,11 + 1.0*s_29,12 + 1.0*s_29,13 + 1.0*s_29,14 + 1.0*s_29,15 - 1.0*s_30,15) <= infinity
IloRange boxCut30,0 : 0.0 <= (1.0*s_30,0 - 1.0*s_31,0) <= infinity
IloRange boxCut30,1 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 - 1.0*s_31,1) <= infinity
IloRange boxCut30,2 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 - 1.0*s_31,2) <= infinity
IloRange boxCut30,3 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 - 1.0*s_31,3) <= infinity
IloRange boxCut30,4 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 - 1.0*s_31,4) <= infinity
IloRange boxCut30,5 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 - 1.0*s_31,5) <= infinity
IloRange boxCut30,6 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 - 1.0*s_31,6) <= infinity
IloRange boxCut30,7 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 - 1.0*s_31,7) <= infinity
IloRange boxCut30,8 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 - 1.0*s_31,8) <= infinity
IloRange boxCut30,9 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 - 1.0*s_31,9) <= infinity
IloRange boxCut30,10 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 - 1.0*s_31,10) <= infinity
IloRange boxCut30,11 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 - 1.0*s_31,11) <= infinity
IloRange boxCut30,12 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 + 1.0*s_30,12 - 1.0*s_31,12) <= infinity
IloRange boxCut30,13 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 + 1.0*s_30,12 + 1.0*s_30,13 - 1.0*s_31,13) <= infinity
IloRange boxCut30,14 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 + 1.0*s_30,12 + 1.0*s_30,13 + 1.0*s_30,14 - 1.0*s_31,14) <= infinity
IloRange boxCut30,15 : 0.0 <= (1.0*s_30,0 + 1.0*s_30,1 + 1.0*s_30,2 + 1.0*s_30,3 + 1.0*s_30,4 + 1.0*s_30,5 + 1.0*s_30,6 + 1.0*s_30,7 + 1.0*s_30,8 + 1.0*s_30,9 + 1.0*s_30,10 + 1.0*s_30,11 + 1.0*s_30,12 + 1.0*s_30,13 + 1.0*s_30,14 + 1.0*s_30,15 - 1.0*s_31,15) <= infinity
IloRange boxCut31,0 : 0.0 <= (1.0*s_31,0 - 1.0*s_32,0) <= infinity
IloRange boxCut31,1 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 - 1.0*s_32,1) <= infinity
IloRange boxCut31,2 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 - 1.0*s_32,2) <= infinity
IloRange boxCut31,3 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 - 1.0*s_32,3) <= infinity
IloRange boxCut31,4 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 - 1.0*s_32,4) <= infinity
IloRange boxCut31,5 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 - 1.0*s_32,5) <= infinity
IloRange boxCut31,6 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 - 1.0*s_32,6) <= infinity
IloRange boxCut31,7 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 - 1.0*s_32,7) <= infinity
IloRange boxCut31,8 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 - 1.0*s_32,8) <= infinity
IloRange boxCut31,9 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 - 1.0*s_32,9) <= infinity
IloRange boxCut31,10 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 - 1.0*s_32,10) <= infinity
IloRange boxCut31,11 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 - 1.0*s_32,11) <= infinity
IloRange boxCut31,12 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 + 1.0*s_31,12 - 1.0*s_32,12) <= infinity
IloRange boxCut31,13 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 + 1.0*s_31,12 + 1.0*s_31,13 - 1.0*s_32,13) <= infinity
IloRange boxCut31,14 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 + 1.0*s_31,12 + 1.0*s_31,13 + 1.0*s_31,14 - 1.0*s_32,14) <= infinity
IloRange boxCut31,15 : 0.0 <= (1.0*s_31,0 + 1.0*s_31,1 + 1.0*s_31,2 + 1.0*s_31,3 + 1.0*s_31,4 + 1.0*s_31,5 + 1.0*s_31,6 + 1.0*s_31,7 + 1.0*s_31,8 + 1.0*s_31,9 + 1.0*s_31,10 + 1.0*s_31,11 + 1.0*s_31,12 + 1.0*s_31,13 + 1.0*s_31,14 + 1.0*s_31,15 - 1.0*s_32,15) <= infinity
IloRange boxCut32,0 : 0.0 <= (1.0*s_32,0 - 1.0*s_33,0) <= infinity
IloRange boxCut32,1 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 - 1.0*s_33,1) <= infinity
IloRange boxCut32,2 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 - 1.0*s_33,2) <= infinity
IloRange boxCut32,3 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 - 1.0*s_33,3) <= infinity
IloRange boxCut32,4 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 - 1.0*s_33,4) <= infinity
IloRange boxCut32,5 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 - 1.0*s_33,5) <= infinity
IloRange boxCut32,6 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 - 1.0*s_33,6) <= infinity
IloRange boxCut32,7 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 - 1.0*s_33,7) <= infinity
IloRange boxCut32,8 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 - 1.0*s_33,8) <= infinity
IloRange boxCut32,9 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 - 1.0*s_33,9) <= infinity
IloRange boxCut32,10 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 - 1.0*s_33,10) <= infinity
IloRange boxCut32,11 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 - 1.0*s_33,11) <= infinity
IloRange boxCut32,12 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 + 1.0*s_32,12 - 1.0*s_33,12) <= infinity
IloRange boxCut32,13 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 + 1.0*s_32,12 + 1.0*s_32,13 - 1.0*s_33,13) <= infinity
IloRange boxCut32,14 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 + 1.0*s_32,12 + 1.0*s_32,13 + 1.0*s_32,14 - 1.0*s_33,14) <= infinity
IloRange boxCut32,15 : 0.0 <= (1.0*s_32,0 + 1.0*s_32,1 + 1.0*s_32,2 + 1.0*s_32,3 + 1.0*s_32,4 + 1.0*s_32,5 + 1.0*s_32,6 + 1.0*s_32,7 + 1.0*s_32,8 + 1.0*s_32,9 + 1.0*s_32,10 + 1.0*s_32,11 + 1.0*s_32,12 + 1.0*s_32,13 + 1.0*s_32,14 + 1.0*s_32,15 - 1.0*s_33,15) <= infinity
IloRange boxCut33,0 : 0.0 <= (1.0*s_33,0 - 1.0*s_34,0) <= infinity
IloRange boxCut33,1 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 - 1.0*s_34,1) <= infinity
IloRange boxCut33,2 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 - 1.0*s_34,2) <= infinity
IloRange boxCut33,3 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 - 1.0*s_34,3) <= infinity
IloRange boxCut33,4 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 - 1.0*s_34,4) <= infinity
IloRange boxCut33,5 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 - 1.0*s_34,5) <= infinity
IloRange boxCut33,6 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 - 1.0*s_34,6) <= infinity
IloRange boxCut33,7 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 - 1.0*s_34,7) <= infinity
IloRange boxCut33,8 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 - 1.0*s_34,8) <= infinity
IloRange boxCut33,9 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 - 1.0*s_34,9) <= infinity
IloRange boxCut33,10 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 - 1.0*s_34,10) <= infinity
IloRange boxCut33,11 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 - 1.0*s_34,11) <= infinity
IloRange boxCut33,12 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 + 1.0*s_33,12 - 1.0*s_34,12) <= infinity
IloRange boxCut33,13 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 + 1.0*s_33,12 + 1.0*s_33,13 - 1.0*s_34,13) <= infinity
IloRange boxCut33,14 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 + 1.0*s_33,12 + 1.0*s_33,13 + 1.0*s_33,14 - 1.0*s_34,14) <= infinity
IloRange boxCut33,15 : 0.0 <= (1.0*s_33,0 + 1.0*s_33,1 + 1.0*s_33,2 + 1.0*s_33,3 + 1.0*s_33,4 + 1.0*s_33,5 + 1.0*s_33,6 + 1.0*s_33,7 + 1.0*s_33,8 + 1.0*s_33,9 + 1.0*s_33,10 + 1.0*s_33,11 + 1.0*s_33,12 + 1.0*s_33,13 + 1.0*s_33,14 + 1.0*s_33,15 - 1.0*s_34,15) <= infinity
IloRange bagCut_0,1 : 0.0 <= (1.0*n_0 - 1.0*n_1) <= infinity
IloRange bagCut_1,2 : 0.0 <= (1.0*n_1 - 1.0*n_2) <= infinity
IloRange bagCut_2,3 : 0.0 <= (1.0*n_2 - 1.0*n_3) <= infinity
IloRange bagCut_3,4 : 0.0 <= (1.0*n_3 - 1.0*n_4) <= infinity
IloRange bagCut_4,5 : 0.0 <= (1.0*n_4 - 1.0*n_5) <= infinity
IloRange bagCut_5,6 : 0.0 <= (1.0*n_5 - 1.0*n_6) <= infinity
IloRange bagCut_6,7 : 0.0 <= (1.0*n_6 - 1.0*n_7) <= infinity
IloRange bagCut_8,9 : 0.0 <= (1.0*n_8 - 1.0*n_9) <= infinity
IloRange bagCut_9,10 : 0.0 <= (1.0*n_9 - 1.0*n_10) <= infinity
IloRange bagCut_10,11 : 0.0 <= (1.0*n_10 - 1.0*n_11) <= infinity
IloRange bagCut_11,12 : 0.0 <= (1.0*n_11 - 1.0*n_12) <= infinity
IloRange bagCut_13,14 : 0.0 <= (1.0*n_13 - 1.0*n_14) <= infinity
IloRange bagCut_14,15 : 0.0 <= (1.0*n_14 - 1.0*n_15) <= infinity

}
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
CPXPARAM_Threads                                 1
!!Thread UP
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 1 time.
MIP Presolve eliminated 33 rows and 0 columns.
MIP Presolve modified 3044 coefficients.
Reduced MIP has 585 rows, 576 columns, and 6098 nonzeros.
Reduced MIP has 576 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (6.70 ticks)
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  0  袋子种类为0              patten : [6, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11]  放进袋子  1  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_10,1 + 1.0*s_11,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 15, 16, 17, 18, 19]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_12,2 + 1.0*s_13,2 + 1.0*s_15,2 + 1.0*s_16,2 + 1.0*s_17,2 + 1.0*s_18,2 + 1.0*s_19,2 - 6.0*n_2) <= 0
needToSolve=true needToAddCut=true
将物品  [20, 21, 22, 23, 24, 25, 26]  放进袋子  3  袋子种类为0              patten : [0, 7, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_20,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 - 6.0*n_3) <= 0
needToSolve=true needToAddCut=true
将物品  [27, 28, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 34]  放进袋子  15  袋子种类为2              patten : [1, 1, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
Position{type=1, id=0, x=70, y=70, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2]  放进袋子  3  袋子种类为0              patten : [3, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=0, z=70, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=5, y=120, z=70, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [15, 16, 17, 18, 19]  放进袋子  5  袋子种类为0              patten : [0, 5, 0]
haha
Position{type=1, id=15, x=0, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=16, x=60, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=17, x=120, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=18, x=180, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=19, x=240, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [20]  放进袋子  6  袋子种类为0              patten : [0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4]  放进袋子  7  袋子种类为0              patten : [2, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=30, y=70, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [21, 22]  放进袋子  8  袋子种类为1              patten : [0, 2, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=35, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=0, x=100, y=70, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [23]  放进袋子  9  袋子种类为1              patten : [0, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [5]  放进袋子  10  袋子种类为1              patten : [1, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
needToSolve=true needToAddCut=false
将物品  [6, 7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  12  袋子种类为1              patten : [4, 9, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,12 + 1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_24,12 + 1.0*s_25,12 + 1.0*s_26,12 + 1.0*s_27,12 - 7.0*n_12) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33]  放进袋子  13  袋子种类为2              patten : [5, 1, 2]
haha
Position{type=0, id=10, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=14, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=33, x=340, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=60, ly=60, lz=220}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2]  放进袋子  3  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19]  放进袋子  5  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20]  放进袋子  6  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4]  放进袋子  7  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22]  放进袋子  8  袋子种类为1              patten : [0, 2, 1]
needToSolve=false needToAddCut=false
将物品  [23]  放进袋子  9  袋子种类为1              patten : [0, 1, 1]
needToSolve=false needToAddCut=false
将物品  [5]  放进袋子  10  袋子种类为1              patten : [1, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  12  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_6,12 + 1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_24,12 + 1.0*s_25,12 + 1.0*s_26,12 + 1.0*s_27,12 + 1.0*s_28,12 + 1.0*s_29,12 + 1.0*s_30,12 + 1.0*s_31,12 + 1.0*s_32,12 - 12.0*n_12) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33]  放进袋子  13  袋子种类为2              patten : [5, 1, 2]
needToSolve=false needToAddCut=false
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2]  放进袋子  3  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19]  放进袋子  5  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20]  放进袋子  6  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4]  放进袋子  7  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22]  放进袋子  8  袋子种类为1              patten : [0, 2, 1]
needToSolve=false needToAddCut=false
将物品  [23]  放进袋子  9  袋子种类为1              patten : [0, 1, 1]
needToSolve=false needToAddCut=false
将物品  [5]  放进袋子  10  袋子种类为1              patten : [1, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  12  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_6,12 + 1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_24,12 + 1.0*s_25,12 + 1.0*s_26,12 + 1.0*s_27,12 + 1.0*s_28,12 + 1.0*s_29,12 + 1.0*s_30,12 + 1.0*s_31,12 + 1.0*s_32,12 - 12.0*n_12) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33]  放进袋子  13  袋子种类为2              patten : [5, 1, 2]
needToSolve=false needToAddCut=false
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2]  放进袋子  3  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19]  放进袋子  5  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20]  放进袋子  6  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4]  放进袋子  7  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22]  放进袋子  8  袋子种类为1              patten : [0, 2, 1]
needToSolve=false needToAddCut=false
将物品  [23]  放进袋子  9  袋子种类为1              patten : [0, 1, 1]
needToSolve=false needToAddCut=false
将物品  [5]  放进袋子  10  袋子种类为1              patten : [1, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  12  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_6,12 + 1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_24,12 + 1.0*s_25,12 + 1.0*s_26,12 + 1.0*s_27,12 + 1.0*s_28,12 + 1.0*s_29,12 + 1.0*s_30,12 + 1.0*s_31,12 + 1.0*s_32,12 - 12.0*n_12) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33]  放进袋子  13  袋子种类为2              patten : [5, 1, 2]
needToSolve=false needToAddCut=false
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
Probing fixed 31 vars, tightened 0 bounds.
Probing time = 0.02 sec. (9.77 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 31 rows and 31 columns.
Reduced MIP has 554 rows, 545 columns, and 5572 nonzeros.
Reduced MIP has 545 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.00 ticks)
Probing time = 0.00 sec. (2.39 ticks)
Clique table members: 3167.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time = 0.02 sec. (13.77 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        1.5556    82                      1.5556      426         
print n
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [15, 6, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [0, 14, 2]
haha
Position{type=1, id=21, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=180, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=280, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=340, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=400, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=240, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=220, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=300, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=340, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=360, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
      0     0        1.5564    82                    Cuts: 12     1037         
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 1.0]
将物品  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [0, 15, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 14.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [0]  放进袋子  14  袋子种类为2              patten : [1, 0, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  15  袋子种类为2              patten : [14, 5, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_1,15 + 1.0*s_2,15 + 1.0*s_3,15 + 1.0*s_4,15 + 1.0*s_5,15 + 1.0*s_6,15 + 1.0*s_7,15 + 1.0*s_8,15 + 1.0*s_9,15 + 1.0*s_10,15 + 1.0*s_11,15 + 1.0*s_12,15 + 1.0*s_13,15 - 12.0*n_15) <= 0
needToSolve=true needToAddCut=true
      0     0        1.5605    82                    Cuts: 76     1269         
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [0, 18, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 14.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [15, 2, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,14 + 1.0*s_1,14 + 1.0*s_2,14 + 1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
      0     0        1.5611    82                     Cuts: 8     1286         
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [2, 18, 2]
装不完，装了15
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 15.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [13, 2, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,14 + 1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
      0     0        1.5613    82                     Cuts: 6     1341         
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [3, 18, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [12, 2, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_33,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
      0     0        1.5651    82                     Cuts: 7     1732         
      0     0        1.5651    82                    Cuts: 10     1774         
      0     0        1.5651    82                     Cuts: 8     1809         
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 1.0]
将物品  [0]  放进袋子  7  袋子种类为0              patten : [1, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [14, 7, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [22, 23, 24, 25, 26, 27]  放进袋子  14  袋子种类为2              patten : [0, 6, 2]
haha
Position{type=1, id=22, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=180, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=240, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=300, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [28, 29, 30, 31, 32, 33, 34]  放进袋子  15  袋子种类为2              patten : [0, 7, 2]
haha
Position{type=1, id=28, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=180, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=240, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=300, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=360, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
      0     0        1.5651    82                    Cuts: 12     1869         
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [1, 6, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_19,0 + 1.0*s_20,0 - 6.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 + 1.0*s_26,1 + 1.0*s_27,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [14, 7, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 20.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [5, 7, 2]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=2, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=3, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=4, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=350, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=17, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=18, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=19, x=200, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=200, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=220, y=350, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  14  袋子种类为2              patten : [10, 12, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_22,14 + 1.0*s_23,14 - 11.0*n_14) <= 0
needToSolve=true needToAddCut=true
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [4, 18, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [11, 2, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_33,14 - 11.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  13  袋子种类为2              patten : [5, 8, 2]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=2, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=3, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=4, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=350, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=17, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=18, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=19, x=200, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=200, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=220, y=350, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=380, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [10, 12, 2]
addNoGoodCut:  (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 21.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  0  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 - 5.0*n_0) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  放进袋子  8  袋子种类为1              patten : [9, 3, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 17, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 - 14.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=30, y=60, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [0, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [1, 3, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=60, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=140, z=10, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=140, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [20]  放进袋子  3  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21]  放进袋子  4  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [1]  放进袋子  7  袋子种类为0              patten : [1, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 22]  放进袋子  8  袋子种类为1              patten : [4, 1, 1]
haha
Position{type=0, id=2, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=3, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=4, x=140, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=5, x=140, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=22, x=140, y=140, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [6, 7, 23, 24]  放进袋子  9  袋子种类为1              patten : [2, 2, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=60, lx=70, ly=200, lz=70}
Position{type=0, id=0, x=170, y=60, z=0, lx=70, ly=70, lz=200}
Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=130, z=140, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [8, 9, 25]  放进袋子  10  袋子种类为1              patten : [2, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=290, y=130, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=0, x=0, y=70, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [26, 27, 28]  放进袋子  11  袋子种类为1              patten : [0, 3, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=5, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=0, x=0, y=0, z=60, lx=60, ly=220, lz=60}
Position{type=1, id=0, x=15, y=0, z=120, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [10, 11, 12, 13, 29, 30, 31, 32, 33]  放进袋子  12  袋子种类为1              patten : [4, 5, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_10,12 + 1.0*s_11,12 + 1.0*s_12,12 + 1.0*s_13,12 + 1.0*s_29,12 + 1.0*s_30,12 + 1.0*s_31,12 + 1.0*s_32,12 - 7.0*n_12) <= 0
needToSolve=true needToAddCut=true
将物品  [14]  放进袋子  13  袋子种类为2              patten : [1, 0, 2]
needToSolve=false needToAddCut=false
将物品  [34]  放进袋子  14  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]
将物品  [0, 1, 2, 3, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [4, 3, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_15,0 + 1.0*s_16,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [23, 24, 25, 26]  放进袋子  4  袋子种类为0              patten : [0, 4, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=90, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=60, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=150, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [6, 27]  放进袋子  6  袋子种类为0              patten : [1, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=70, z=10, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [28, 29]  放进袋子  7  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [30, 31, 32]  放进袋子  8  袋子种类为1              patten : [0, 3, 1]
needToSolve=false needToAddCut=false
将物品  [33]  放进袋子  9  袋子种类为1              patten : [0, 1, 1]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  12  袋子种类为1              patten : [8, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_7,12 + 1.0*s_8,12 + 1.0*s_9,12 + 1.0*s_10,12 + 1.0*s_11,12 + 1.0*s_12,12 + 1.0*s_13,12 + 1.0*s_14,12 - 7.0*n_12) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [15, 6, 2]
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 - 20.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  15  袋子种类为2              patten : [0, 14, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=0, z=70, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=120, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=5, y=120, z=70, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [4, 5, 6, 7]  放进袋子  8  袋子种类为1              patten : [4, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
Position{type=0, id=0, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=0, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=0, x=0, y=70, z=130, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [8, 9, 10]  放进袋子  13  袋子种类为2              patten : [3, 0, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
Position{type=0, id=0, x=250, y=70, z=0, lx=70, ly=70, lz=200}
Position{type=0, id=0, x=70, y=140, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [11, 12, 13, 14]  放进袋子  14  袋子种类为2              patten : [4, 0, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
Position{type=0, id=0, x=0, y=90, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=0, x=0, y=70, z=70, lx=70, ly=200, lz=70}
Position{type=0, id=0, x=110, y=70, z=140, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  15  袋子种类为2              patten : [0, 20, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_15,15 + 1.0*s_16,15 + 1.0*s_17,15 + 1.0*s_18,15 + 1.0*s_19,15 + 1.0*s_20,15 + 1.0*s_21,15 + 1.0*s_22,15 + 1.0*s_23,15 + 1.0*s_24,15 + 1.0*s_25,15 + 1.0*s_26,15 + 1.0*s_27,15 + 1.0*s_28,15 + 1.0*s_29,15 - 14.0*n_15) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=15, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=120, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 31]  放进袋子  6  袋子种类为0              patten : [2, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=0, z=70, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=130, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [32]  放进袋子  7  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
将物品  [13]  放进袋子  8  袋子种类为1              patten : [1, 0, 1]
needToSolve=false needToAddCut=false
将物品  [33, 34]  放进袋子  9  袋子种类为1              patten : [0, 2, 1]
needToSolve=false needToAddCut=false
将物品  [14]  放进袋子  12  袋子种类为1              patten : [1, 0, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]
将物品  [0, 1]  放进袋子  0  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  13  袋子种类为2              patten : [3, 16, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33]  放进袋子  14  袋子种类为2              patten : [10, 3, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_31,14 + 1.0*s_32,14 - 11.0*n_14) <= 0
needToSolve=true needToAddCut=true
将物品  [34]  放进袋子  15  袋子种类为2              patten : [0, 1, 2]
needToSolve=false needToAddCut=false
      0     2        1.5651    60                      1.5651     1869         
Elapsed time = 4.45 sec. (344.67 ticks, tree = 0.01 MB, solutions = 0)
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]  放进袋子  13  袋子种类为2              patten : [15, 1, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [0, 19, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_16,14 + 1.0*s_17,14 + 1.0*s_18,14 + 1.0*s_19,14 + 1.0*s_20,14 + 1.0*s_21,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 - 14.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [5, 8, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [10, 12, 2]
addNoGoodCut:  (1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 21.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [3, 8, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [0, 12, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [12, 0, 2]
haha
Position{type=0, id=3, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=4, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=5, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=6, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=7, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=8, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=9, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=200, y=270, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=340, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=350, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [1, 8, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=70, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=130, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=19, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=0, y=190, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=220, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28, 29]  放进袋子  9  袋子种类为1              patten : [0, 7, 1]
haha
Position{type=1, id=23, x=0, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=24, x=60, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=25, x=120, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=180, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=240, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=300, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=0, y=220, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [14, 5, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [0, 8, 1]
haha
Position{type=1, id=23, x=0, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=24, x=60, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=25, x=120, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=180, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=240, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=300, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=280, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [14, 4, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=140, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=19, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=22, x=220, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28, 29]  放进袋子  9  袋子种类为1              patten : [0, 7, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [13, 5, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 23, 24, 25, 26, 27, 28, 29]  放进袋子  9  袋子种类为1              patten : [1, 7, 1]
haha
Position{type=0, id=2, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=23, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=70, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=130, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=190, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [12, 5, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_30,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 23, 24, 25, 26, 27, 28, 29]  放进袋子  9  袋子种类为1              patten : [3, 7, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [10, 5, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_30,13 + 1.0*s_31,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [12, 4, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_31,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [11, 4, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_31,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [4, 31]  放进袋子  10  袋子种类为1              patten : [1, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=60, z=0, lx=70, ly=70, lz=200}
Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [10, 3, 2]
addNoGoodCut:  (1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [4, 31, 32]  放进袋子  10  袋子种类为1              patten : [1, 2, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=70, lz=200}
Position{type=1, id=0, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=130, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  13  袋子种类为2              patten : [10, 2, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_33,13 + 1.0*s_34,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [4, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [1, 4, 1]
haha
Position{type=0, id=4, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=31, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=250, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [10, 0, 2]
haha
Position{type=0, id=5, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=6, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=7, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=8, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=9, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=10, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=11, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=270, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=280, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
*    31    23      integral     0        3.1000        1.5724     3454   49.28%
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 4, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19]  放进袋子  8  袋子种类为1              patten : [10, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 15, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=15, x=70, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=70, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=70, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=70, y=180, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20]  放进袋子  8  袋子种类为1              patten : [9, 2, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 14, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4]  放进袋子  8  袋子种类为1              patten : [5, 0, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=3, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=4, x=280, y=0, z=0, lx=70, ly=200, lz=70}
needToSolve=true needToAddCut=false
将物品  [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]  放进袋子  9  袋子种类为1              patten : [1, 12, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_5,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 8, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=3, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=4, x=280, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=5, x=0, y=200, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  9  袋子种类为1              patten : [0, 13, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 7, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [0, 1, 2, 3, 15, 16]  放进袋子  8  袋子种类为1              patten : [4, 2, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=2, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=3, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=16, x=0, y=280, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [1, 15, 2]
haha
Position{type=0, id=4, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=17, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=19, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=250, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=310, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=220, y=0, z=60, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=280, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=280, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [10, 3, 2]
addNoGoodCut:  (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 12.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=70, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=130, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=19, x=0, y=0, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [1, 20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 5, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 6, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_19,0 - 6.0*n_0) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 26, 27, 28, 29]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 5, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
     83    60        2.2000    22        3.1000        1.6481     6042   46.83%
print n
[1.0, 1.0, 1.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=140, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [19, 20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 26, 27, 28, 29]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 30]  放进袋子  8  袋子种类为1              patten : [1, 1, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 4, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4]  放进袋子  0  袋子种类为0              patten : [5, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [0, 14, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 - 8.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 3, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 15, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  8  袋子种类为1              patten : [0, 14, 1]
addNoGoodCut:  (1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 - 13.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 2, 2]
haha
Position{type=0, id=6, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=7, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=8, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=10, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=11, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=12, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=270, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=33, x=0, y=340, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  8  袋子种类为1              patten : [0, 13, 1]
addNoGoodCut:  (1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  13  袋子种类为2              patten : [9, 2, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6]  放进袋子  1  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [0, 6, 1]
haha
Position{type=1, id=20, x=0, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=21, x=60, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=22, x=120, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=23, x=180, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=24, x=240, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=25, x=300, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 9, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [2, 3, 0]
haha
Position{type=0, id=1, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=70, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=20, x=70, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=21, x=70, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=70, y=190, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4, 5, 6, 7, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 3, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 9, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 2, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=60, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=120, z=70, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=0, z=80, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [6, 13, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 22, 23]  放进袋子  8  袋子种类为1              patten : [6, 2, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_22,8 + 1.0*s_23,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [6, 11, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 - 6.0*n_0) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6]  放进袋子  1  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8]  放进袋子  2  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_19,8 + 1.0*s_20,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 10, 2]
haha
Position{type=1, id=25, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=180, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=280, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=340, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=32, x=400, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=240, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [28, 29, 30, 31, 32, 33, 34]  放进袋子  3  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 + 1.0*s_33,3 + 1.0*s_34,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [6]  放进袋子  4  袋子种类为0              patten : [1, 0, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  8  袋子种类为1              patten : [8, 0, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20, 21]  放进袋子  0  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_19,0 + 1.0*s_20,0 + 1.0*s_21,0 - 6.0*n_0) <= 0
needToSolve=false needToAddCut=true
将物品  [22, 23, 24, 25, 26, 27, 28]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 + 1.0*s_26,1 + 1.0*s_27,1 + 1.0*s_28,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 6, 29, 30]  放进袋子  8  袋子种类为1              patten : [7, 2, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_29,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
haha
Position{type=0, id=7, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=8, x=200, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=200, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=200, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=31, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=340, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25, 26]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 + 1.0*s_26,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [6, 4, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_27,8 + 1.0*s_28,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5]  放进袋子  1  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 - 4.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [1, 12, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20, 21]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_20,1 + 1.0*s_21,1 - 5.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
haha
Position{type=0, id=5, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=6, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=22, x=0, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=23, x=60, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=24, x=120, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=25, x=140, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=180, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=240, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=220, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
haha
Position{type=1, id=15, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=16, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=17, x=0, y=0, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=18, x=0, y=60, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=19, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=20, x=0, y=120, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 21]  放进袋子  1  袋子种类为0              patten : [5, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_21,1 + 1.0*s_4,1 - 5.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10]  放进袋子  2  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 - 4.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [4, 14, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 18, 19]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_18,1 + 1.0*s_19,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9]  放进袋子  2  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [10, 11]  放进袋子  3  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [12, 20]  放进袋子  4  袋子种类为0              patten : [1, 1, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 14, 2]
装不完，装了15
addNoGoodCut:  (1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 15.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5]  放进袋子  1  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 10, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18]  放进袋子  1  袋子种类为0              patten : [3, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=0, z=70, lx=200, ly=70, lz=70}
Position{type=0, id=0, x=0, y=120, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=130, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 9, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16]  放进袋子  0  袋子种类为0              patten : [1, 2, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=60, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=0, x=0, y=140, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=0, z=70, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 21, 22, 23, 24, 25, 26]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 8, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16]  放进袋子  0  袋子种类为0              patten : [1, 2, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 20, 21, 22, 23, 24, 25, 26]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 8, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21, 22]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_21,1 + 1.0*s_22,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 12, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [10, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 2, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=21, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=220, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [2, 11, 1]
装不完，装了11
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 - 11.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [10, 1, 2]
haha
Position{type=0, id=5, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=6, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=7, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=8, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=9, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=10, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=11, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=270, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=34, x=200, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=3, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=21, x=0, y=200, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [1, 12, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [10, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4]  放进袋子  1  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 - 4.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [0, 13, 1]
addNoGoodCut:  (1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [10, 1, 2]
needToSolve=false needToAddCut=false
    267   154        2.2000    14        3.1000        1.7108     9722   44.81%
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0]
将物品  [0, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [1, 18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 24, 25]  放进袋子  2  袋子种类为0              patten : [1, 2, 0]
needToSolve=false needToAddCut=false
将物品  [26, 27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [32, 33]  放进袋子  4  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [12, 1, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1]  放进袋子  2  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [8, 4, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 4, 2]
haha
Position{type=0, id=10, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=31, x=0, y=350, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=320, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2]  放进袋子  2  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [7, 4, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_27,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2]  放进袋子  2  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
haha
Position{type=0, id=3, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=4, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=5, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=6, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=7, x=280, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=8, x=0, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=0, y=270, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
将物品  [10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 8, 2]
needToSolve=false needToAddCut=false
*   300+  162                            2.9000        1.7125            40.95%
print n
[1.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 3, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=90, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=0, x=0, y=150, z=60, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [18, 19, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [0, 1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [11, 1, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_34,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 11, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 10.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [11, 0, 2]
haha
Position{type=0, id=4, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=5, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=6, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=7, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=8, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=9, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=10, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=200, y=270, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=340, z=0, lx=200, ly=70, lz=70}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [0, 11, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 - 8.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [11, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 22, 23, 24, 25, 26, 27, 28]  放进袋子  8  袋子种类为1              patten : [3, 7, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 6, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [6, 7, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 5, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
haha
Position{type=0, id=8, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=200, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=200, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=30, x=200, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=330, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28]  放进袋子  8  袋子种类为1              patten : [6, 5, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_24,8 + 1.0*s_25,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 6, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9]  放进袋子  1  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_8,1 + 1.0*s_9,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [2, 11, 1]
addNoGoodCut:  (1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 9, 2]
haha
Position{type=0, id=12, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=26, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=380, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [9, 3, 1]
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [26, 27, 28, 29, 30, 31, 32]  放进袋子  2  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 + 1.0*s_30,2 + 1.0*s_31,2 + 1.0*s_32,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [1, 2, 3, 4, 33, 34]  放进袋子  8  袋子种类为1              patten : [4, 2, 1]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  9  袋子种类为1              patten : [10, 0, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [4, 8, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [4, 3, 2]
haha
Position{type=0, id=11, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=32, x=270, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=330, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=390, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 4, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_19,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 3, 2]
haha
Position{type=0, id=8, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=200, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=200, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=200, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=32, x=200, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=270, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [7, 3, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_21,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [0, 8, 1]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [8, 4, 1]
addNoGoodCut:  (1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 11.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [0, 9, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 8.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 10.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15, 16, 17, 18, 19, 20]  放进袋子  8  袋子种类为1              patten : [3, 6, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [2, 10, 1]
装不完，装了11
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [6, 4, 1]
addNoGoodCut:  (1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 9.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [0, 10, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 4, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 7.0*n_10) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19]  放进袋子  8  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  9  袋子种类为1              patten : [3, 9, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [14, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [1, 6, 1]
haha
Position{type=0, id=14, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=29, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=70, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=130, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=190, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [16, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [0, 10, 1]
addNoGoodCut:  (1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 26, 27, 28, 29, 30]  放进袋子  9  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [5, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [23, 24]  放进袋子  2  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 9.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  8  袋子种类为1              patten : [1, 8, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  9  袋子种类为1              patten : [7, 2, 1]
addNoGoodCut:  (1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_33,9 + 1.0*s_34,9 - 8.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [2, 7, 1]
haha
Position{type=0, id=7, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=8, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=25, x=0, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=60, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=120, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=140, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=180, y=0, z=70, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=240, y=0, z=70, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [6, 3, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_32,9 + 1.0*s_33,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  9  袋子种类为1              patten : [6, 2, 1]
addNoGoodCut:  (1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_33,9 + 1.0*s_34,9 - 7.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [3, 3, 1]
haha
Position{type=0, id=12, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=32, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=280, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [4, 3, 1]
haha
Position{type=0, id=11, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=32, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=260, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [3, 7, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [5, 3, 1]
addNoGoodCut:  (1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 7.0*n_9) <= 0
needToSolve=false needToAddCut=true
    470   251        2.5000    18        2.9000        1.8365    12910   36.67%
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 17, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 23, 24, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 25, 26, 27, 28]  放进袋子  8  袋子种类为1              patten : [6, 4, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [6, 6, 2]
haha
Position{type=0, id=9, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=200, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=200, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=29, x=0, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=220, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=330, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=330, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 25, 26, 27, 28, 29]  放进袋子  8  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  13  袋子种类为2              patten : [1, 16, 2]
装不完，装了16
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 - 16.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [1, 15, 2]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 5, 2]
addNoGoodCut:  (1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 12.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 15, 2]
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 19.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 5, 2]
haha
Position{type=0, id=11, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=30, x=270, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=330, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=32, x=390, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=0, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=270, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 15]  放进袋子  8  袋子种类为1              patten : [6, 1, 1]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=1, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=2, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=3, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=4, x=280, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=5, x=0, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=15, x=0, y=270, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
将物品  [6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 14, 2]
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 5, 2]
needToSolve=false needToAddCut=false
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 15, 16]  放进袋子  8  袋子种类为1              patten : [6, 2, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_15,8 + 1.0*s_16,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5]  放进袋子  1  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  8  袋子种类为1              patten : [3, 10, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15]  放进袋子  1  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 16]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_16,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
haha
Position{type=0, id=14, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=26, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=70, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=130, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=190, z=60, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=220, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15]  放进袋子  1  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 16]  放进袋子  2  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15]  放进袋子  1  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 16]  放进袋子  2  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [4, 8, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [0, 8, 1]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [9, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,10 + 1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 - 7.0*n_10) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 16, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 16, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8]  放进袋子  4  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [6, 3, 1]
addNoGoodCut:  (1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [16, 17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8]  放进袋子  4  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  8  袋子种类为1              patten : [6, 2, 1]
addNoGoodCut:  (1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_33,8 + 1.0*s_34,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 28, 29, 30, 31, 32, 33]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 + 1.0*s_33,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8]  放进袋子  4  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  8  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 23, 24, 25, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 29, 30, 31, 32, 33]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 + 1.0*s_33,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8]  放进袋子  4  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  8  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 33, 34]  放进袋子  4  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 32, 33, 34]  放进袋子  4  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14]  放进袋子  8  袋子种类为1              patten : [6, 0, 1]
needToSolve=false needToAddCut=false
*   608   290      integral     0        2.7000        1.9183    14455   28.95%
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_1,2 + 1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 29]  放进袋子  3  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [30, 31, 32, 33, 34]  放进袋子  4  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14]  放进袋子  5  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_9,5 + 1.0*s_10,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_13,5 + 1.0*s_14,5 - 5.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 26]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_1,2 + 1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_26,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [30, 31, 32, 33, 34]  放进袋子  4  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [10, 11, 12, 13, 14]  放进袋子  5  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_10,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_13,5 + 1.0*s_14,5 - 4.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7]  放进袋子  1  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
needToSolve=false needToAddCut=false
将物品  [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 16, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 14.0*n_13) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 16, 17, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [22, 23, 24, 25, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_6,4 + 1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_33,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11]  放进袋子  3  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
    728   349        1.9426    60        2.7000        1.9226    16165   28.79%
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [28, 29, 30, 31, 32, 33, 34]  放进袋子  4  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 + 1.0*s_34,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [14]  放进袋子  5  袋子种类为0              patten : [1, 0, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [10, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [4, 8, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  13  袋子种类为2              patten : [10, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  13  袋子种类为2              patten : [10, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [5, 4, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 19, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6]  放进袋子  2  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [25, 26, 27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12]  放进袋子  4  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6]  放进袋子  2  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_1,2 + 1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [26, 27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11]  放进袋子  4  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 - 4.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 19, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7]  放进袋子  2  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14]  放进袋子  4  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [28, 29, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_28,5 + 1.0*s_29,5 + 1.0*s_30,5 + 1.0*s_31,5 + 1.0*s_32,5 + 1.0*s_33,5 + 1.0*s_34,5 - 6.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8]  放进袋子  2  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 29]  放进袋子  4  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 19, 20]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_19,1 + 1.0*s_20,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 21, 22]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_21,2 + 1.0*s_22,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [23, 24, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 29]  放进袋子  4  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_29,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 23]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_23,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 24, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 29]  放进袋子  4  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 18, 19]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_1,1 + 1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_18,1 + 1.0*s_19,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [20, 21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10]  放进袋子  4  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_6,4 + 1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 - 4.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 33, 34]  放进袋子  5  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_13,5 + 1.0*s_14,5 + 1.0*s_33,5 + 1.0*s_34,5 - 5.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 25, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30]  放进袋子  4  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_14,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 18]  放进袋子  1  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_18,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12]  放进袋子  2  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_12,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 19, 20, 21, 22, 23]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_13,3 + 1.0*s_14,3 + 1.0*s_19,3 + 1.0*s_20,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 11, 2]
haha
Position{type=1, id=24, x=0, y=0, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=60, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=120, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=180, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=280, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=340, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=400, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=32, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=240, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=280, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6]  放进袋子  1  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 - 4.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 18, 19, 20]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_18,2 + 1.0*s_19,2 + 1.0*s_20,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 21, 22, 23]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_14,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 11, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 19, 20]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_19,1 + 1.0*s_20,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 27, 28]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_27,3 + 1.0*s_28,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 29]  放进袋子  4  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 28]  放进袋子  3  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_28,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 29]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 30, 31]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_30,4 + 1.0*s_31,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 27, 28]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_27,3 + 1.0*s_28,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 29, 30, 31]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 27]  放进袋子  3  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 28, 29, 30, 31]  放进袋子  4  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 27, 28, 29, 30, 31]  放进袋子  4  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
   1000   478        2.3795    28        2.7000        1.9986    19113   25.98%
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  14  袋子种类为2              patten : [10, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=1, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=21, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=140, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=260, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=220, y=0, z=60, lx=60, ly=220, lz=60}
Position{type=1, id=32, x=280, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=280, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  14  袋子种类为2              patten : [13, 1, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,14 + 1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  13  袋子种类为2              patten : [4, 13, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  14  袋子种类为2              patten : [11, 1, 2]
addNoGoodCut:  (1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_34,14 - 11.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 14, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  14  袋子种类为2              patten : [12, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 27]  放进袋子  3  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_27,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 28, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_12,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 34]  放进袋子  5  袋子种类为0              patten : [2, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 25, 26, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 22, 23]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_22,2 + 1.0*s_23,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 24, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_14,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [34]  放进袋子  5  袋子种类为0              patten : [0, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 22]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_22,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 23, 24, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [28, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9]  放进袋子  2  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 - 4.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 22, 23, 24, 25, 26]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [27, 28, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 26, 27, 28, 29, 30]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_1,2 + 1.0*s_2,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 + 1.0*s_30,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 7, 31]  放进袋子  3  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_31,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 26, 27, 28, 29, 30, 31]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_1,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 + 1.0*s_30,2 + 1.0*s_31,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7]  放进袋子  3  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_2,3 + 1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 26, 27, 28, 29]  放进袋子  2  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [12, 7, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_15,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [3, 13, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 - 13.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0]  放进袋子  0  袋子种类为0              patten : [1, 0, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [12, 7, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1]  放进袋子  0  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17]  放进袋子  13  袋子种类为2              patten : [12, 3, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_15,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 17, 2]
装不完，装了16
addNoGoodCut:  (1.0*s_14,14 + 1.0*s_18,14 + 1.0*s_19,14 + 1.0*s_20,14 + 1.0*s_21,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 - 16.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  13  袋子种类为2              patten : [11, 8, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_15,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 12, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1]  放进袋子  0  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  13  袋子种类为2              patten : [10, 8, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_15,13 + 1.0*s_16,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [3, 12, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 - 13.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1]  放进袋子  0  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23]  放进袋子  13  袋子种类为2              patten : [9, 9, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 11, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 19]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [6, 20, 21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [26, 27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 19]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [6, 26, 27, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 32, 33]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_32,4 + 1.0*s_33,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2]  放进袋子  0  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [7, 15, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [5, 5, 2]
haha
Position{type=0, id=10, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=280, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=30, x=0, y=350, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=32, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=200, y=220, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [6, 15, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [5, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [7, 13, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [5, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [6, 14, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [5, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15]  放进袋子  0  袋子种类为0              patten : [1, 1, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24]  放进袋子  13  袋子种类为2              patten : [7, 9, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 10, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16]  放进袋子  0  袋子种类为0              patten : [1, 2, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24]  放进袋子  13  袋子种类为2              patten : [8, 8, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 10, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16]  放进袋子  0  袋子种类为0              patten : [1, 2, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [7, 15, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 21.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15]  放进袋子  0  袋子种类为0              patten : [2, 1, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [6, 16, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [6, 15, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 20.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16]  放进袋子  0  袋子种类为0              patten : [1, 2, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [7, 13, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 19.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [6, 13, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [8, 12, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 6, 2]
addNoGoodCut:  (1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 12.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [11, 6, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_15,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [0, 14, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [11, 5, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_16,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [0, 14, 2]
needToSolve=false needToAddCut=false
   1224   487    infeasible              2.7000        2.0199    21608   25.19%
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15]  放进袋子  0  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [11, 6, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 13, 2]
haha
Position{type=0, id=14, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=22, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=250, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=310, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=220, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [11, 5, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15]  放进袋子  0  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [10, 6, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_16,13 + 1.0*s_17,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [10, 5, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [10, 6, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [9, 6, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [11, 4, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [10, 4, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_18,13 + 1.0*s_19,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [20, 21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [7, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 29, 30]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_29,4 + 1.0*s_30,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_12,5 + 1.0*s_13,5 + 1.0*s_14,5 + 1.0*s_31,5 + 1.0*s_32,5 + 1.0*s_33,5 + 1.0*s_34,5 - 6.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 16, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 26, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 30]  放进袋子  4  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_30,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 16, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12]  放进袋子  4  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 - 4.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 27, 28]  放进袋子  4  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [29, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 17, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 33, 34]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_7,4 + 1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_33,4 + 1.0*s_34,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14]  放进袋子  5  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 28]  放进袋子  3  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_28,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_2,2 + 1.0*s_3,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3]  放进袋子  1  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8]  放进袋子  2  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 - 4.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14]  放进袋子  3  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_14,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 14, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5]  放进袋子  1  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 19, 20]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_19,2 + 1.0*s_20,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_14,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [0, 14, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [15, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 3, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26]  放进袋子  13  袋子种类为2              patten : [9, 9, 2]
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 8, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [8, 11, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [8, 9, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [7, 10, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [6, 11, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [7, 10, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 23]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_23,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 24, 25, 26, 27, 28]  放进袋子  4  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [14, 29, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_14,5 + 1.0*s_29,5 + 1.0*s_30,5 + 1.0*s_31,5 + 1.0*s_32,5 + 1.0*s_33,5 + 1.0*s_34,5 - 6.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7]  放进袋子  2  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 - 4.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [29, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [3, 14, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [10, 2, 2]
addNoGoodCut:  (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_33,14 + 1.0*s_34,14 - 11.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [5, 22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14]  放进袋子  4  袋子种类为0              patten : [6, 0, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_14,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 28, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11]  放进袋子  4  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 24, 25, 26, 27, 28]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 29, 30, 31]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [5, 3, 1]
addNoGoodCut:  (1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21]  放进袋子  13  袋子种类为2              patten : [12, 2, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_20,13 + 1.0*s_21,13 - 13.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
   1428   546        2.2000    20        2.7000        2.0799    24214   22.97%
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  13  袋子种类为2              patten : [8, 10, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 7, 2]
haha
Position{type=0, id=11, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=28, x=270, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=330, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=390, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=0, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=330, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  13  袋子种类为2              patten : [9, 9, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 7, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 26]  放进袋子  13  袋子种类为2              patten : [9, 8, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 8, 2]
haha
Position{type=0, id=11, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=27, x=270, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=330, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=390, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=0, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=330, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=330, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  13  袋子种类为2              patten : [10, 8, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 7, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26]  放进袋子  13  袋子种类为2              patten : [10, 7, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_20,13 + 1.0*s_21,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 8, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25]  放进袋子  13  袋子种类为2              patten : [9, 7, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [4, 9, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 12.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24]  放进袋子  13  袋子种类为2              patten : [10, 6, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [3, 10, 2]
haha
Position{type=0, id=12, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=25, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=26, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=27, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=380, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=340, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=340, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 23]  放进袋子  13  袋子种类为2              patten : [10, 5, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [3, 11, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 13.0*n_14) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0]  放进袋子  0  袋子种类为0              patten : [1, 0, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 15, 16, 17, 18, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [9, 3, 1]
addNoGoodCut:  (1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 11.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 26, 27]  放进袋子  9  袋子种类为1              patten : [8, 2, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [3, 7, 1]
addNoGoodCut:  (1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 9.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18]  放进袋子  13  袋子种类为2              patten : [11, 1, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_18,13 - 11.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 16, 2]
addNoGoodCut:  (1.0*s_14,14 + 1.0*s_19,14 + 1.0*s_20,14 + 1.0*s_21,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 16.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1]  放进袋子  0  袋子种类为0              patten : [2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 15, 16, 17]  放进袋子  8  袋子种类为1              patten : [6, 3, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 18, 19, 20]  放进袋子  9  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 - 9.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [0, 14, 1]
addNoGoodCut:  (1.0*s_21,10 + 1.0*s_22,10 + 1.0*s_23,10 + 1.0*s_24,10 + 1.0*s_25,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 13.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 4, 0]
needToSolve=false needToAddCut=false
将物品  [0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [1, 13, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 - 10.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 32]  放进袋子  9  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [8, 2, 1]
addNoGoodCut:  (1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_33,10 + 1.0*s_34,10 - 9.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [0, 13, 1]
addNoGoodCut:  (1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32]  放进袋子  9  袋子种类为1              patten : [10, 1, 1]
addNoGoodCut:  (1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_32,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  8  袋子种类为1              patten : [1, 12, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 32]  放进袋子  9  袋子种类为1              patten : [9, 1, 1]
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_32,9 - 9.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 9.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [8, 1, 1]
addNoGoodCut:  (1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_34,10 - 8.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 4, 0]
needToSolve=false needToAddCut=false
将物品  [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [0, 12, 1]
addNoGoodCut:  (1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 6, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_0,9 + 1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  10  袋子种类为1              patten : [8, 0, 1]
addNoGoodCut:  (1.0*s_7,10 + 1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 - 7.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [0, 11, 1]
addNoGoodCut:  (1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [8, 3, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_0,9 + 1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [7, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_8,10 + 1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_34,10 - 7.0*n_10) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  8  袋子种类为1              patten : [1, 10, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 - 10.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [8, 3, 1]
addNoGoodCut:  (1.0*s_1,9 + 1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 17, 18, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [4, 8, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [6, 3, 1]
addNoGoodCut:  (1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 8.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 3, 1]
addNoGoodCut:  (1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 7.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 20, 21]  放进袋子  8  袋子种类为1              patten : [8, 2, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_20,8 + 1.0*s_21,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 13, 2]
addNoGoodCut:  (1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 15, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 20, 21]  放进袋子  8  袋子种类为1              patten : [8, 2, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_20,8 + 1.0*s_21,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8]  放进袋子  1  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_8,1 - 4.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_15,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 15, 16]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_15,1 + 1.0*s_16,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 17, 18, 19, 20, 21]  放进袋子  8  袋子种类为1              patten : [5, 5, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 15, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 12, 19, 20, 21]  放进袋子  8  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 15, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 19, 20, 21, 22]  放进袋子  8  袋子种类为1              patten : [6, 4, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 12, 2]
addNoGoodCut:  (1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_15,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 19, 20, 21]  放进袋子  8  袋子种类为1              patten : [6, 3, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]  放进袋子  8  袋子种类为1              patten : [10, 0, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 12, 2]
haha
Position{type=0, id=13, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=23, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=140, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=260, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=220, y=0, z=60, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=280, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 23]  放进袋子  8  袋子种类为1              patten : [9, 1, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_23,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 11, 2]
addNoGoodCut:  (1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 13.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 24]  放进袋子  8  袋子种类为1              patten : [9, 1, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_24,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 10, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 9, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 10, 2]
needToSolve=false needToAddCut=false
   1640   588        2.5000    24        2.7000        2.1000    26267   22.22%
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_19,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 8, 2]
haha
Position{type=0, id=12, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=27, x=200, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=28, x=260, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=29, x=320, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=30, x=380, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=31, x=0, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=220, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=280, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=280, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 26, 27, 28]  放进袋子  9  袋子种类为1              patten : [7, 3, 1]
addNoGoodCut:  (1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 - 9.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [3, 6, 1]
addNoGoodCut:  (1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 8.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16]  放进袋子  0  袋子种类为0              patten : [0, 2, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21]  放进袋子  9  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [1, 13, 1]
addNoGoodCut:  (1.0*s_14,10 + 1.0*s_22,10 + 1.0*s_23,10 + 1.0*s_24,10 + 1.0*s_25,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 13.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [4, 9, 2]
addNoGoodCut:  (1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 + 1.0*s_34,13 - 12.0*n_13) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 18, 19]  放进袋子  8  袋子种类为1              patten : [7, 2, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_18,8 + 1.0*s_19,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [1, 15, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15]  放进袋子  0  袋子种类为0              patten : [2, 1, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 16]  放进袋子  8  袋子种类为1              patten : [7, 1, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_16,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 1, 15]  放进袋子  0  袋子种类为0              patten : [2, 1, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 16]  放进袋子  8  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23]  放进袋子  9  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 11, 1]
addNoGoodCut:  (1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_24,10 + 1.0*s_25,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 12.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15]  放进袋子  0  袋子种类为0              patten : [2, 1, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24]  放进袋子  9  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_25,10 + 1.0*s_26,10 + 1.0*s_27,10 + 1.0*s_28,10 + 1.0*s_29,10 + 1.0*s_30,10 + 1.0*s_31,10 + 1.0*s_32,10 + 1.0*s_33,10 + 1.0*s_34,10 - 11.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_2,1 + 1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 + 1.0*s_21,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12]  放进袋子  3  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [13, 25, 26, 27, 28, 29]  放进袋子  4  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 21, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11]  放进袋子  3  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 25, 26, 27, 28, 29]  放进袋子  4  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_25,4 + 1.0*s_26,4 + 1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 24]  放进袋子  3  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [12, 25, 26, 27, 28, 29]  放进袋子  4  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_13,5 + 1.0*s_14,5 + 1.0*s_30,5 + 1.0*s_31,5 + 1.0*s_32,5 + 1.0*s_33,5 + 1.0*s_34,5 - 6.0*n_5) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 24]  放进袋子  3  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [12, 25, 26, 27, 28, 29, 30]  放进袋子  4  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_12,4 + 1.0*s_25,4 + 1.0*s_26,4 + 1.0*s_27,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3]  放进袋子  1  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 30, 31, 32]  放进袋子  4  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 28, 29]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_28,3 + 1.0*s_29,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 30, 31]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_8,4 + 1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_30,4 + 1.0*s_31,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 21]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [22, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8]  放进袋子  3  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 - 4.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 28, 29, 30]  放进袋子  4  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 20]  放进袋子  8  袋子种类为1              patten : [7, 1, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_20,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26]  放进袋子  9  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
   1827   630        cutoff              2.7000        2.1333    28798   20.99%
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  8  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 2, 1]
haha
Position{type=0, id=10, x=0, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=11, x=70, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=12, x=140, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=13, x=210, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=14, x=280, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=1, id=33, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=260, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22, 23, 24, 25, 26]  放进袋子  8  袋子种类为1              patten : [3, 7, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 9, 10, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 3, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 3, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 23]  放进袋子  8  袋子种类为1              patten : [9, 2, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_22,8 + 1.0*s_23,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 11, 2]
haha
Position{type=0, id=13, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=24, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=140, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=200, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=260, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=220, y=0, z=60, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12]  放进袋子  8  袋子种类为1              patten : [9, 0, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 - 7.0*n_8) <= 0
needToSolve=true needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 21]  放进袋子  8  袋子种类为1              patten : [8, 1, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_21,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 9, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [7, 4, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [3, 10, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15]  放进袋子  0  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 16]  放进袋子  8  袋子种类为1              patten : [8, 1, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_16,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  9  袋子种类为1              patten : [2, 11, 1]
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 7, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 16]  放进袋子  8  袋子种类为1              patten : [7, 1, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_16,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]  放进袋子  9  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10]  放进袋子  8  袋子种类为1              patten : [8, 0, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 - 7.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 16]  放进袋子  8  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
将物品  [10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10]  放进袋子  8  袋子种类为1              patten : [7, 0, 1]
needToSolve=false needToAddCut=false
将物品  [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  9  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_19,9 + 1.0*s_20,9 + 1.0*s_21,9 + 1.0*s_22,9 + 1.0*s_23,9 + 1.0*s_24,9 + 1.0*s_25,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  8  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_3,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [6, 2, 1]
addNoGoodCut:  (1.0*s_9,10 + 1.0*s_10,10 + 1.0*s_11,10 + 1.0*s_12,10 + 1.0*s_13,10 + 1.0*s_14,10 + 1.0*s_33,10 + 1.0*s_34,10 - 7.0*n_10) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [1, 10, 1]
addNoGoodCut:  (1.0*s_8,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [2, 8, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 26, 27, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_0,8 + 1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 26, 27, 28, 29, 30, 31]  放进袋子  9  袋子种类为1              patten : [6, 6, 1]
addNoGoodCut:  (1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 32, 33, 34]  放进袋子  10  袋子种类为1              patten : [4, 3, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [3, 6, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [4, 5, 6, 7, 8, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  9  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 34]  放进袋子  10  袋子种类为1              patten : [6, 1, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16]  放进袋子  0  袋子种类为0              patten : [2, 2, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 17, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 21, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [25, 26, 27, 28, 29, 30]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
*  1963   640      integral     0        2.6000        2.2000    29735   15.38%
Elapsed time = 20.34 sec. (2656.34 ticks, tree = 0.69 MB, solutions = 4)
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 20, 21, 22, 23, 24]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  9  袋子种类为1              patten : [9, 1, 1]
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_34,9 - 9.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [12, 3, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 21]  放进袋子  13  袋子种类为2              patten : [11, 3, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_19,13 - 11.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 13, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_18,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 11, 1]
addNoGoodCut:  (1.0*s_14,9 + 1.0*s_24,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 16, 17, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [6, 5, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 12.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [3, 9, 1]
addNoGoodCut:  (1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 11.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16, 17]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_16,1 + 1.0*s_17,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 21, 22, 23, 24, 25, 26]  放进袋子  1  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_21,1 + 1.0*s_22,1 + 1.0*s_23,1 + 1.0*s_24,1 + 1.0*s_25,1 + 1.0*s_26,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [1, 2, 3, 4, 5, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_1,8 + 1.0*s_2,8 + 1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  9  袋子种类为1              patten : [9, 0, 1]
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_10,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 - 8.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  8  袋子种类为1              patten : [4, 9, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [8, 4, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 9, 10, 11, 22, 23, 24, 25, 26]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [3, 8, 1]
addNoGoodCut:  (1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_18,1 + 1.0*s_19,1 + 1.0*s_20,1 - 6.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 18, 19]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_18,1 + 1.0*s_19,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [1, 10, 1]
addNoGoodCut:  (1.0*s_14,9 + 1.0*s_25,9 + 1.0*s_26,9 + 1.0*s_27,9 + 1.0*s_28,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 + 1.0*s_33,9 + 1.0*s_34,9 - 10.0*n_9) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [7, 5, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 18]  放进袋子  1  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_18,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25]  放进袋子  8  袋子种类为1              patten : [5, 7, 1]
addNoGoodCut:  (1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 10, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  8  袋子种类为1              patten : [5, 8, 1]
addNoGoodCut:  (1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_8,8 + 1.0*s_9,8 + 1.0*s_10,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 + 1.0*s_24,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 - 12.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  9  袋子种类为1              patten : [4, 6, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_13,9 + 1.0*s_14,9 + 1.0*s_29,9 + 1.0*s_30,9 + 1.0*s_31,9 + 1.0*s_32,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [4, 8, 1]
addNoGoodCut:  (1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_16,8 + 1.0*s_17,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23]  放进袋子  8  袋子种类为1              patten : [5, 6, 1]
addNoGoodCut:  (1.0*s_3,8 + 1.0*s_4,8 + 1.0*s_5,8 + 1.0*s_6,8 + 1.0*s_7,8 + 1.0*s_18,8 + 1.0*s_19,8 + 1.0*s_20,8 + 1.0*s_21,8 + 1.0*s_22,8 + 1.0*s_23,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  9  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
将物品  [10, 11, 12, 13, 14, 33, 34]  放进袋子  10  袋子种类为1              patten : [5, 2, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 23, 24]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_23,2 + 1.0*s_24,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [4, 7, 1]
addNoGoodCut:  (1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 20, 21, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [4, 6, 1]
addNoGoodCut:  (1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 20, 21, 22]  放进袋子  2  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 12, 23, 24]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_23,3 + 1.0*s_24,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 10, 1]
addNoGoodCut:  (1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 11.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 20, 21, 22]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 23, 24]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_23,3 + 1.0*s_24,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 10, 1]
addNoGoodCut:  (1.0*s_14,8 + 1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 10.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 16, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 20, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 24, 25]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_24,3 + 1.0*s_25,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 17, 18, 19]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 20, 21]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_20,2 + 1.0*s_21,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 22, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 17, 18]  放进袋子  1  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_17,1 + 1.0*s_18,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 19, 20, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_19,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 24, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [3, 7, 1]
addNoGoodCut:  (1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 19, 20, 21, 22]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_19,2 + 1.0*s_20,2 + 1.0*s_21,2 + 1.0*s_22,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 19, 20, 21]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_19,2 + 1.0*s_20,2 + 1.0*s_21,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 22, 23, 24]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_14,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [0, 10, 1]
addNoGoodCut:  (1.0*s_25,8 + 1.0*s_26,8 + 1.0*s_27,8 + 1.0*s_28,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 9.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 19, 20]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_19,2 + 1.0*s_20,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 21, 22, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 17, 18, 19]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_17,2 + 1.0*s_18,2 + 1.0*s_19,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 20, 21, 22, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_12,3 + 1.0*s_20,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 17]  放进袋子  1  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 + 1.0*s_17,1 - 5.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 18]  放进袋子  2  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_12,2 + 1.0*s_18,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [19, 20, 21, 22, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_19,3 + 1.0*s_20,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [3, 6, 1]
addNoGoodCut:  (1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_29,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7]  放进袋子  1  袋子种类为0              patten : [5, 0, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_7,1 - 4.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 18, 19, 20]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_10,2 + 1.0*s_11,2 + 1.0*s_18,2 + 1.0*s_19,2 + 1.0*s_20,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 21, 22, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_21,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
   3126   544    infeasible              2.6000        2.3000    37850   11.54%
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 21, 22, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 25]  放进袋子  3  袋子种类为0              patten : [5, 1, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_25,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 24, 25]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_10,3 + 1.0*s_11,3 + 1.0*s_12,3 + 1.0*s_13,3 + 1.0*s_24,3 + 1.0*s_25,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [1, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 21, 22]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_9,2 + 1.0*s_21,2 + 1.0*s_22,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 23, 24, 25]  放进袋子  3  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [2, 9, 1]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 21, 22, 23, 24, 25]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_21,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 26, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  8  袋子种类为1              patten : [4, 5, 1]
addNoGoodCut:  (1.0*s_11,8 + 1.0*s_12,8 + 1.0*s_13,8 + 1.0*s_14,8 + 1.0*s_30,8 + 1.0*s_31,8 + 1.0*s_32,8 + 1.0*s_33,8 + 1.0*s_34,8 - 8.0*n_8) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [23, 24, 25, 26, 27, 28, 29]  放进袋子  2  袋子种类为0              patten : [0, 7, 0]
addNoGoodCut:  (1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 + 1.0*s_28,2 + 1.0*s_29,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [3, 4, 5, 6, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [17, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_3,2 + 1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 + 1.0*s_30,3 + 1.0*s_31,3 + 1.0*s_32,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [0, 1, 2]  放进袋子  0  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [6, 15, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 20.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 5, 2]
haha
Position{type=0, id=9, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=200, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=11, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=12, x=200, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=13, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=200, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=30, x=0, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=220, y=210, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=0, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=220, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=0, y=330, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 15, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 19.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2]  放进袋子  0  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [6, 14, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 19.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [5, 14, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2]  放进袋子  0  袋子种类为0              patten : [3, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 15, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 19.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [4, 15, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [6, 12, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [4, 14, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 3, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [5, 14, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 18.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [9, 3, 2]
addNoGoodCut:  (1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 11.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [6, 12, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 3, 2]
haha
Position{type=0, id=7, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=8, x=0, y=70, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=9, x=0, y=140, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=10, x=200, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=11, x=270, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=12, x=340, y=0, z=0, lx=70, ly=200, lz=70}
Position{type=0, id=13, x=200, y=200, z=0, lx=200, ly=70, lz=70}
Position{type=0, id=14, x=0, y=210, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=32, x=200, y=270, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=33, x=0, y=330, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=34, x=220, y=330, z=0, lx=220, ly=60, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  13  袋子种类为2              patten : [6, 11, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 3, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  放进袋子  13  袋子种类为2              patten : [5, 12, 2]
装不完，装了13
addNoGoodCut:  (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 - 13.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 9, 10, 11, 12, 13, 14, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [8, 4, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 21, 22, 23]  放进袋子  2  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [8, 9, 10, 11, 24]  放进袋子  3  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 25, 26, 27, 28]  放进袋子  4  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_14,4 + 1.0*s_25,4 + 1.0*s_26,4 + 1.0*s_27,4 + 1.0*s_28,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [29, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [10, 6, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 - 15.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 14, 2]
haha
Position{type=0, id=14, x=0, y=0, z=0, lx=200, ly=70, lz=70}
Position{type=1, id=21, x=0, y=0, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=22, x=0, y=60, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=23, x=0, y=70, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=24, x=0, y=120, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=25, x=0, y=130, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=26, x=0, y=180, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=27, x=0, y=190, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=28, x=0, y=240, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=29, x=0, y=250, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=30, x=0, y=300, z=70, lx=220, ly=60, lz=60}
Position{type=1, id=31, x=0, y=310, z=0, lx=220, ly=60, lz=60}
Position{type=1, id=32, x=220, y=0, z=0, lx=60, ly=220, lz=60}
Position{type=1, id=33, x=220, y=0, z=60, lx=60, ly=220, lz=60}
Position{type=1, id=34, x=280, y=0, z=0, lx=60, ly=220, lz=60}
needToSolve=true needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19]  放进袋子  13  袋子种类为2              patten : [10, 5, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 15, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [10, 5, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 14, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3, 15]  放进袋子  0  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19]  放进袋子  13  袋子种类为2              patten : [10, 4, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 - 13.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [1, 15, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 3]  放进袋子  0  袋子种类为0              patten : [4, 0, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20]  放进袋子  13  袋子种类为2              patten : [9, 6, 2]
addNoGoodCut:  (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_15,13 + 1.0*s_16,13 + 1.0*s_17,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 - 14.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [2, 14, 2]
addNoGoodCut:  (1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_21,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 15.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [7, 12, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 - 12.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [5, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [15, 16, 17, 18, 19, 20]  放进袋子  0  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [9, 8, 2]
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 21, 22, 23, 24, 25, 26, 27]  放进袋子  13  袋子种类为2              patten : [9, 8, 2]
addNoGoodCut:  (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 7, 2]
addNoGoodCut:  (1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 + 1.0*s_12,14 + 1.0*s_13,14 + 1.0*s_14,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 12.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]  放进袋子  13  袋子种类为2              patten : [6, 11, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [6, 6, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]  放进袋子  13  袋子种类为2              patten : [5, 12, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_18,13 + 1.0*s_19,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 - 16.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [8, 9, 10, 11, 12, 13, 14, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [7, 5, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [4, 3, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 13, 28, 29]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_13,4 + 1.0*s_28,4 + 1.0*s_29,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [14, 30, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [0, 5, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 23, 24]  放进袋子  2  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 25, 26, 27, 28]  放进袋子  3  袋子种类为0              patten : [3, 4, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 29, 30]  放进袋子  4  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_9,4 + 1.0*s_10,4 + 1.0*s_11,4 + 1.0*s_12,4 + 1.0*s_29,4 + 1.0*s_30,4 - 5.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [18, 19, 20, 21, 22, 23]  放进袋子  1  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 24]  放进袋子  2  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 25, 26, 27, 28, 29]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 + 1.0*s_28,3 + 1.0*s_29,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 10, 11, 12, 30]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 18, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_22,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [27, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 18, 19, 20, 21, 22]  放进袋子  1  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [4, 5, 23, 24, 25, 26, 27]  放进袋子  2  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_4,2 + 1.0*s_5,2 + 1.0*s_23,2 + 1.0*s_24,2 + 1.0*s_25,2 + 1.0*s_26,2 + 1.0*s_27,2 - 6.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 28, 29, 30, 31, 32]  放进袋子  3  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [7, 8, 9, 10, 33]  放进袋子  4  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [11, 12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 4, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 19]  放进袋子  1  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 20, 21]  放进袋子  2  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_5,2 + 1.0*s_6,2 + 1.0*s_7,2 + 1.0*s_8,2 + 1.0*s_20,2 + 1.0*s_21,2 - 5.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [9, 22, 23, 24, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_22,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 12, 28, 29, 30]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [13, 14, 31, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]  放进袋子  13  袋子种类为2              patten : [4, 14, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34]  放进袋子  14  袋子种类为2              patten : [10, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 1.0, 0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  13  袋子种类为2              patten : [2, 15, 2]
装不完，装了15
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 + 1.0*s_33,13 - 15.0*n_13) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]  放进袋子  14  袋子种类为2              patten : [12, 0, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 15, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [2, 4, 0]
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 19, 20, 21]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [5, 6, 7, 8, 22]  放进袋子  2  袋子种类为0              patten : [4, 1, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 23, 24, 25, 26, 27]  放进袋子  3  袋子种类为0              patten : [2, 5, 0]
addNoGoodCut:  (1.0*s_9,3 + 1.0*s_10,3 + 1.0*s_23,3 + 1.0*s_24,3 + 1.0*s_25,3 + 1.0*s_26,3 + 1.0*s_27,3 - 6.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [11, 28, 29, 30, 31, 32, 33]  放进袋子  4  袋子种类为0              patten : [1, 6, 0]
addNoGoodCut:  (1.0*s_11,4 + 1.0*s_28,4 + 1.0*s_29,4 + 1.0*s_30,4 + 1.0*s_31,4 + 1.0*s_32,4 + 1.0*s_33,4 - 6.0*n_4) <= 0
needToSolve=false needToAddCut=true
将物品  [12, 13, 14, 34]  放进袋子  5  袋子种类为0              patten : [3, 1, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [1, 5, 0]
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]  放进袋子  13  袋子种类为2              patten : [5, 13, 2]
addNoGoodCut:  (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_20,13 + 1.0*s_21,13 + 1.0*s_22,13 + 1.0*s_23,13 + 1.0*s_24,13 + 1.0*s_25,13 + 1.0*s_26,13 + 1.0*s_27,13 + 1.0*s_28,13 + 1.0*s_29,13 + 1.0*s_30,13 + 1.0*s_31,13 + 1.0*s_32,13 - 17.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34]  放进袋子  14  袋子种类为2              patten : [9, 2, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, -0.0]
将物品  [0, 1, 2, 15, 16]  放进袋子  0  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17]  放进袋子  13  袋子种类为2              patten : [12, 1, 2]
addNoGoodCut:  (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 + 1.0*s_12,13 + 1.0*s_13,13 + 1.0*s_14,13 + 1.0*s_17,13 - 12.0*n_13) <= 0
needToSolve=false needToAddCut=true
将物品  [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]  放进袋子  14  袋子种类为2              patten : [0, 17, 2]
addNoGoodCut:  (1.0*s_18,14 + 1.0*s_19,14 + 1.0*s_20,14 + 1.0*s_21,14 + 1.0*s_22,14 + 1.0*s_23,14 + 1.0*s_24,14 + 1.0*s_25,14 + 1.0*s_26,14 + 1.0*s_27,14 + 1.0*s_28,14 + 1.0*s_29,14 + 1.0*s_30,14 + 1.0*s_31,14 + 1.0*s_32,14 + 1.0*s_33,14 + 1.0*s_34,14 - 16.0*n_14) <= 0
needToSolve=false needToAddCut=true
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 9, 27, 28]  放进袋子  3  袋子种类为0              patten : [4, 2, 0]
addNoGoodCut:  (1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 + 1.0*s_9,3 + 1.0*s_27,3 + 1.0*s_28,3 - 5.0*n_3) <= 0
needToSolve=false needToAddCut=true
将物品  [10, 11, 29, 30, 31]  放进袋子  4  袋子种类为0              patten : [2, 3, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
将物品  [0, 1, 2, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 5, 18, 19, 20]  放进袋子  1  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [21, 22, 23, 24, 25, 26]  放进袋子  2  袋子种类为0              patten : [0, 6, 0]
needToSolve=false needToAddCut=false
将物品  [6, 7, 8, 27, 28]  放进袋子  3  袋子种类为0              patten : [3, 2, 0]
needToSolve=false needToAddCut=false
将物品  [9, 10, 11, 29, 30, 31]  放进袋子  4  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
将物品  [12, 13, 14, 32, 33, 34]  放进袋子  5  袋子种类为0              patten : [3, 3, 0]
needToSolve=false needToAddCut=false
*  3616     0      integral     0        2.4000        2.4000    40512    0.00%

Clique cuts applied:  47
Cover cuts applied:  56
Implied bound cuts applied:  36
Flow cuts applied:  1
Mixed integer rounding cuts applied:  2
Zero-half cuts applied:  7
Gomory fractional cuts applied:  1
User cuts applied:  641

Root node processing (before b&c):
  Real time             =    4.45 sec. (344.72 ticks)
Sequential b&c:
  Real time             =   18.19 sec. (3642.56 ticks)
                          ------------
Total (root+branch&cut) =   22.64 sec. (3987.28 ticks)
!!Thread down
2.4000000000000004
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0]
Total time =22.955s
——————————————————————————————————————————————————
0.0   0.0    false
0.195   8.6    false
0.435   9.7    false
0.437   9.7    false
0.439   9.7    false
0.442   9.7    false
1.015   2.0    false
1.433   3.0    false
1.847   2.0    false
2.326   2.0    false
2.597   2.0    false
2.993   6.199999999999999    false
3.034   1.7999999999999998    false
3.379   3.0    false
3.619   2.0    false
3.734   2.0    false
3.941   2.1    false
4.009   8.7    false
4.053   6.7    false
4.056   3.0    false
4.276   4.1    false
4.291   6.7    false
4.538   3.4    false
4.847   2.0    false
4.895   1.7    false
5.073   2.4    false
5.16   2.4    false
5.322   2.4    false
5.516   2.4    false
5.685   2.4    false
5.821   2.4    false
5.935   2.4    false
6.036   2.4    false
6.042   3.0999999999999996    false
6.134   3.0999999999999996    false
6.231   3.0999999999999996    true
6.469   2.1    false
6.666   2.1    false
6.892   2.4    false
7.071   2.4    false
7.488   2.7    false
7.616   2.2    false
7.713   2.2    false
7.809   2.9    false
7.96   2.5    false
8.048   2.5    false
8.05   2.5    false
8.242   2.5    false
8.392   2.5    false
8.528   2.5    false
8.67   2.5    false
8.809   2.9    false
8.841   2.7    false
8.958   2.5    false
8.988   2.5    false
8.991   2.5    false
9.076   2.5    false
9.083   2.5    false
9.218   2.2    false
9.529   3.0    false
9.703   2.5    false
9.832   2.5    false
9.849   2.5    false
9.884   2.5    false
9.908   2.5    false
10.087   2.5    false
10.089   2.5    false
10.092   2.5    false
10.202   3.0    false
10.316   2.9    false
10.349   2.9    false
10.371   2.9    true
10.475   2.5    false
10.638   2.5    false
10.681   2.5    false
10.784   2.5    false
10.908   2.5    false
11.009   2.5    false
11.095   2.5    false
11.221   2.5    false
11.327   2.5    false
11.347   2.2    false
11.382   2.6    false
11.483   2.8    false
11.586   2.8    false
11.588   2.8    false
11.618   2.8    false
11.635   2.5    false
11.673   2.5    false
11.81   2.5    false
11.877   2.5    false
11.956   2.5    false
11.966   2.8    false
11.967   2.8    false
11.976   2.6    false
11.978   2.6    false
12.063   2.6    false
12.064   2.6    false
12.086   2.6    false
12.113   2.6    false
12.114   2.6    false
12.118   2.5    false
12.119   2.5    false
12.12   2.5    false
12.121   2.5    false
12.122   2.5    false
12.212   2.5    false
12.215   2.5    false
12.596   2.7    false
12.597   2.7    false
12.659   2.7    false
12.683   2.7    false
12.841   2.7    false
12.886   2.5    false
12.973   2.6    false
12.975   2.6    false
12.976   2.6    false
13.018   2.5    false
13.03   2.3    false
13.032   2.7    false
13.034   2.7    false
13.041   2.7    false
13.045   2.7    false
13.047   2.7    false
13.048   2.7    true
13.086   2.4000000000000004    false
13.088   2.4000000000000004    false
13.25   2.5    false
13.259   2.4000000000000004    false
13.276   2.3    false
13.291   2.4000000000000004    false
13.293   2.5    false
13.296   2.5    false
13.299   2.5    false
13.351   2.3    false
13.356   2.4000000000000004    false
13.359   2.4000000000000004    false
13.365   2.4000000000000004    false
13.368   2.4000000000000004    false
13.388   2.4000000000000004    false
13.392   2.4000000000000004    false
13.398   2.4000000000000004    false
13.4   2.4000000000000004    false
13.403   2.4000000000000004    false
13.431   2.4000000000000004    false
13.432   2.4000000000000004    false
13.434   2.4000000000000004    false
13.442   2.4000000000000004    false
13.566   2.6    false
13.568   2.6    false
13.575   2.4000000000000004    false
13.578   2.4000000000000004    false
13.582   2.4000000000000004    false
13.584   2.4000000000000004    false
13.586   2.4000000000000004    false
13.589   2.4000000000000004    false
13.608   2.4    false
14.014   2.4    false
14.129   2.4    false
14.263   2.4    false
14.272   2.4000000000000004    false
14.283   2.4000000000000004    false
14.285   2.4000000000000004    false
14.302   2.4000000000000004    false
14.313   2.4000000000000004    false
14.315   2.4000000000000004    false
14.322   2.4000000000000004    false
14.324   2.4000000000000004    false
14.325   2.4000000000000004    false
14.611   2.0    false
14.619   2.4    false
15.119   2.4    false
15.356   2.0    false
15.602   2.4    false
15.821   2.4    false
15.838   2.4000000000000004    false
15.839   2.4000000000000004    false
16.116   2.4    false
16.256   2.4    false
16.422   2.4    false
16.557   2.4    false
16.697   2.4    false
16.918   2.4    false
16.92   2.4    false
17.067   2.4    false
17.068   2.4    false
17.069   2.4    false
17.07   2.4    false
17.216   2.4    false
17.332   2.4    false
17.439   2.4    false
17.773   2.4    false
17.775   2.4    false
17.885   2.4    false
17.886   2.4    false
17.887   2.4    false
17.888   2.4    false
17.889   2.4    false
17.991   2.4    false
18.007   2.4000000000000004    false
18.012   2.4000000000000004    false
18.015   2.4000000000000004    false
18.035   2.4000000000000004    false
18.046   2.4000000000000004    false
18.058   2.4000000000000004    false
18.06   2.4000000000000004    false
18.066   2.6    false
18.069   2.6    false
18.172   2.4    false
18.307   2.4    false
18.308   2.4    false
18.309   2.4    false
18.312   2.4    false
18.313   2.4    false
18.329   2.4000000000000004    false
18.332   2.4000000000000004    false
18.339   2.4    false
18.346   2.4000000000000004    false
18.349   2.4000000000000004    false
18.359   2.3    false
18.361   2.4    false
18.586   2.4    false
18.59   2.4    false
18.678   2.4    false
18.679   2.4    false
18.792   2.4    false
18.886   2.4    false
18.995   2.4    false
19.11   2.4    false
19.119   2.5    false
19.161   2.5    false
19.166   2.4    false
19.175   2.5    false
19.264   2.5    false
19.266   2.5    false
19.27   2.5    false
19.289   2.5    false
19.29   2.5    false
19.295   2.5    false
19.352   2.5    false
19.42   2.5    false
19.427   2.5    false
19.441   2.5    false
19.454   2.5    false
19.455   2.5    false
19.458   2.5    false
19.489   2.5    false
19.491   2.5    false
19.493   2.5    false
19.495   2.5    false
19.775   2.5    false
19.776   2.5    false
19.778   2.5    false
19.783   2.5    false
19.784   2.5    false
19.879   2.5    false
19.889   2.5    false
19.899   2.5    false
19.931   2.5    false
19.96   2.5    false
19.975   2.5    false
19.977   2.5    false
19.979   2.5    false
19.999   2.4000000000000004    false
20.005   2.4000000000000004    false
20.007   2.4000000000000004    false
20.01   2.4000000000000004    false
20.015   2.4000000000000004    false
20.02   2.4000000000000004    false
20.023   2.4000000000000004    false
20.036   2.5    false
20.038   2.5    false
20.067   2.5    false
20.068   2.5    false
20.069   2.5    false
20.325   2.5    false
20.353   2.5    false
20.354   2.5    false
20.357   2.5    false
20.358   2.5    false
20.365   2.5    false
20.368   2.5    false
20.37   2.5    false
20.371   2.5    false
20.372   2.5    false
20.383   2.5    false
20.388   2.5    false
20.391   2.5    false
20.392   2.5    false
20.395   2.5    false
20.397   2.5    false
20.398   2.5    false
20.4   2.5    false
20.401   2.5    false
20.406   2.5    false
20.409   2.5    false
20.412   2.5    false
20.421   2.5    false
20.44   2.6    true
20.461   2.2    false
20.468   2.4    false
20.564   2.4    false
20.601   2.2    false
20.613   2.2    false
20.617   2.2    false
20.623   2.2    false
20.624   2.2    false
20.635   2.2    false
20.643   2.2    false
20.666   2.2    false
20.67   2.2    false
20.679   2.2    false
20.682   2.2    false
20.687   2.2    false
20.693   2.2    false
20.766   2.2    false
20.828   2.5    false
20.83   2.5    false
20.932   2.3    false
20.949   2.3    false
20.956   2.3    false
20.958   2.3    false
20.975   2.3    false
20.992   2.3    false
21.008   2.3    false
21.019   2.3    false
21.02   2.3    false
21.022   2.3    false
21.036   2.3    false
21.04   2.3    false
21.075   2.3    false
21.118   2.3    false
21.152   2.3    false
21.154   2.3    false
21.156   2.3    false
21.181   2.3    false
21.228   2.4000000000000004    false
21.232   2.4000000000000004    false
21.318   2.4    false
21.321   2.4    false
21.322   2.4    false
21.323   2.4    false
21.324   2.4    false
21.455   2.4    false
21.578   2.4    false
21.579   2.4    false
21.58   2.4    false
21.581   2.4    false
21.584   2.4    false
21.672   2.4    false
21.674   2.4    false
21.675   2.4    false
21.821   2.4    false
21.826   2.4000000000000004    false
22.167   2.4    false
22.168   2.4    false
22.169   2.4    false
22.17   2.4    false
22.171   2.4    false
22.326   2.4    false
22.328   2.4    false
22.33   2.4    false
22.333   2.4    false
22.334   2.4    false
22.337   2.4000000000000004    false
22.342   2.4000000000000004    false
22.345   2.4000000000000004    false
22.35   2.4000000000000004    false
22.358   2.4000000000000004    false
22.366   2.4000000000000004    false
22.374   2.4    false
22.698   2.4    false
22.701   2.4000000000000004    false
22.704   2.4    false
22.719   2.4    false
22.729   2.4000000000000004    false
22.731   2.4000000000000004    true
