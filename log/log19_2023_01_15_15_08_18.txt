3
0.4
0.7
1.0
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=1, id=0, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=2, id=0, p=10, q=10, r=10, num=5, volume=1000}
Item{type=3, id=0, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=4, id=0, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=5, id=0, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=6, id=0, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=0, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=8, id=0, p=280, q=220, r=70, num=1, volume=4312000}
[Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}, Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}, Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}, Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}, Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}, Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}, Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}, Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}, Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}, Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}, Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}, Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}, Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}]
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=13}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=13}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=13}]
Instance{bagTypeCount=3, itemTypeCount=9, bagCount=39, itemCount=13}
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=13}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=13}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=13}]
3
0,1
1,2
2,7
7,8
8,9
9,10
10,11
11,12
12,13
IloModel  {
IloMinimize  : (0.4*n_0 + 0.4*n_1 + 0.4*n_2 + 0.4*n_3 + 0.4*n_4 + 0.4*n_5 + 0.4*n_6 + 0.4*n_7 + 0.4*n_8 + 0.4*n_9 + 0.4*n_10 + 0.4*n_11 + 0.4*n_12 + 0.7*n_13 + 0.7*n_14 + 0.7*n_15 + 0.7*n_16 + 0.7*n_17 + 0.7*n_18 + 0.7*n_19 + 0.7*n_20 + 0.7*n_21 + 0.7*n_22 + 0.7*n_23 + 0.7*n_24 + 0.7*n_25 + 1.0*n_26 + 1.0*n_27 + 1.0*n_28 + 1.0*n_29 + 1.0*n_30 + 1.0*n_31 + 1.0*n_32 + 1.0*n_33 + 1.0*n_34 + 1.0*n_35 + 1.0*n_36 + 1.0*n_37 + 1.0*n_38)
IloRange bag_and_box0 : 1.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10 + 1.0*s_0,11 + 1.0*s_0,12 + 1.0*s_0,13 + 1.0*s_0,14 + 1.0*s_0,15 + 1.0*s_0,16 + 1.0*s_0,17 + 1.0*s_0,18 + 1.0*s_0,19 + 1.0*s_0,20 + 1.0*s_0,21 + 1.0*s_0,22 + 1.0*s_0,23 + 1.0*s_0,24 + 1.0*s_0,25 + 1.0*s_0,26 + 1.0*s_0,27 + 1.0*s_0,28 + 1.0*s_0,29 + 1.0*s_0,30 + 1.0*s_0,31 + 1.0*s_0,32 + 1.0*s_0,33 + 1.0*s_0,34 + 1.0*s_0,35 + 1.0*s_0,36 + 1.0*s_0,37 + 1.0*s_0,38) <= 1.0
IloRange bag_and_box1 : 1.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10 + 1.0*s_1,11 + 1.0*s_1,12 + 1.0*s_1,13 + 1.0*s_1,14 + 1.0*s_1,15 + 1.0*s_1,16 + 1.0*s_1,17 + 1.0*s_1,18 + 1.0*s_1,19 + 1.0*s_1,20 + 1.0*s_1,21 + 1.0*s_1,22 + 1.0*s_1,23 + 1.0*s_1,24 + 1.0*s_1,25 + 1.0*s_1,26 + 1.0*s_1,27 + 1.0*s_1,28 + 1.0*s_1,29 + 1.0*s_1,30 + 1.0*s_1,31 + 1.0*s_1,32 + 1.0*s_1,33 + 1.0*s_1,34 + 1.0*s_1,35 + 1.0*s_1,36 + 1.0*s_1,37 + 1.0*s_1,38) <= 1.0
IloRange bag_and_box2 : 1.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 + 1.0*s_2,35 + 1.0*s_2,36 + 1.0*s_2,37 + 1.0*s_2,38) <= 1.0
IloRange bag_and_box3 : 1.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 + 1.0*s_3,35 + 1.0*s_3,36 + 1.0*s_3,37 + 1.0*s_3,38) <= 1.0
IloRange bag_and_box4 : 1.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 + 1.0*s_4,35 + 1.0*s_4,36 + 1.0*s_4,37 + 1.0*s_4,38) <= 1.0
IloRange bag_and_box5 : 1.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 + 1.0*s_5,35 + 1.0*s_5,36 + 1.0*s_5,37 + 1.0*s_5,38) <= 1.0
IloRange bag_and_box6 : 1.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10 + 1.0*s_6,11 + 1.0*s_6,12 + 1.0*s_6,13 + 1.0*s_6,14 + 1.0*s_6,15 + 1.0*s_6,16 + 1.0*s_6,17 + 1.0*s_6,18 + 1.0*s_6,19 + 1.0*s_6,20 + 1.0*s_6,21 + 1.0*s_6,22 + 1.0*s_6,23 + 1.0*s_6,24 + 1.0*s_6,25 + 1.0*s_6,26 + 1.0*s_6,27 + 1.0*s_6,28 + 1.0*s_6,29 + 1.0*s_6,30 + 1.0*s_6,31 + 1.0*s_6,32 + 1.0*s_6,33 + 1.0*s_6,34 + 1.0*s_6,35 + 1.0*s_6,36 + 1.0*s_6,37 + 1.0*s_6,38) <= 1.0
IloRange bag_and_box7 : 1.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10 + 1.0*s_7,11 + 1.0*s_7,12 + 1.0*s_7,13 + 1.0*s_7,14 + 1.0*s_7,15 + 1.0*s_7,16 + 1.0*s_7,17 + 1.0*s_7,18 + 1.0*s_7,19 + 1.0*s_7,20 + 1.0*s_7,21 + 1.0*s_7,22 + 1.0*s_7,23 + 1.0*s_7,24 + 1.0*s_7,25 + 1.0*s_7,26 + 1.0*s_7,27 + 1.0*s_7,28 + 1.0*s_7,29 + 1.0*s_7,30 + 1.0*s_7,31 + 1.0*s_7,32 + 1.0*s_7,33 + 1.0*s_7,34 + 1.0*s_7,35 + 1.0*s_7,36 + 1.0*s_7,37 + 1.0*s_7,38) <= 1.0
IloRange bag_and_box8 : 1.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10 + 1.0*s_8,11 + 1.0*s_8,12 + 1.0*s_8,13 + 1.0*s_8,14 + 1.0*s_8,15 + 1.0*s_8,16 + 1.0*s_8,17 + 1.0*s_8,18 + 1.0*s_8,19 + 1.0*s_8,20 + 1.0*s_8,21 + 1.0*s_8,22 + 1.0*s_8,23 + 1.0*s_8,24 + 1.0*s_8,25 + 1.0*s_8,26 + 1.0*s_8,27 + 1.0*s_8,28 + 1.0*s_8,29 + 1.0*s_8,30 + 1.0*s_8,31 + 1.0*s_8,32 + 1.0*s_8,33 + 1.0*s_8,34 + 1.0*s_8,35 + 1.0*s_8,36 + 1.0*s_8,37 + 1.0*s_8,38) <= 1.0
IloRange bag_and_box9 : 1.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10 + 1.0*s_9,11 + 1.0*s_9,12 + 1.0*s_9,13 + 1.0*s_9,14 + 1.0*s_9,15 + 1.0*s_9,16 + 1.0*s_9,17 + 1.0*s_9,18 + 1.0*s_9,19 + 1.0*s_9,20 + 1.0*s_9,21 + 1.0*s_9,22 + 1.0*s_9,23 + 1.0*s_9,24 + 1.0*s_9,25 + 1.0*s_9,26 + 1.0*s_9,27 + 1.0*s_9,28 + 1.0*s_9,29 + 1.0*s_9,30 + 1.0*s_9,31 + 1.0*s_9,32 + 1.0*s_9,33 + 1.0*s_9,34 + 1.0*s_9,35 + 1.0*s_9,36 + 1.0*s_9,37 + 1.0*s_9,38) <= 1.0
IloRange bag_and_box10 : 1.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10 + 1.0*s_10,11 + 1.0*s_10,12 + 1.0*s_10,13 + 1.0*s_10,14 + 1.0*s_10,15 + 1.0*s_10,16 + 1.0*s_10,17 + 1.0*s_10,18 + 1.0*s_10,19 + 1.0*s_10,20 + 1.0*s_10,21 + 1.0*s_10,22 + 1.0*s_10,23 + 1.0*s_10,24 + 1.0*s_10,25 + 1.0*s_10,26 + 1.0*s_10,27 + 1.0*s_10,28 + 1.0*s_10,29 + 1.0*s_10,30 + 1.0*s_10,31 + 1.0*s_10,32 + 1.0*s_10,33 + 1.0*s_10,34 + 1.0*s_10,35 + 1.0*s_10,36 + 1.0*s_10,37 + 1.0*s_10,38) <= 1.0
IloRange bag_and_box11 : 1.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 + 1.0*s_11,11 + 1.0*s_11,12 + 1.0*s_11,13 + 1.0*s_11,14 + 1.0*s_11,15 + 1.0*s_11,16 + 1.0*s_11,17 + 1.0*s_11,18 + 1.0*s_11,19 + 1.0*s_11,20 + 1.0*s_11,21 + 1.0*s_11,22 + 1.0*s_11,23 + 1.0*s_11,24 + 1.0*s_11,25 + 1.0*s_11,26 + 1.0*s_11,27 + 1.0*s_11,28 + 1.0*s_11,29 + 1.0*s_11,30 + 1.0*s_11,31 + 1.0*s_11,32 + 1.0*s_11,33 + 1.0*s_11,34 + 1.0*s_11,35 + 1.0*s_11,36 + 1.0*s_11,37 + 1.0*s_11,38) <= 1.0
IloRange bag_and_box12 : 1.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10 + 1.0*s_12,11 + 1.0*s_12,12 + 1.0*s_12,13 + 1.0*s_12,14 + 1.0*s_12,15 + 1.0*s_12,16 + 1.0*s_12,17 + 1.0*s_12,18 + 1.0*s_12,19 + 1.0*s_12,20 + 1.0*s_12,21 + 1.0*s_12,22 + 1.0*s_12,23 + 1.0*s_12,24 + 1.0*s_12,25 + 1.0*s_12,26 + 1.0*s_12,27 + 1.0*s_12,28 + 1.0*s_12,29 + 1.0*s_12,30 + 1.0*s_12,31 + 1.0*s_12,32 + 1.0*s_12,33 + 1.0*s_12,34 + 1.0*s_12,35 + 1.0*s_12,36 + 1.0*s_12,37 + 1.0*s_12,38) <= 1.0
IloRange Volume_0 : -infinity <= (120000.0*s_0,0 + 1472000.0*s_1,0 + 1000.0*s_2,0 + 1000.0*s_3,0 + 1000.0*s_4,0 + 1000.0*s_5,0 + 1000.0*s_6,0 + 2800000.0*s_7,0 + 3360000.0*s_8,0 + 1260000.0*s_9,0 + 4500000.0*s_10,0 + 4000000.0*s_11,0 + 4312000.0*s_12,0 - 6305299.284992639*n_0) <= 0.0
IloRange Volume_1 : -infinity <= (120000.0*s_0,1 + 1472000.0*s_1,1 + 1000.0*s_2,1 + 1000.0*s_3,1 + 1000.0*s_4,1 + 1000.0*s_5,1 + 1000.0*s_6,1 + 2800000.0*s_7,1 + 3360000.0*s_8,1 + 1260000.0*s_9,1 + 4500000.0*s_10,1 + 4000000.0*s_11,1 + 4312000.0*s_12,1 - 6305299.284992639*n_1) <= 0.0
IloRange Volume_2 : -infinity <= (120000.0*s_0,2 + 1472000.0*s_1,2 + 1000.0*s_2,2 + 1000.0*s_3,2 + 1000.0*s_4,2 + 1000.0*s_5,2 + 1000.0*s_6,2 + 2800000.0*s_7,2 + 3360000.0*s_8,2 + 1260000.0*s_9,2 + 4500000.0*s_10,2 + 4000000.0*s_11,2 + 4312000.0*s_12,2 - 6305299.284992639*n_2) <= 0.0
IloRange Volume_3 : -infinity <= (120000.0*s_0,3 + 1472000.0*s_1,3 + 1000.0*s_2,3 + 1000.0*s_3,3 + 1000.0*s_4,3 + 1000.0*s_5,3 + 1000.0*s_6,3 + 2800000.0*s_7,3 + 3360000.0*s_8,3 + 1260000.0*s_9,3 + 4500000.0*s_10,3 + 4000000.0*s_11,3 + 4312000.0*s_12,3 - 6305299.284992639*n_3) <= 0.0
IloRange Volume_4 : -infinity <= (120000.0*s_0,4 + 1472000.0*s_1,4 + 1000.0*s_2,4 + 1000.0*s_3,4 + 1000.0*s_4,4 + 1000.0*s_5,4 + 1000.0*s_6,4 + 2800000.0*s_7,4 + 3360000.0*s_8,4 + 1260000.0*s_9,4 + 4500000.0*s_10,4 + 4000000.0*s_11,4 + 4312000.0*s_12,4 - 6305299.284992639*n_4) <= 0.0
IloRange Volume_5 : -infinity <= (120000.0*s_0,5 + 1472000.0*s_1,5 + 1000.0*s_2,5 + 1000.0*s_3,5 + 1000.0*s_4,5 + 1000.0*s_5,5 + 1000.0*s_6,5 + 2800000.0*s_7,5 + 3360000.0*s_8,5 + 1260000.0*s_9,5 + 4500000.0*s_10,5 + 4000000.0*s_11,5 + 4312000.0*s_12,5 - 6305299.284992639*n_5) <= 0.0
IloRange Volume_6 : -infinity <= (120000.0*s_0,6 + 1472000.0*s_1,6 + 1000.0*s_2,6 + 1000.0*s_3,6 + 1000.0*s_4,6 + 1000.0*s_5,6 + 1000.0*s_6,6 + 2800000.0*s_7,6 + 3360000.0*s_8,6 + 1260000.0*s_9,6 + 4500000.0*s_10,6 + 4000000.0*s_11,6 + 4312000.0*s_12,6 - 6305299.284992639*n_6) <= 0.0
IloRange Volume_7 : -infinity <= (120000.0*s_0,7 + 1472000.0*s_1,7 + 1000.0*s_2,7 + 1000.0*s_3,7 + 1000.0*s_4,7 + 1000.0*s_5,7 + 1000.0*s_6,7 + 2800000.0*s_7,7 + 3360000.0*s_8,7 + 1260000.0*s_9,7 + 4500000.0*s_10,7 + 4000000.0*s_11,7 + 4312000.0*s_12,7 - 6305299.284992639*n_7) <= 0.0
IloRange Volume_8 : -infinity <= (120000.0*s_0,8 + 1472000.0*s_1,8 + 1000.0*s_2,8 + 1000.0*s_3,8 + 1000.0*s_4,8 + 1000.0*s_5,8 + 1000.0*s_6,8 + 2800000.0*s_7,8 + 3360000.0*s_8,8 + 1260000.0*s_9,8 + 4500000.0*s_10,8 + 4000000.0*s_11,8 + 4312000.0*s_12,8 - 6305299.284992639*n_8) <= 0.0
IloRange Volume_9 : -infinity <= (120000.0*s_0,9 + 1472000.0*s_1,9 + 1000.0*s_2,9 + 1000.0*s_3,9 + 1000.0*s_4,9 + 1000.0*s_5,9 + 1000.0*s_6,9 + 2800000.0*s_7,9 + 3360000.0*s_8,9 + 1260000.0*s_9,9 + 4500000.0*s_10,9 + 4000000.0*s_11,9 + 4312000.0*s_12,9 - 6305299.284992639*n_9) <= 0.0
IloRange Volume_10 : -infinity <= (120000.0*s_0,10 + 1472000.0*s_1,10 + 1000.0*s_2,10 + 1000.0*s_3,10 + 1000.0*s_4,10 + 1000.0*s_5,10 + 1000.0*s_6,10 + 2800000.0*s_7,10 + 3360000.0*s_8,10 + 1260000.0*s_9,10 + 4500000.0*s_10,10 + 4000000.0*s_11,10 + 4312000.0*s_12,10 - 6305299.284992639*n_10) <= 0.0
IloRange Volume_11 : -infinity <= (120000.0*s_0,11 + 1472000.0*s_1,11 + 1000.0*s_2,11 + 1000.0*s_3,11 + 1000.0*s_4,11 + 1000.0*s_5,11 + 1000.0*s_6,11 + 2800000.0*s_7,11 + 3360000.0*s_8,11 + 1260000.0*s_9,11 + 4500000.0*s_10,11 + 4000000.0*s_11,11 + 4312000.0*s_12,11 - 6305299.284992639*n_11) <= 0.0
IloRange Volume_12 : -infinity <= (120000.0*s_0,12 + 1472000.0*s_1,12 + 1000.0*s_2,12 + 1000.0*s_3,12 + 1000.0*s_4,12 + 1000.0*s_5,12 + 1000.0*s_6,12 + 2800000.0*s_7,12 + 3360000.0*s_8,12 + 1260000.0*s_9,12 + 4500000.0*s_10,12 + 4000000.0*s_11,12 + 4312000.0*s_12,12 - 6305299.284992639*n_12) <= 0.0
IloRange Volume_13 : -infinity <= (120000.0*s_0,13 + 1472000.0*s_1,13 + 1000.0*s_2,13 + 1000.0*s_3,13 + 1000.0*s_4,13 + 1000.0*s_5,13 + 1000.0*s_6,13 + 2800000.0*s_7,13 + 3360000.0*s_8,13 + 1260000.0*s_9,13 + 4500000.0*s_10,13 + 4000000.0*s_11,13 + 4312000.0*s_12,13 - 1.1340839946075162E7*n_13) <= 0.0
IloRange Volume_14 : -infinity <= (120000.0*s_0,14 + 1472000.0*s_1,14 + 1000.0*s_2,14 + 1000.0*s_3,14 + 1000.0*s_4,14 + 1000.0*s_5,14 + 1000.0*s_6,14 + 2800000.0*s_7,14 + 3360000.0*s_8,14 + 1260000.0*s_9,14 + 4500000.0*s_10,14 + 4000000.0*s_11,14 + 4312000.0*s_12,14 - 1.1340839946075162E7*n_14) <= 0.0
IloRange Volume_15 : -infinity <= (120000.0*s_0,15 + 1472000.0*s_1,15 + 1000.0*s_2,15 + 1000.0*s_3,15 + 1000.0*s_4,15 + 1000.0*s_5,15 + 1000.0*s_6,15 + 2800000.0*s_7,15 + 3360000.0*s_8,15 + 1260000.0*s_9,15 + 4500000.0*s_10,15 + 4000000.0*s_11,15 + 4312000.0*s_12,15 - 1.1340839946075162E7*n_15) <= 0.0
IloRange Volume_16 : -infinity <= (120000.0*s_0,16 + 1472000.0*s_1,16 + 1000.0*s_2,16 + 1000.0*s_3,16 + 1000.0*s_4,16 + 1000.0*s_5,16 + 1000.0*s_6,16 + 2800000.0*s_7,16 + 3360000.0*s_8,16 + 1260000.0*s_9,16 + 4500000.0*s_10,16 + 4000000.0*s_11,16 + 4312000.0*s_12,16 - 1.1340839946075162E7*n_16) <= 0.0
IloRange Volume_17 : -infinity <= (120000.0*s_0,17 + 1472000.0*s_1,17 + 1000.0*s_2,17 + 1000.0*s_3,17 + 1000.0*s_4,17 + 1000.0*s_5,17 + 1000.0*s_6,17 + 2800000.0*s_7,17 + 3360000.0*s_8,17 + 1260000.0*s_9,17 + 4500000.0*s_10,17 + 4000000.0*s_11,17 + 4312000.0*s_12,17 - 1.1340839946075162E7*n_17) <= 0.0
IloRange Volume_18 : -infinity <= (120000.0*s_0,18 + 1472000.0*s_1,18 + 1000.0*s_2,18 + 1000.0*s_3,18 + 1000.0*s_4,18 + 1000.0*s_5,18 + 1000.0*s_6,18 + 2800000.0*s_7,18 + 3360000.0*s_8,18 + 1260000.0*s_9,18 + 4500000.0*s_10,18 + 4000000.0*s_11,18 + 4312000.0*s_12,18 - 1.1340839946075162E7*n_18) <= 0.0
IloRange Volume_19 : -infinity <= (120000.0*s_0,19 + 1472000.0*s_1,19 + 1000.0*s_2,19 + 1000.0*s_3,19 + 1000.0*s_4,19 + 1000.0*s_5,19 + 1000.0*s_6,19 + 2800000.0*s_7,19 + 3360000.0*s_8,19 + 1260000.0*s_9,19 + 4500000.0*s_10,19 + 4000000.0*s_11,19 + 4312000.0*s_12,19 - 1.1340839946075162E7*n_19) <= 0.0
IloRange Volume_20 : -infinity <= (120000.0*s_0,20 + 1472000.0*s_1,20 + 1000.0*s_2,20 + 1000.0*s_3,20 + 1000.0*s_4,20 + 1000.0*s_5,20 + 1000.0*s_6,20 + 2800000.0*s_7,20 + 3360000.0*s_8,20 + 1260000.0*s_9,20 + 4500000.0*s_10,20 + 4000000.0*s_11,20 + 4312000.0*s_12,20 - 1.1340839946075162E7*n_20) <= 0.0
IloRange Volume_21 : -infinity <= (120000.0*s_0,21 + 1472000.0*s_1,21 + 1000.0*s_2,21 + 1000.0*s_3,21 + 1000.0*s_4,21 + 1000.0*s_5,21 + 1000.0*s_6,21 + 2800000.0*s_7,21 + 3360000.0*s_8,21 + 1260000.0*s_9,21 + 4500000.0*s_10,21 + 4000000.0*s_11,21 + 4312000.0*s_12,21 - 1.1340839946075162E7*n_21) <= 0.0
IloRange Volume_22 : -infinity <= (120000.0*s_0,22 + 1472000.0*s_1,22 + 1000.0*s_2,22 + 1000.0*s_3,22 + 1000.0*s_4,22 + 1000.0*s_5,22 + 1000.0*s_6,22 + 2800000.0*s_7,22 + 3360000.0*s_8,22 + 1260000.0*s_9,22 + 4500000.0*s_10,22 + 4000000.0*s_11,22 + 4312000.0*s_12,22 - 1.1340839946075162E7*n_22) <= 0.0
IloRange Volume_23 : -infinity <= (120000.0*s_0,23 + 1472000.0*s_1,23 + 1000.0*s_2,23 + 1000.0*s_3,23 + 1000.0*s_4,23 + 1000.0*s_5,23 + 1000.0*s_6,23 + 2800000.0*s_7,23 + 3360000.0*s_8,23 + 1260000.0*s_9,23 + 4500000.0*s_10,23 + 4000000.0*s_11,23 + 4312000.0*s_12,23 - 1.1340839946075162E7*n_23) <= 0.0
IloRange Volume_24 : -infinity <= (120000.0*s_0,24 + 1472000.0*s_1,24 + 1000.0*s_2,24 + 1000.0*s_3,24 + 1000.0*s_4,24 + 1000.0*s_5,24 + 1000.0*s_6,24 + 2800000.0*s_7,24 + 3360000.0*s_8,24 + 1260000.0*s_9,24 + 4500000.0*s_10,24 + 4000000.0*s_11,24 + 4312000.0*s_12,24 - 1.1340839946075162E7*n_24) <= 0.0
IloRange Volume_25 : -infinity <= (120000.0*s_0,25 + 1472000.0*s_1,25 + 1000.0*s_2,25 + 1000.0*s_3,25 + 1000.0*s_4,25 + 1000.0*s_5,25 + 1000.0*s_6,25 + 2800000.0*s_7,25 + 3360000.0*s_8,25 + 1260000.0*s_9,25 + 4500000.0*s_10,25 + 4000000.0*s_11,25 + 4312000.0*s_12,25 - 1.1340839946075162E7*n_25) <= 0.0
IloRange Volume_26 : -infinity <= (120000.0*s_0,26 + 1472000.0*s_1,26 + 1000.0*s_2,26 + 1000.0*s_3,26 + 1000.0*s_4,26 + 1000.0*s_5,26 + 1000.0*s_6,26 + 2800000.0*s_7,26 + 3360000.0*s_8,26 + 1260000.0*s_9,26 + 4500000.0*s_10,26 + 4000000.0*s_11,26 + 4312000.0*s_12,26 - 1.9635004901018865E7*n_26) <= 0.0
IloRange Volume_27 : -infinity <= (120000.0*s_0,27 + 1472000.0*s_1,27 + 1000.0*s_2,27 + 1000.0*s_3,27 + 1000.0*s_4,27 + 1000.0*s_5,27 + 1000.0*s_6,27 + 2800000.0*s_7,27 + 3360000.0*s_8,27 + 1260000.0*s_9,27 + 4500000.0*s_10,27 + 4000000.0*s_11,27 + 4312000.0*s_12,27 - 1.9635004901018865E7*n_27) <= 0.0
IloRange Volume_28 : -infinity <= (120000.0*s_0,28 + 1472000.0*s_1,28 + 1000.0*s_2,28 + 1000.0*s_3,28 + 1000.0*s_4,28 + 1000.0*s_5,28 + 1000.0*s_6,28 + 2800000.0*s_7,28 + 3360000.0*s_8,28 + 1260000.0*s_9,28 + 4500000.0*s_10,28 + 4000000.0*s_11,28 + 4312000.0*s_12,28 - 1.9635004901018865E7*n_28) <= 0.0
IloRange Volume_29 : -infinity <= (120000.0*s_0,29 + 1472000.0*s_1,29 + 1000.0*s_2,29 + 1000.0*s_3,29 + 1000.0*s_4,29 + 1000.0*s_5,29 + 1000.0*s_6,29 + 2800000.0*s_7,29 + 3360000.0*s_8,29 + 1260000.0*s_9,29 + 4500000.0*s_10,29 + 4000000.0*s_11,29 + 4312000.0*s_12,29 - 1.9635004901018865E7*n_29) <= 0.0
IloRange Volume_30 : -infinity <= (120000.0*s_0,30 + 1472000.0*s_1,30 + 1000.0*s_2,30 + 1000.0*s_3,30 + 1000.0*s_4,30 + 1000.0*s_5,30 + 1000.0*s_6,30 + 2800000.0*s_7,30 + 3360000.0*s_8,30 + 1260000.0*s_9,30 + 4500000.0*s_10,30 + 4000000.0*s_11,30 + 4312000.0*s_12,30 - 1.9635004901018865E7*n_30) <= 0.0
IloRange Volume_31 : -infinity <= (120000.0*s_0,31 + 1472000.0*s_1,31 + 1000.0*s_2,31 + 1000.0*s_3,31 + 1000.0*s_4,31 + 1000.0*s_5,31 + 1000.0*s_6,31 + 2800000.0*s_7,31 + 3360000.0*s_8,31 + 1260000.0*s_9,31 + 4500000.0*s_10,31 + 4000000.0*s_11,31 + 4312000.0*s_12,31 - 1.9635004901018865E7*n_31) <= 0.0
IloRange Volume_32 : -infinity <= (120000.0*s_0,32 + 1472000.0*s_1,32 + 1000.0*s_2,32 + 1000.0*s_3,32 + 1000.0*s_4,32 + 1000.0*s_5,32 + 1000.0*s_6,32 + 2800000.0*s_7,32 + 3360000.0*s_8,32 + 1260000.0*s_9,32 + 4500000.0*s_10,32 + 4000000.0*s_11,32 + 4312000.0*s_12,32 - 1.9635004901018865E7*n_32) <= 0.0
IloRange Volume_33 : -infinity <= (120000.0*s_0,33 + 1472000.0*s_1,33 + 1000.0*s_2,33 + 1000.0*s_3,33 + 1000.0*s_4,33 + 1000.0*s_5,33 + 1000.0*s_6,33 + 2800000.0*s_7,33 + 3360000.0*s_8,33 + 1260000.0*s_9,33 + 4500000.0*s_10,33 + 4000000.0*s_11,33 + 4312000.0*s_12,33 - 1.9635004901018865E7*n_33) <= 0.0
IloRange Volume_34 : -infinity <= (120000.0*s_0,34 + 1472000.0*s_1,34 + 1000.0*s_2,34 + 1000.0*s_3,34 + 1000.0*s_4,34 + 1000.0*s_5,34 + 1000.0*s_6,34 + 2800000.0*s_7,34 + 3360000.0*s_8,34 + 1260000.0*s_9,34 + 4500000.0*s_10,34 + 4000000.0*s_11,34 + 4312000.0*s_12,34 - 1.9635004901018865E7*n_34) <= 0.0
IloRange Volume_35 : -infinity <= (120000.0*s_0,35 + 1472000.0*s_1,35 + 1000.0*s_2,35 + 1000.0*s_3,35 + 1000.0*s_4,35 + 1000.0*s_5,35 + 1000.0*s_6,35 + 2800000.0*s_7,35 + 3360000.0*s_8,35 + 1260000.0*s_9,35 + 4500000.0*s_10,35 + 4000000.0*s_11,35 + 4312000.0*s_12,35 - 1.9635004901018865E7*n_35) <= 0.0
IloRange Volume_36 : -infinity <= (120000.0*s_0,36 + 1472000.0*s_1,36 + 1000.0*s_2,36 + 1000.0*s_3,36 + 1000.0*s_4,36 + 1000.0*s_5,36 + 1000.0*s_6,36 + 2800000.0*s_7,36 + 3360000.0*s_8,36 + 1260000.0*s_9,36 + 4500000.0*s_10,36 + 4000000.0*s_11,36 + 4312000.0*s_12,36 - 1.9635004901018865E7*n_36) <= 0.0
IloRange Volume_37 : -infinity <= (120000.0*s_0,37 + 1472000.0*s_1,37 + 1000.0*s_2,37 + 1000.0*s_3,37 + 1000.0*s_4,37 + 1000.0*s_5,37 + 1000.0*s_6,37 + 2800000.0*s_7,37 + 3360000.0*s_8,37 + 1260000.0*s_9,37 + 4500000.0*s_10,37 + 4000000.0*s_11,37 + 4312000.0*s_12,37 - 1.9635004901018865E7*n_37) <= 0.0
IloRange Volume_38 : -infinity <= (120000.0*s_0,38 + 1472000.0*s_1,38 + 1000.0*s_2,38 + 1000.0*s_3,38 + 1000.0*s_4,38 + 1000.0*s_5,38 + 1000.0*s_6,38 + 2800000.0*s_7,38 + 3360000.0*s_8,38 + 1260000.0*s_9,38 + 4500000.0*s_10,38 + 4000000.0*s_11,38 + 4312000.0*s_12,38 - 1.9635004901018865E7*n_38) <= 0.0
IloRange boxCut2,0 : 0.0 <= (1.0*s_2,0 - 1.0*s_3,0) <= infinity
IloRange boxCut2,1 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 - 1.0*s_3,1) <= infinity
IloRange boxCut2,2 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 - 1.0*s_3,2) <= infinity
IloRange boxCut2,3 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 - 1.0*s_3,3) <= infinity
IloRange boxCut2,4 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 - 1.0*s_3,4) <= infinity
IloRange boxCut2,5 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 - 1.0*s_3,5) <= infinity
IloRange boxCut2,6 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 - 1.0*s_3,6) <= infinity
IloRange boxCut2,7 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 - 1.0*s_3,7) <= infinity
IloRange boxCut2,8 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 - 1.0*s_3,8) <= infinity
IloRange boxCut2,9 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 - 1.0*s_3,9) <= infinity
IloRange boxCut2,10 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 - 1.0*s_3,10) <= infinity
IloRange boxCut2,11 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 - 1.0*s_3,11) <= infinity
IloRange boxCut2,12 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 - 1.0*s_3,12) <= infinity
IloRange boxCut2,13 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 - 1.0*s_3,13) <= infinity
IloRange boxCut2,14 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 - 1.0*s_3,14) <= infinity
IloRange boxCut2,15 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 - 1.0*s_3,15) <= infinity
IloRange boxCut2,16 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 - 1.0*s_3,16) <= infinity
IloRange boxCut2,17 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 - 1.0*s_3,17) <= infinity
IloRange boxCut2,18 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 - 1.0*s_3,18) <= infinity
IloRange boxCut2,19 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 - 1.0*s_3,19) <= infinity
IloRange boxCut2,20 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 - 1.0*s_3,20) <= infinity
IloRange boxCut2,21 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 - 1.0*s_3,21) <= infinity
IloRange boxCut2,22 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 - 1.0*s_3,22) <= infinity
IloRange boxCut2,23 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 - 1.0*s_3,23) <= infinity
IloRange boxCut2,24 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 - 1.0*s_3,24) <= infinity
IloRange boxCut2,25 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 - 1.0*s_3,25) <= infinity
IloRange boxCut2,26 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 - 1.0*s_3,26) <= infinity
IloRange boxCut2,27 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 - 1.0*s_3,27) <= infinity
IloRange boxCut2,28 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 - 1.0*s_3,28) <= infinity
IloRange boxCut2,29 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 - 1.0*s_3,29) <= infinity
IloRange boxCut2,30 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 - 1.0*s_3,30) <= infinity
IloRange boxCut2,31 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 - 1.0*s_3,31) <= infinity
IloRange boxCut2,32 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 - 1.0*s_3,32) <= infinity
IloRange boxCut2,33 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 - 1.0*s_3,33) <= infinity
IloRange boxCut2,34 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 - 1.0*s_3,34) <= infinity
IloRange boxCut2,35 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 + 1.0*s_2,35 - 1.0*s_3,35) <= infinity
IloRange boxCut2,36 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 + 1.0*s_2,35 + 1.0*s_2,36 - 1.0*s_3,36) <= infinity
IloRange boxCut2,37 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 + 1.0*s_2,35 + 1.0*s_2,36 + 1.0*s_2,37 - 1.0*s_3,37) <= infinity
IloRange boxCut2,38 : 0.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10 + 1.0*s_2,11 + 1.0*s_2,12 + 1.0*s_2,13 + 1.0*s_2,14 + 1.0*s_2,15 + 1.0*s_2,16 + 1.0*s_2,17 + 1.0*s_2,18 + 1.0*s_2,19 + 1.0*s_2,20 + 1.0*s_2,21 + 1.0*s_2,22 + 1.0*s_2,23 + 1.0*s_2,24 + 1.0*s_2,25 + 1.0*s_2,26 + 1.0*s_2,27 + 1.0*s_2,28 + 1.0*s_2,29 + 1.0*s_2,30 + 1.0*s_2,31 + 1.0*s_2,32 + 1.0*s_2,33 + 1.0*s_2,34 + 1.0*s_2,35 + 1.0*s_2,36 + 1.0*s_2,37 + 1.0*s_2,38 - 1.0*s_3,38) <= infinity
IloRange boxCut3,0 : 0.0 <= (1.0*s_3,0 - 1.0*s_4,0) <= infinity
IloRange boxCut3,1 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 - 1.0*s_4,1) <= infinity
IloRange boxCut3,2 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 - 1.0*s_4,2) <= infinity
IloRange boxCut3,3 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 - 1.0*s_4,3) <= infinity
IloRange boxCut3,4 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 - 1.0*s_4,4) <= infinity
IloRange boxCut3,5 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 - 1.0*s_4,5) <= infinity
IloRange boxCut3,6 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 - 1.0*s_4,6) <= infinity
IloRange boxCut3,7 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 - 1.0*s_4,7) <= infinity
IloRange boxCut3,8 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 - 1.0*s_4,8) <= infinity
IloRange boxCut3,9 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 - 1.0*s_4,9) <= infinity
IloRange boxCut3,10 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 - 1.0*s_4,10) <= infinity
IloRange boxCut3,11 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 - 1.0*s_4,11) <= infinity
IloRange boxCut3,12 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 - 1.0*s_4,12) <= infinity
IloRange boxCut3,13 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 - 1.0*s_4,13) <= infinity
IloRange boxCut3,14 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 - 1.0*s_4,14) <= infinity
IloRange boxCut3,15 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 - 1.0*s_4,15) <= infinity
IloRange boxCut3,16 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 - 1.0*s_4,16) <= infinity
IloRange boxCut3,17 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 - 1.0*s_4,17) <= infinity
IloRange boxCut3,18 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 - 1.0*s_4,18) <= infinity
IloRange boxCut3,19 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 - 1.0*s_4,19) <= infinity
IloRange boxCut3,20 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 - 1.0*s_4,20) <= infinity
IloRange boxCut3,21 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 - 1.0*s_4,21) <= infinity
IloRange boxCut3,22 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 - 1.0*s_4,22) <= infinity
IloRange boxCut3,23 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 - 1.0*s_4,23) <= infinity
IloRange boxCut3,24 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 - 1.0*s_4,24) <= infinity
IloRange boxCut3,25 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 - 1.0*s_4,25) <= infinity
IloRange boxCut3,26 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 - 1.0*s_4,26) <= infinity
IloRange boxCut3,27 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 - 1.0*s_4,27) <= infinity
IloRange boxCut3,28 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 - 1.0*s_4,28) <= infinity
IloRange boxCut3,29 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 - 1.0*s_4,29) <= infinity
IloRange boxCut3,30 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 - 1.0*s_4,30) <= infinity
IloRange boxCut3,31 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 - 1.0*s_4,31) <= infinity
IloRange boxCut3,32 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 - 1.0*s_4,32) <= infinity
IloRange boxCut3,33 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 - 1.0*s_4,33) <= infinity
IloRange boxCut3,34 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 - 1.0*s_4,34) <= infinity
IloRange boxCut3,35 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 + 1.0*s_3,35 - 1.0*s_4,35) <= infinity
IloRange boxCut3,36 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 + 1.0*s_3,35 + 1.0*s_3,36 - 1.0*s_4,36) <= infinity
IloRange boxCut3,37 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 + 1.0*s_3,35 + 1.0*s_3,36 + 1.0*s_3,37 - 1.0*s_4,37) <= infinity
IloRange boxCut3,38 : 0.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10 + 1.0*s_3,11 + 1.0*s_3,12 + 1.0*s_3,13 + 1.0*s_3,14 + 1.0*s_3,15 + 1.0*s_3,16 + 1.0*s_3,17 + 1.0*s_3,18 + 1.0*s_3,19 + 1.0*s_3,20 + 1.0*s_3,21 + 1.0*s_3,22 + 1.0*s_3,23 + 1.0*s_3,24 + 1.0*s_3,25 + 1.0*s_3,26 + 1.0*s_3,27 + 1.0*s_3,28 + 1.0*s_3,29 + 1.0*s_3,30 + 1.0*s_3,31 + 1.0*s_3,32 + 1.0*s_3,33 + 1.0*s_3,34 + 1.0*s_3,35 + 1.0*s_3,36 + 1.0*s_3,37 + 1.0*s_3,38 - 1.0*s_4,38) <= infinity
IloRange boxCut4,0 : 0.0 <= (1.0*s_4,0 - 1.0*s_5,0) <= infinity
IloRange boxCut4,1 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 - 1.0*s_5,1) <= infinity
IloRange boxCut4,2 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 - 1.0*s_5,2) <= infinity
IloRange boxCut4,3 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 - 1.0*s_5,3) <= infinity
IloRange boxCut4,4 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 - 1.0*s_5,4) <= infinity
IloRange boxCut4,5 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 - 1.0*s_5,5) <= infinity
IloRange boxCut4,6 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 - 1.0*s_5,6) <= infinity
IloRange boxCut4,7 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 - 1.0*s_5,7) <= infinity
IloRange boxCut4,8 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 - 1.0*s_5,8) <= infinity
IloRange boxCut4,9 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 - 1.0*s_5,9) <= infinity
IloRange boxCut4,10 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 - 1.0*s_5,10) <= infinity
IloRange boxCut4,11 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 - 1.0*s_5,11) <= infinity
IloRange boxCut4,12 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 - 1.0*s_5,12) <= infinity
IloRange boxCut4,13 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 - 1.0*s_5,13) <= infinity
IloRange boxCut4,14 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 - 1.0*s_5,14) <= infinity
IloRange boxCut4,15 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 - 1.0*s_5,15) <= infinity
IloRange boxCut4,16 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 - 1.0*s_5,16) <= infinity
IloRange boxCut4,17 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 - 1.0*s_5,17) <= infinity
IloRange boxCut4,18 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 - 1.0*s_5,18) <= infinity
IloRange boxCut4,19 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 - 1.0*s_5,19) <= infinity
IloRange boxCut4,20 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 - 1.0*s_5,20) <= infinity
IloRange boxCut4,21 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 - 1.0*s_5,21) <= infinity
IloRange boxCut4,22 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 - 1.0*s_5,22) <= infinity
IloRange boxCut4,23 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 - 1.0*s_5,23) <= infinity
IloRange boxCut4,24 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 - 1.0*s_5,24) <= infinity
IloRange boxCut4,25 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 - 1.0*s_5,25) <= infinity
IloRange boxCut4,26 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 - 1.0*s_5,26) <= infinity
IloRange boxCut4,27 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 - 1.0*s_5,27) <= infinity
IloRange boxCut4,28 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 - 1.0*s_5,28) <= infinity
IloRange boxCut4,29 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 - 1.0*s_5,29) <= infinity
IloRange boxCut4,30 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 - 1.0*s_5,30) <= infinity
IloRange boxCut4,31 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 - 1.0*s_5,31) <= infinity
IloRange boxCut4,32 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 - 1.0*s_5,32) <= infinity
IloRange boxCut4,33 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 - 1.0*s_5,33) <= infinity
IloRange boxCut4,34 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 - 1.0*s_5,34) <= infinity
IloRange boxCut4,35 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 + 1.0*s_4,35 - 1.0*s_5,35) <= infinity
IloRange boxCut4,36 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 + 1.0*s_4,35 + 1.0*s_4,36 - 1.0*s_5,36) <= infinity
IloRange boxCut4,37 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 + 1.0*s_4,35 + 1.0*s_4,36 + 1.0*s_4,37 - 1.0*s_5,37) <= infinity
IloRange boxCut4,38 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 + 1.0*s_4,11 + 1.0*s_4,12 + 1.0*s_4,13 + 1.0*s_4,14 + 1.0*s_4,15 + 1.0*s_4,16 + 1.0*s_4,17 + 1.0*s_4,18 + 1.0*s_4,19 + 1.0*s_4,20 + 1.0*s_4,21 + 1.0*s_4,22 + 1.0*s_4,23 + 1.0*s_4,24 + 1.0*s_4,25 + 1.0*s_4,26 + 1.0*s_4,27 + 1.0*s_4,28 + 1.0*s_4,29 + 1.0*s_4,30 + 1.0*s_4,31 + 1.0*s_4,32 + 1.0*s_4,33 + 1.0*s_4,34 + 1.0*s_4,35 + 1.0*s_4,36 + 1.0*s_4,37 + 1.0*s_4,38 - 1.0*s_5,38) <= infinity
IloRange boxCut5,0 : 0.0 <= (1.0*s_5,0 - 1.0*s_6,0) <= infinity
IloRange boxCut5,1 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 - 1.0*s_6,1) <= infinity
IloRange boxCut5,2 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 - 1.0*s_6,2) <= infinity
IloRange boxCut5,3 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 - 1.0*s_6,3) <= infinity
IloRange boxCut5,4 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 - 1.0*s_6,4) <= infinity
IloRange boxCut5,5 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 - 1.0*s_6,5) <= infinity
IloRange boxCut5,6 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 - 1.0*s_6,6) <= infinity
IloRange boxCut5,7 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 - 1.0*s_6,7) <= infinity
IloRange boxCut5,8 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 - 1.0*s_6,8) <= infinity
IloRange boxCut5,9 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 - 1.0*s_6,9) <= infinity
IloRange boxCut5,10 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 - 1.0*s_6,10) <= infinity
IloRange boxCut5,11 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 - 1.0*s_6,11) <= infinity
IloRange boxCut5,12 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 - 1.0*s_6,12) <= infinity
IloRange boxCut5,13 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 - 1.0*s_6,13) <= infinity
IloRange boxCut5,14 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 - 1.0*s_6,14) <= infinity
IloRange boxCut5,15 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 - 1.0*s_6,15) <= infinity
IloRange boxCut5,16 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 - 1.0*s_6,16) <= infinity
IloRange boxCut5,17 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 - 1.0*s_6,17) <= infinity
IloRange boxCut5,18 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 - 1.0*s_6,18) <= infinity
IloRange boxCut5,19 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 - 1.0*s_6,19) <= infinity
IloRange boxCut5,20 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 - 1.0*s_6,20) <= infinity
IloRange boxCut5,21 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 - 1.0*s_6,21) <= infinity
IloRange boxCut5,22 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 - 1.0*s_6,22) <= infinity
IloRange boxCut5,23 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 - 1.0*s_6,23) <= infinity
IloRange boxCut5,24 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 - 1.0*s_6,24) <= infinity
IloRange boxCut5,25 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 - 1.0*s_6,25) <= infinity
IloRange boxCut5,26 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 - 1.0*s_6,26) <= infinity
IloRange boxCut5,27 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 - 1.0*s_6,27) <= infinity
IloRange boxCut5,28 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 - 1.0*s_6,28) <= infinity
IloRange boxCut5,29 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 - 1.0*s_6,29) <= infinity
IloRange boxCut5,30 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 - 1.0*s_6,30) <= infinity
IloRange boxCut5,31 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 - 1.0*s_6,31) <= infinity
IloRange boxCut5,32 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 - 1.0*s_6,32) <= infinity
IloRange boxCut5,33 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 - 1.0*s_6,33) <= infinity
IloRange boxCut5,34 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 - 1.0*s_6,34) <= infinity
IloRange boxCut5,35 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 + 1.0*s_5,35 - 1.0*s_6,35) <= infinity
IloRange boxCut5,36 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 + 1.0*s_5,35 + 1.0*s_5,36 - 1.0*s_6,36) <= infinity
IloRange boxCut5,37 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 + 1.0*s_5,35 + 1.0*s_5,36 + 1.0*s_5,37 - 1.0*s_6,37) <= infinity
IloRange boxCut5,38 : 0.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10 + 1.0*s_5,11 + 1.0*s_5,12 + 1.0*s_5,13 + 1.0*s_5,14 + 1.0*s_5,15 + 1.0*s_5,16 + 1.0*s_5,17 + 1.0*s_5,18 + 1.0*s_5,19 + 1.0*s_5,20 + 1.0*s_5,21 + 1.0*s_5,22 + 1.0*s_5,23 + 1.0*s_5,24 + 1.0*s_5,25 + 1.0*s_5,26 + 1.0*s_5,27 + 1.0*s_5,28 + 1.0*s_5,29 + 1.0*s_5,30 + 1.0*s_5,31 + 1.0*s_5,32 + 1.0*s_5,33 + 1.0*s_5,34 + 1.0*s_5,35 + 1.0*s_5,36 + 1.0*s_5,37 + 1.0*s_5,38 - 1.0*s_6,38) <= infinity
IloRange bagCut_0,1 : 0.0 <= (1.0*n_0 - 1.0*n_1) <= infinity
IloRange bagCut_1,2 : 0.0 <= (1.0*n_1 - 1.0*n_2) <= infinity
IloRange bagCut_2,3 : 0.0 <= (1.0*n_2 - 1.0*n_3) <= infinity
IloRange bagCut_3,4 : 0.0 <= (1.0*n_3 - 1.0*n_4) <= infinity
IloRange bagCut_4,5 : 0.0 <= (1.0*n_4 - 1.0*n_5) <= infinity
IloRange bagCut_5,6 : 0.0 <= (1.0*n_5 - 1.0*n_6) <= infinity
IloRange bagCut_6,7 : 0.0 <= (1.0*n_6 - 1.0*n_7) <= infinity
IloRange bagCut_7,8 : 0.0 <= (1.0*n_7 - 1.0*n_8) <= infinity
IloRange bagCut_8,9 : 0.0 <= (1.0*n_8 - 1.0*n_9) <= infinity
IloRange bagCut_9,10 : 0.0 <= (1.0*n_9 - 1.0*n_10) <= infinity
IloRange bagCut_10,11 : 0.0 <= (1.0*n_10 - 1.0*n_11) <= infinity
IloRange bagCut_11,12 : 0.0 <= (1.0*n_11 - 1.0*n_12) <= infinity
IloRange bagCut_13,14 : 0.0 <= (1.0*n_13 - 1.0*n_14) <= infinity
IloRange bagCut_14,15 : 0.0 <= (1.0*n_14 - 1.0*n_15) <= infinity
IloRange bagCut_15,16 : 0.0 <= (1.0*n_15 - 1.0*n_16) <= infinity
IloRange bagCut_16,17 : 0.0 <= (1.0*n_16 - 1.0*n_17) <= infinity
IloRange bagCut_17,18 : 0.0 <= (1.0*n_17 - 1.0*n_18) <= infinity
IloRange bagCut_18,19 : 0.0 <= (1.0*n_18 - 1.0*n_19) <= infinity
IloRange bagCut_19,20 : 0.0 <= (1.0*n_19 - 1.0*n_20) <= infinity
IloRange bagCut_20,21 : 0.0 <= (1.0*n_20 - 1.0*n_21) <= infinity
IloRange bagCut_21,22 : 0.0 <= (1.0*n_21 - 1.0*n_22) <= infinity
IloRange bagCut_22,23 : 0.0 <= (1.0*n_22 - 1.0*n_23) <= infinity
IloRange bagCut_23,24 : 0.0 <= (1.0*n_23 - 1.0*n_24) <= infinity
IloRange bagCut_24,25 : 0.0 <= (1.0*n_24 - 1.0*n_25) <= infinity
IloRange bagCut_26,27 : 0.0 <= (1.0*n_26 - 1.0*n_27) <= infinity
IloRange bagCut_27,28 : 0.0 <= (1.0*n_27 - 1.0*n_28) <= infinity
IloRange bagCut_28,29 : 0.0 <= (1.0*n_28 - 1.0*n_29) <= infinity
IloRange bagCut_29,30 : 0.0 <= (1.0*n_29 - 1.0*n_30) <= infinity
IloRange bagCut_30,31 : 0.0 <= (1.0*n_30 - 1.0*n_31) <= infinity
IloRange bagCut_31,32 : 0.0 <= (1.0*n_31 - 1.0*n_32) <= infinity
IloRange bagCut_32,33 : 0.0 <= (1.0*n_32 - 1.0*n_33) <= infinity
IloRange bagCut_33,34 : 0.0 <= (1.0*n_33 - 1.0*n_34) <= infinity
IloRange bagCut_34,35 : 0.0 <= (1.0*n_34 - 1.0*n_35) <= infinity
IloRange bagCut_35,36 : 0.0 <= (1.0*n_35 - 1.0*n_36) <= infinity
IloRange bagCut_36,37 : 0.0 <= (1.0*n_36 - 1.0*n_37) <= infinity
IloRange bagCut_37,38 : 0.0 <= (1.0*n_37 - 1.0*n_38) <= infinity

}
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
CPXPARAM_Threads                                 1
!!Thread UP
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 1 time.
MIP Presolve eliminated 4 rows and 0 columns.
MIP Presolve modified 2041 coefficients.
Reduced MIP has 240 rows, 546 columns, and 4241 nonzeros.
Reduced MIP has 546 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (4.31 ticks)
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [7]  放进袋子  4  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7],4
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 9 columns.
MIP Presolve modified 10 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [12]  放进袋子  6  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[12],6
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 14 rows and 15 columns.
MIP Presolve modified 4 coefficients.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.01 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.02 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.02 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2]  放进袋子  11  袋子种类为0
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2],11
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.02 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3]  放进袋子  14  袋子种类为1
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[3],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.02 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [8, 10]  放进袋子  22  袋子种类为1
patten : [0, 0, 0, 0, 1, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[8, 10],22
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 16 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 26 rows, 28 columns, and 111 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.15 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.26 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.26 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1]  放进袋子  28  袋子种类为2
patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1],28
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 21 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0]  放进袋子  29  袋子种类为2
patten : [1, 0, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0],29
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.02 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [4]  放进袋子  31  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[4],31
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.02 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [5, 9]  放进袋子  33  袋子种类为2
patten : [0, 0, 1, 0, 0, 1, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[5, 9],33
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 3 rows and 0 columns.
MIP Presolve modified 47 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 25 rows, 31 columns, and 90 nonzeros.
Reduced MIP has 24 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.12 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.22 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.22 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.22 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [6]  放进袋子  34  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
将物品  [11]  放进袋子  38  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[11],38
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 12 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
Found incumbent of value 27.300000 after 0.08 sec. (7.45 ticks)
Probing time = 0.00 sec. (2.34 ticks)
Tried aggregator 1 time.
Reduced MIP has 240 rows, 546 columns, and 4241 nonzeros.
Reduced MIP has 546 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.51 ticks)
Probing time = 0.00 sec. (2.31 ticks)
Clique table members: 2437.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time = 0.01 sec. (3.37 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                           27.3000        0.0000           100.00%
      0     0        1.1117    43       27.3000        1.1117      180   95.93%
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
print n
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [7, 9]  放进袋子  26  袋子种类为2
patten : [0, 0, 0, 1, 0, 1, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[7, 9],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 5 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 28 rows, 31 columns, and 123 nonzeros.
Reduced MIP has 24 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.12 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.23 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.24 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.24 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2]  放进袋子  27  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
将物品  [10]  放进袋子  28  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[10],28
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 10 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [12]  放进袋子  29  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[12],29
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 9 columns.
MIP Presolve modified 6 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3]  放进袋子  32  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
将物品  [0]  放进袋子  34  袋子种类为2
patten : [1, 0, 0, 0, 0, 0, 0, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
将物品  [11]  放进袋子  36  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 2]
pattern good
needToSolve=false needToAddCut=false
将物品  [8]  放进袋子  37  袋子种类为2
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[8],37
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 14 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 4, 5, 6]  放进袋子  38  袋子种类为2
patten : [0, 1, 3, 0, 0, 0, 0, 0, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 4, 5, 6],38
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 9 columns.
MIP Presolve modified 171 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 72 rows, 76 columns, and 255 nonzeros.
Reduced MIP has 63 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.38 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.62 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.63 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.63 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
*     0+    0                           13.0000        1.1117            91.45%
      0     0        1.1117    43       13.0000      Cuts: 94      380   91.45%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 1, 1, 1, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
236
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 11.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
将物品  [12]  放进袋子  27  袋子种类为2
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 2]
pattern good
needToSolve=false needToAddCut=false
      0     0        1.1318    43       13.0000       Cuts: 2      538   91.29%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [12]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 10 columns.
MIP Presolve modified 4 coefficients.
Aggregator did 5 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.02 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.02 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.02 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 1, 1, 1, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
236
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 11.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [7]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 0, 1, 1, 1, 1, 1, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 12, 11, 8, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
68
——————————————————————————————————————————第4层——————————————————————————————————————
308
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 11.0*n_26) <= 0.0无法将物品 [10, 12, 11, 8, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.1478    43       13.0000      Cuts: 27      601   91.17%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [12]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 1, 1, 1, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
236
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 11.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.1510    43       13.0000      Cuts: 43      664   91.15%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [12]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
pattern good
needToSolve=false needToAddCut=false
将物品  [9]  放进袋子  14  袋子种类为1
patten : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[9],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 21 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 1, 0, 1, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 1, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
398
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 1, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 10]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 11 rows and 11 columns.
MIP Presolve modified 39 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 10 rows, 13 columns, and 36 nonzeros.
Reduced MIP has 12 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.17 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.25 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.25 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_10,0 - 1.0*n_0) <= 0.0无法将物品 [0, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 5, 1, 1, 1, 0, 1, 1, 2]
pattern good
排序前[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12]
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[12, 11, 8, 7, 1, 9, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
27
——————————————————————————————————————————第4层——————————————————————————————————————
48
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [12, 11, 8, 7, 1, 9, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.1696    43       13.0000      Cuts: 47      921   91.00%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 12]  放进袋子  13  袋子种类为1
patten : [1, 0, 1, 0, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 5 rows and 7 columns.
MIP Presolve modified 123 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 43 rows, 45 columns, and 164 nonzeros.
Reduced MIP has 35 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.26 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.41 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.42 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [3, 4, 5, 6]  放进袋子  14  袋子种类为1
patten : [0, 0, 4, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[3, 4, 5, 6],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 51 rows and 43 columns.
MIP Presolve modified 220 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 24 rows, 36 columns, and 72 nonzeros.
Reduced MIP has 36 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.27 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.36 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.37 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.37 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 7, 8, 9, 10, 11]  放进袋子  26  袋子种类为2
patten : [0, 1, 0, 1, 1, 1, 1, 1, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 7, 8, 9, 10, 11],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 56 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 162 rows, 163 columns, and 843 nonzeros.
Reduced MIP has 144 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.86 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 32 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 70 coefficients.
Reduced MIP has 162 rows, 159 columns, and 828 nonzeros.
Reduced MIP has 140 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.80 ticks)
Probing fixed 0 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 12 bounds.
Clique table members: 124.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.29 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    30                      0.0000       30         
      0     0        0.0000    30                     Cuts: 3       33         
      0     0        0.0000    30                    Cuts: 26       60         
      0     0        0.0000    30                     Cuts: 9       70         
      0     0        0.0000    30                    Cuts: 23       97         
      0     2        0.0000    16                      0.0000       98         
Elapsed time = 0.09 sec. (29.19 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  3
Cover cuts applied:  42
Implied bound cuts applied:  31
Flow cuts applied:  17
Mixed integer rounding cuts applied:  25
Zero-half cuts applied:  1
Gomory fractional cuts applied:  15

Root node processing (before b&c):
  Real time             =    0.09 sec. (29.11 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.41 sec. (139.91 ticks)
  Sync time (average)   =    0.16 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.50 sec. (169.02 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_11,26 - 5.0*n_26) <= 0.0无法将物品 [1, 7, 8, 9, 10, 11]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [0, 2, 9]  放进袋子  13  袋子种类为1
patten : [1, 0, 1, 0, 0, 1, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 9],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 70 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 51 rows, 55 columns, and 213 nonzeros.
Reduced MIP has 45 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.47 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.47 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.47 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6]  放进袋子  14  袋子种类为1
patten : [0, 1, 4, 0, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 3, 4, 5, 6],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 20 rows and 21 columns.
MIP Presolve modified 330 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 93 rows, 95 columns, and 286 nonzeros.
Reduced MIP has 79 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.78 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.08 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.08 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.08 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7, 8, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 0, 0, 1, 1, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[7, 8, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 111 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 22 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 5 columns.
MIP Presolve modified 73 coefficients.
Reduced MIP has 113 rows, 110 columns, and 550 nonzeros.
Reduced MIP has 94 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Probing fixed 2 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 194.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.34 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       41         
      0     0        0.0000    23                     Cuts: 2       45         
      0     0        0.0000    23                    Cuts: 24       61         
      0     0        0.0000    23                    Cuts: 15       71         
      0     2        0.0000     8                      0.0000       71         
Elapsed time = 0.13 sec. (13.13 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  2
Cover cuts applied:  35
Implied bound cuts applied:  59
Flow cuts applied:  9
Mixed integer rounding cuts applied:  8
Gomory fractional cuts applied:  7

Root node processing (before b&c):
  Real time             =    0.08 sec. (13.07 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.14 sec. (20.28 ticks)
  Sync time (average)   =    0.09 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.22 sec. (33.35 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [7, 8, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.2025    43       13.0000      Cuts: 16     1026   90.75%
      0     0        1.2179    43       13.0000      Cuts: 37     1108   90.63%
      0     0        1.2180    43       13.0000      Cuts: 26     1243   90.63%
      0     0        1.2190    43       13.0000      Cuts: 26     1315   90.62%
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [2, 7]  放进袋子  2  袋子种类为0
patten : [0, 0, 1, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 7],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 5 rows and 3 columns.
MIP Presolve modified 61 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 20 rows, 25 columns, and 70 nonzeros.
Reduced MIP has 20 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.16 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.25 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.25 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.25 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 4, 0, 1, 1, 1, 1, 1, 2]
pattern good
排序前[0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 12, 11, 8, 1, 9, 0, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
68
——————————————————————————————————————————第4层——————————————————————————————————————
308
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [10, 12, 11, 8, 1, 9, 0, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.2199    43       13.0000      Cuts: 32     1421   90.62%
      0     0        1.2247    43       13.0000      Cuts: 27     1469   90.58%
      0     0        1.2277    43       13.0000      Cuts: 28     1553   90.56%
print s[i]
[0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [8]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[8],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 9 columns.
MIP Presolve modified 5 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 0, 1, 1, 1, 1, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 12, 11, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
44
——————————————————————————————————————————第4层——————————————————————————————————————
144
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 11.0*n_26) <= 0.0无法将物品 [10, 12, 11, 7, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [8]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 7 rows and 8 columns.
MIP Presolve modified 12 coefficients.
Aggregator did 7 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 8 rows and 6 columns.
MIP Presolve modified 10 coefficients.
Reduced MIP has 6 rows, 9 columns, and 18 nonzeros.
Reduced MIP has 9 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.03 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.05 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 0, 0, 1, 1, 1, 1, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 12, 11, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
84
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [10, 12, 11, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
      0     0        1.2327    43       13.0000      Cuts: 36     1741   90.52%
      0     0        1.2373    43       13.0000      Cuts: 28     1862   90.48%
      0     0        1.2403    43       13.0000      Cuts: 26     1923   90.46%
      0     0        1.2441    43       13.0000      Cuts: 10     2014   90.43%
      0     0        1.2476    43       13.0000      Cuts: 17     2048   90.40%
      0     0        1.2498    43       13.0000      Cuts: 28     2103   90.39%
print s[i]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [8]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 4, 1, 0, 1, 1, 1, 1, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 12, 11, 7, 1, 9, 0, 2, 3, 4, 5]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
22
——————————————————————————————————————————第3层——————————————————————————————————————
44
——————————————————————————————————————————第4层——————————————————————————————————————
144
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 - 10.0*n_26) <= 0.0无法将物品 [10, 12, 11, 7, 1, 9, 0, 2, 3, 4, 5]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
将物品  [6]  放进袋子  27  袋子种类为2
patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 2]
pattern good
needToSolve=false needToAddCut=false
      0     0        1.2506    43       13.0000      Cuts: 19     2156   90.38%
      0     0        1.2514    43       13.0000      Cuts: 26     2205   90.37%
      0     0        1.2517    43       13.0000      Cuts: 21     2408   90.37%
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0]
将物品  [7, 9]  放进袋子  11  袋子种类为0
patten : [0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7, 9],11
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 4 rows and 8 columns.
MIP Presolve modified 26 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 18 rows, 17 columns, and 72 nonzeros.
Reduced MIP has 13 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.24 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.24 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.24 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2, 3, 4, 5, 6, 8]  放进袋子  12  袋子种类为0
patten : [0, 0, 5, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 5, 6, 8],12
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 35 rows and 33 columns.
MIP Presolve modified 528 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 125 rows, 128 columns, and 408 nonzeros.
Reduced MIP has 110 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.76 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.17 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.17 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 0, 0, 0, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 143 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 65 coefficients.
Reduced MIP has 113 rows, 112 columns, and 554 nonzeros.
Reduced MIP has 96 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 141.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.24 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       43         
      0     0        0.0000    23                     Cuts: 4       46         
      0     0        0.0000    23                    Cuts: 17       55         
      0     0        0.0000    23                     Cuts: 4       57         
      0     0        0.0000    23                     Cuts: 7       69         
      0     2        0.0000     6                      0.0000       69         
Elapsed time = 0.06 sec. (11.94 ticks, tree = 0.02 MB, solutions = 0)

Cover cuts applied:  28
Implied bound cuts applied:  31
Flow cuts applied:  7
Mixed integer rounding cuts applied:  8
Gomory fractional cuts applied:  6

Root node processing (before b&c):
  Real time             =    0.06 sec. (11.88 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.17 sec. (15.93 ticks)
  Sync time (average)   =    0.10 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.23 sec. (27.81 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_1,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [0, 1, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0]
将物品  [10]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[10],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 10 columns.
MIP Presolve modified 5 coefficients.
Aggregator did 5 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.03 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7, 9]  放进袋子  11  袋子种类为0
patten : [0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [2, 3, 4, 5, 6, 8]  放进袋子  12  袋子种类为0
patten : [0, 0, 5, 0, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 0, 0, 0, 0, 0, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 104 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 77 rows, 79 columns, and 371 nonzeros.
Reduced MIP has 66 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.72 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
*     0+    0                            6.2000        1.2517            79.81%
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0]
将物品  [11]  放进袋子  3  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[11],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 10 rows and 11 columns.
MIP Presolve modified 9 coefficients.
Aggregator did 4 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.03 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.03 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [2, 3, 4]  放进袋子  11  袋子种类为0
patten : [0, 0, 3, 0, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4],11
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 1 time.
MIP Presolve eliminated 35 rows and 30 columns.
MIP Presolve modified 121 coefficients.
Reduced MIP has 18 rows, 27 columns, and 54 nonzeros.
Reduced MIP has 27 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.12 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.19 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.19 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.19 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 5, 6, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 2, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 5, 6, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 3 rows and 4 columns.
MIP Presolve modified 616 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 331 rows, 319 columns, and 1626 nonzeros.
Reduced MIP has 291 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.58 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.47 ticks)
Cover probing fixed 0 vars, tightened 38 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 12 rows and 19 columns.
MIP Presolve modified 188 coefficients.
Reduced MIP has 319 rows, 300 columns, and 1585 nonzeros.
Reduced MIP has 272 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.48 ticks)
Probing fixed 0 vars, tightened 6 bounds.
Probing time = 0.02 sec. (0.38 ticks)
Cover probing fixed 0 vars, tightened 12 bounds.
Clique table members: 239.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (1.06 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    85                      0.0000      117         
      0     0        0.0000    85                    Cuts: 29      148         
      0     0        0.0000    85                   Cuts: 129      195         
      0     2        0.0000    17                      0.0000      195         
Elapsed time = 0.13 sec. (47.12 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  2
Cover cuts applied:  50
Implied bound cuts applied:  98
Flow cuts applied:  11
Mixed integer rounding cuts applied:  29
Lift and project cuts applied:  1
Gomory fractional cuts applied:  13

Root node processing (before b&c):
  Real time             =    0.09 sec. (46.97 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.48 sec. (178.44 ticks)
  Sync time (average)   =    0.15 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.58 sec. (225.41 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_1,26 + 1.0*s_5,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 8.0*n_26) <= 0.0无法将物品 [0, 1, 5, 6, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[-0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [11]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 9 columns.
MIP Presolve modified 6 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.04 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 7, 8, 9]  放进袋子  14  袋子种类为1
patten : [1, 0, 2, 1, 1, 1, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 7, 8, 9],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 3 rows and 4 columns.
MIP Presolve modified 323 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 157 rows, 157 columns, and 705 nonzeros.
Reduced MIP has 138 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.17 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.90 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.91 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 4, 5, 6, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 3, 0, 0, 0, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 4, 5, 6, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 10 columns.
MIP Presolve modified 416 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 151 rows, 151 columns, and 627 nonzeros.
Reduced MIP has 132 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.07 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (1.63 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.64 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.64 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
*     0+    0                            2.4000        1.2517            47.85%
      0     2        1.2536   105        2.4000        1.2536     2408   47.77%
Elapsed time = 6.66 sec. (274.32 ticks, tree = 0.01 MB, solutions = 4)
print s[i]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 9, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 0, 0, 1, 0, 1, 0, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 2, 3, 4, 5, 6, 9, 11],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 30 rows and 30 columns.
MIP Presolve modified 737 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 306 rows, 295 columns, and 1299 nonzeros.
Reduced MIP has 267 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.75 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (2.92 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (2.94 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (2.94 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7, 8, 10, 12]  放进袋子  27  袋子种类为2
patten : [0, 0, 0, 1, 1, 0, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[7, 8, 10, 12],27
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 54 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 79 rows, 82 columns, and 385 nonzeros.
Reduced MIP has 69 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Probing fixed 2 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.10 ticks)
Cover probing fixed 0 vars, tightened 19 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 49 coefficients.
Reduced MIP has 79 rows, 80 columns, and 378 nonzeros.
Reduced MIP has 67 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.34 ticks)
Probing fixed 1 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.09 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 89.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    12                      0.0000       30         
      0     0        0.0000    12                  MIRcuts: 1       32         
      0     0        0.0000    12                    Cuts: 17       41         
      0     0        0.0000    12                    Cuts: 10       54         
      0     0        0.0000    12                     Cuts: 4       57         
      0     0        0.0000    12                  MIRcuts: 4       64         
      0     2        0.0000     2                      0.0000       64         
Elapsed time = 0.08 sec. (10.19 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  3
Cover cuts applied:  30
Implied bound cuts applied:  35
Flow cuts applied:  5
Mixed integer rounding cuts applied:  9
Gomory fractional cuts applied:  5

Root node processing (before b&c):
  Real time             =    0.05 sec. (10.15 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.25 sec. (11.22 ticks)
  Sync time (average)   =    0.15 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.30 sec. (21.37 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,27 + 1.0*s_8,27 + 1.0*s_10,27 + 1.0*s_12,27 - 3.0*n_27) <= 0.0无法将物品 [7, 8, 10, 12]  放进袋子 27 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 9, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 0, 1, 0, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 9, 11]
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[11, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
47
——————————————————————————————————————————第3层——————————————————————————————————————
330
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
haha
Position{type=7, x=0, y=0, z=0, lx=250, ly=100, lz=160}
Position{type=3, x=250, y=0, z=0, lx=100, ly=200, lz=140}
Position{type=1, x=0, y=100, z=0, lx=230, ly=80, lz=80}
Position{type=5, x=0, y=100, z=80, lx=180, ly=100, lz=70}
Position{type=0, x=180, y=100, z=80, lx=60, ly=50, lz=40}
Position{type=2, x=230, y=100, z=0, lx=10, ly=10, lz=10}
Position{type=2, x=240, y=100, z=0, lx=10, ly=10, lz=10}
Position{type=2, x=230, y=110, z=0, lx=10, ly=10, lz=10}
Position{type=2, x=240, y=110, z=0, lx=10, ly=10, lz=10}
Position{type=2, x=230, y=120, z=0, lx=10, ly=10, lz=10}
needToSolve=true needToAddCut=false
将物品  [8, 10, 12]  放进袋子  27  袋子种类为2
patten : [0, 0, 0, 0, 1, 0, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[8, 10, 12],27
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 34 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 49 rows, 52 columns, and 228 nonzeros.
Reduced MIP has 42 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.30 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.55 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.56 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.56 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
*     4     4      integral     0        2.0000        1.2598     2915   37.01%
print s[i]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
将物品  [11]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [7, 8, 9]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 1, 1, 0, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7, 8, 9],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 29 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 49 rows, 52 columns, and 228 nonzeros.
Reduced MIP has 42 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.30 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.49 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.50 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.50 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 10, 12]  放进袋子  14  袋子种类为1
patten : [1, 1, 5, 0, 0, 0, 1, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 2, 3, 4, 5, 6, 10, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_7,8':  0  = 1.
Presolve time = 0.02 sec. (3.15 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (3.21 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (3.21 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_1,14 + 1.0*s_2,14 + 1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_10,14 + 1.0*s_12,14 - 8.0*n_14) <= 0.0无法将物品 [0, 1, 2, 3, 4, 5, 6, 10, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [12]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [7, 8, 9]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 1, 1, 0, 0, 0, 1]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 10, 11]  放进袋子  14  袋子种类为1
patten : [1, 1, 5, 0, 0, 0, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 2, 3, 4, 5, 6, 10, 11],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 37 rows and 45 columns.
MIP Presolve modified 1246 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 287 rows, 268 columns, and 1086 nonzeros.
Reduced MIP has 240 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (3.83 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (5.90 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (5.90 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_1,14 + 1.0*s_2,14 + 1.0*s_3,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_10,14 + 1.0*s_11,14 - 8.0*n_14) <= 0.0无法将物品 [0, 1, 2, 3, 4, 5, 6, 10, 11]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [7]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 4, 8, 9, 11]  放进袋子  13  袋子种类为1
patten : [1, 0, 3, 0, 1, 1, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 4, 8, 9, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 15 columns.
MIP Presolve modified 563 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 200 rows, 192 columns, and 855 nonzeros.
Reduced MIP has 170 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.44 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (2.27 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (2.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (2.28 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 5, 6, 10, 12]  放进袋子  14  袋子种类为1
patten : [0, 1, 2, 0, 0, 0, 1, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 5, 6, 10, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_3,4':  0  = 1.
Presolve time = 0.00 sec. (1.01 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.04 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.04 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_10,14 + 1.0*s_12,14 - 4.0*n_14) <= 0.0无法将物品 [1, 5, 6, 10, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [7]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 4, 5, 8, 9, 11]  放进袋子  13  袋子种类为1
patten : [1, 0, 4, 0, 1, 1, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 4, 5, 8, 9, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 18 rows and 24 columns.
MIP Presolve modified 775 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 249 rows, 237 columns, and 1043 nonzeros.
Reduced MIP has 212 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.80 ticks)
Found incumbent of value 0.000000 after 0.01 sec. (2.75 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (2.77 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (2.77 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 6, 10, 12]  放进袋子  14  袋子种类为1
patten : [0, 1, 1, 0, 0, 0, 1, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 6, 10, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_2,3':  0  = 1.
Presolve time = 0.00 sec. (0.70 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.71 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.71 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_6,14 + 1.0*s_10,14 + 1.0*s_12,14 - 3.0*n_14) <= 0.0无法将物品 [1, 6, 10, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [7]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 8, 9, 11]  放进袋子  13  袋子种类为1
patten : [1, 0, 5, 0, 1, 1, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 4, 5, 6, 8, 9, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 30 rows and 36 columns.
MIP Presolve modified 1016 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 302 rows, 285 columns, and 1243 nonzeros.
Reduced MIP has 257 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (2.21 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (4.10 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (4.12 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (4.12 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 10, 12]  放进袋子  14  袋子种类为1
patten : [0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 10, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_1,2':  0  = 1.
Presolve time = 0.00 sec. (0.38 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.38 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.38 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_10,14 + 1.0*s_12,14 - 2.0*n_14) <= 0.0无法将物品 [1, 10, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 7, 11, 12]  放进袋子  13  袋子种类为1
patten : [1, 0, 3, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 4, 7, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 22 rows and 26 columns.
MIP Presolve modified 707 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 184 rows, 178 columns, and 748 nonzeros.
Reduced MIP has 156 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.66 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.60 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 6.0*n_13) <= 0.0无法将物品 [0, 2, 3, 4, 7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 5, 6, 8, 9, 10]  放进袋子  14  袋子种类为1
patten : [0, 1, 2, 0, 1, 1, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 5, 6, 8, 9, 10],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 5 rows and 8 columns.
MIP Presolve modified 315 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 150 rows, 148 columns, and 633 nonzeros.
Reduced MIP has 129 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.51 ticks)
Probing fixed 8 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 19 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 15 rows and 26 columns.
MIP Presolve modified 116 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 134 rows, 121 columns, and 566 nonzeros.
Reduced MIP has 102 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.53 ticks)
Probing fixed 10 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 5 bounds.
Presolve time = 0.00 sec. (0.54 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (5.96 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (5.96 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 - 5.0*n_14) <= 0.0无法将物品 [1, 5, 6, 8, 9, 10]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0000000000000009, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 7, 8, 12]  放进袋子  13  袋子种类为1
patten : [1, 0, 3, 1, 1, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 3, 4, 7, 8, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 22 rows and 26 columns.
MIP Presolve modified 707 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 184 rows, 178 columns, and 748 nonzeros.
Reduced MIP has 156 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.66 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.60 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_12,13 - 6.0*n_13) <= 0.0无法将物品 [0, 2, 3, 4, 7, 8, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [1, 5, 6, 9, 10, 11]  放进袋子  14  袋子种类为1
patten : [0, 1, 2, 0, 0, 1, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 5, 6, 9, 10, 11],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 6 times.
MIP Presolve eliminated 11 rows and 17 columns.
MIP Presolve modified 444 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 138 rows, 133 columns, and 548 nonzeros.
Reduced MIP has 114 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (2.02 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (2.84 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (2.84 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 - 5.0*n_14) <= 0.0无法将物品 [1, 5, 6, 9, 10, 11]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.9999999999999998, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 3, 4, 5, 7, 11, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 4, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 3, 4, 5, 7, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 34 rows and 35 columns.
MIP Presolve modified 716 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 172 rows, 169 columns, and 634 nonzeros.
Reduced MIP has 147 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.48 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.28 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.28 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 6.0*n_13) <= 0.0无法将物品 [2, 3, 4, 5, 7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 6, 8, 9, 10]  放进袋子  14  袋子种类为1
patten : [1, 1, 1, 0, 1, 1, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 6, 8, 9, 10],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 1 rows and 4 columns.
MIP Presolve modified 252 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 154 rows, 152 columns, and 711 nonzeros.
Reduced MIP has 133 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.63 ticks)
Probing fixed 6 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 8 rows and 15 columns.
MIP Presolve modified 103 coefficients.
Reduced MIP has 146 rows, 137 columns, and 669 nonzeros.
Reduced MIP has 118 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.61 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 178.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.47 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    39                      0.0000       57         
      0     0        0.0000    39                     Cuts: 2       62         
      0     0        0.0000    39                    Cuts: 51       99         
      0     0        0.0000    39                     Cuts: 9      115         
      0     0        cutoff                                        115         
Elapsed time = 0.08 sec. (18.48 ticks, tree = 0.01 MB, solutions = 0)

GUB cover cuts applied:  1
Implied bound cuts applied:  1
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0.08 sec. (18.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.08 sec. (18.48 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_1,14 + 1.0*s_6,14 + 1.0*s_8,14 + 1.0*s_9,14 + 1.0*s_10,14 - 5.0*n_14) <= 0.0无法将物品 [0, 1, 6, 8, 9, 10]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 7, 8]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 7, 8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 6 rows and 7 columns.
MIP Presolve modified 56 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 41 rows, 44 columns, and 184 nonzeros.
Reduced MIP has 35 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.28 ticks)
Probing fixed 8 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.04 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 10 rows and 12 columns.
MIP Presolve modified 18 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 30 rows, 31 columns, and 119 nonzeros.
Reduced MIP has 22 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.15 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.78 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.78 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_7,0 + 1.0*s_8,0 - 2.0*n_0) <= 0.0无法将物品 [0, 7, 8]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 5, 0, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 3, 4, 5, 6, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 39 rows and 39 columns.
MIP Presolve modified 519 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 120 rows, 121 columns, and 356 nonzeros.
Reduced MIP has 104 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.67 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.05 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 9, 10, 11]  放进袋子  14  袋子种类为1
patten : [0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 9, 10, 11],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 6 times.
MIP Presolve eliminated 8 rows and 14 columns.
MIP Presolve modified 119 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 60 rows, 58 columns, and 256 nonzeros.
Reduced MIP has 45 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.99 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.44 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.44 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,14 + 1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 - 3.0*n_14) <= 0.0无法将物品 [1, 9, 10, 11]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 8]  放进袋子  0  袋子种类为0
patten : [1, 1, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 10 rows and 16 columns.
MIP Presolve modified 85 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 29 rows, 27 columns, and 117 nonzeros.
Reduced MIP has 20 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.45 ticks)
Probing fixed 9 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.02 ticks)
Cover probing fixed 0 vars, tightened 3 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 19 rows and 15 columns.
MIP Presolve modified 20 coefficients.
Reduced MIP has 10 rows, 12 columns, and 32 nonzeros.
Reduced MIP has 10 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.72 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.72 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_8,0 - 2.0*n_0) <= 0.0无法将物品 [0, 1, 8]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 5, 1, 0, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 3, 4, 5, 6, 7, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 41 rows and 41 columns.
MIP Presolve modified 779 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 167 rows, 165 columns, and 567 nonzeros.
Reduced MIP has 143 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.35 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.09 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_12,13 - 6.0*n_13) <= 0.0无法将物品 [2, 3, 4, 5, 6, 7, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [9, 10, 11]  放进袋子  14  袋子种类为1
patten : [0, 0, 0, 0, 0, 1, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[9, 10, 11],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 4 rows and 10 columns.
MIP Presolve modified 81 coefficients.
Aggregator did 10 substitutions.
Reduced MIP has 39 rows, 37 columns, and 168 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.59 ticks)
Probing fixed 7 vars, tightened 10 bounds.
Probing time = 0.00 sec. (0.05 ticks)
Cover probing fixed 2 vars, tightened 7 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 18 rows and 16 columns.
MIP Presolve modified 68 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 16 rows, 16 columns, and 50 nonzeros.
Reduced MIP has 11 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.19 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.18 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.18 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_9,14 + 1.0*s_10,14 + 1.0*s_11,14 - 2.0*n_14) <= 0.0无法将物品 [9, 10, 11]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [12]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [8]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [11]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 9, 10]  放进袋子  13  袋子种类为1
patten : [1, 1, 5, 1, 0, 1, 1, 0, 0, 1]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 9, 10]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 7, 1, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
10
——————————————————————————————————————————第3层——————————————————————————————————————
124
——————————————————————————————————————————第4层——————————————————————————————————————
500
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
装不完，装了8
addCuts——IloRange  : -infinity <= (1.0*s_10,13 + 1.0*s_7,13 + 1.0*s_1,13 + 1.0*s_9,13 + 1.0*s_0,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 - 9.0*n_13) <= 0.0无法将物品 [10, 7, 1, 9, 0, 2, 3, 4, 5, 6]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
print n
[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
将物品  [0, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 15 rows and 15 columns.
MIP Presolve modified 42 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 10 rows, 13 columns, and 36 nonzeros.
Reduced MIP has 12 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.08 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.13 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.13 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.13 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [8]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [11]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 9, 10]  放进袋子  13  袋子种类为1
patten : [0, 1, 5, 1, 0, 1, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 3, 4, 5, 6, 7, 9, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 32 rows and 33 columns.
MIP Presolve modified 874 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 299 rows, 287 columns, and 1209 nonzeros.
Reduced MIP has 259 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (2.86 ticks)
Probing fixed 7 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.35 ticks)
Cover probing fixed 0 vars, tightened 38 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 31 rows and 52 columns.
MIP Presolve modified 218 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 267 rows, 234 columns, and 1097 nonzeros.
Reduced MIP has 206 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.04 ticks)
Probing fixed 8 vars, tightened 3 bounds.
Probing time = 0.00 sec. (0.29 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 3 times.
Detecting symmetries...
MIP Presolve eliminated 8 rows and 15 columns.
MIP Presolve modified 106 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 256 rows, 216 columns, and 971 nonzeros.
Reduced MIP has 188 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.94 ticks)
Probing fixed 15 vars, tightened 13 bounds.
Probing time = 0.02 sec. (0.40 ticks)
Cover probing fixed 6 vars, tightened 24 bounds.
Clique table members: 263.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.59 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    58                      0.0000       48         
      0     0        cutoff                                         58         
Elapsed time = 0.06 sec. (19.65 ticks, tree = 0.01 MB, solutions = 0)

Clique cuts applied:  31
Implied bound cuts applied:  4
Flow cuts applied:  1
Mixed integer rounding cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.06 sec. (19.66 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.06 sec. (19.66 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_9,13 + 1.0*s_10,13 - 8.0*n_13) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 7, 9, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
print n
[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
将物品  [0, 9, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 9, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_1,2':  0  = 1.
Presolve time = 0.00 sec. (0.13 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.14 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.14 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_9,0 + 1.0*s_12,0 - 2.0*n_0) <= 0.0无法将物品 [0, 9, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [8]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [11]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 10]  放进袋子  13  袋子种类为1
patten : [0, 1, 5, 1, 0, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 3, 4, 5, 6, 7, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 32 rows and 33 columns.
MIP Presolve modified 745 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 234 rows, 227 columns, and 892 nonzeros.
Reduced MIP has 202 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.21 ticks)
Probing fixed 6 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.26 ticks)
Cover probing fixed 0 vars, tightened 36 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 31 rows and 51 columns.
MIP Presolve modified 173 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 202 rows, 175 columns, and 783 nonzeros.
Reduced MIP has 150 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.74 ticks)
Probing fixed 5 vars, tightened 2 bounds.
Probing time = 0.01 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Tried aggregator 3 times.
Detecting symmetries...
MIP Presolve eliminated 7 rows and 12 columns.
MIP Presolve modified 79 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 192 rows, 160 columns, and 676 nonzeros.
Reduced MIP has 135 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.34 ticks)
Probing fixed 8 vars, tightened 13 bounds.
Probing time = 0.00 sec. (0.27 ticks)
Cover probing fixed 5 vars, tightened 21 bounds.
Clique table members: 163.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.38 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    42                      0.0000       31         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000       31    0.00%
Elapsed time = 0.01 sec. (12.63 ticks, tree = 0.01 MB, solutions = 1)

Root node processing (before b&c):
  Real time             =    0.01 sec. (12.65 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (12.65 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
print n
[1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
将物品  [0, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [8]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [9, 11]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[9, 11],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 23 rows and 27 columns.
MIP Presolve modified 57 coefficients.
Aggregator did 6 substitutions.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.11 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.11 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.11 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 2, 3, 4, 5, 6, 7, 10]  放进袋子  13  袋子种类为1
patten : [0, 1, 5, 1, 0, 0, 1, 0, 0, 1]
pattern good
needToSolve=false needToAddCut=false
*    20+   13                            1.9000        1.2781            32.73%
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 7, 10]  放进袋子  13  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 7, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 3 rows and 0 columns.
MIP Presolve modified 81 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 48 rows, 55 columns, and 198 nonzeros.
Reduced MIP has 45 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.27 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.51 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.51 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.51 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 3, 4, 5, 6, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 4, 0, 1, 1, 0, 1, 1, 2]
pattern good
排序前[0, 1, 3, 4, 5, 6, 8, 9, 11, 12]
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[12, 11, 8, 1, 9, 0, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
29
——————————————————————————————————————————第4层——————————————————————————————————————
122
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_1,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 9.0*n_26) <= 0.0无法将物品 [12, 11, 8, 1, 9, 0, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 7, 10, 11]  放进袋子  13  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[2, 7, 10, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 12 rows and 16 columns.
MIP Presolve modified 198 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 59 rows, 59 columns, and 230 nonzeros.
Reduced MIP has 47 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.90 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.40 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.40 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,13 + 1.0*s_7,13 + 1.0*s_10,13 + 1.0*s_11,13 - 3.0*n_13) <= 0.0无法将物品 [2, 7, 10, 11]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 8, 9, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 4, 0, 1, 1, 0, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 3, 4, 5, 6, 8, 9, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 18 rows and 19 columns.
MIP Presolve modified 879 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 316 rows, 304 columns, and 1404 nonzeros.
Reduced MIP has 276 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.34 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (3.58 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (3.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (3.60 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 7, 10]  放进袋子  13  袋子种类为1
patten : [1, 0, 1, 1, 0, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 2, 7, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve modified 107 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 81 rows, 85 columns, and 363 nonzeros.
Reduced MIP has 72 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.48 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.80 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.80 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.80 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 3, 4, 5, 6, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 4, 0, 1, 1, 0, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 3, 4, 5, 6, 8, 9, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 18 rows and 20 columns.
MIP Presolve modified 999 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 314 rows, 301 columns, and 1380 nonzeros.
Reduced MIP has 273 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (3.21 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (5.19 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (5.21 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (5.21 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
*    22    13      integral     0        1.7000        1.2885     4366   24.20%
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 12]  放进袋子  0  袋子种类为0
patten : [1, 1, 2, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 2, 3, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_1,4':  0  = 1.
Presolve time = 0.00 sec. (0.86 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.88 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.88 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_12,0 - 4.0*n_0) <= 0.0无法将物品 [0, 1, 2, 3, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [9, 11]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [4, 5, 6, 7, 8, 10]  放进袋子  13  袋子种类为1
patten : [0, 0, 3, 1, 1, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[4, 5, 6, 7, 8, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 13 rows and 11 columns.
MIP Presolve modified 389 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 147 rows, 150 columns, and 607 nonzeros.
Reduced MIP has 131 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.95 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 18 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 19 rows and 31 columns.
MIP Presolve modified 97 coefficients.
Reduced MIP has 128 rows, 119 columns, and 537 nonzeros.
Reduced MIP has 100 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.40 ticks)
Probing fixed 4 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 23 coefficients.
Reduced MIP has 128 rows, 115 columns, and 522 nonzeros.
Reduced MIP has 96 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.44 ticks)
Probing time = 0.00 sec. (0.14 ticks)
Clique table members: 138.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.23 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    34                      0.0000       44         
      0     0        cutoff                                         44         
Elapsed time = 0.06 sec. (10.44 ticks, tree = 0.01 MB, solutions = 0)

Root node processing (before b&c):
  Real time             =    0.06 sec. (10.45 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.06 sec. (10.45 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_10,13 - 5.0*n_13) <= 0.0无法将物品 [4, 5, 6, 7, 8, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 12]  放进袋子  0  袋子种类为0
patten : [0, 1, 3, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'xi_0,4' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.56 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.59 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.59 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_12,0 - 4.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 6, 9, 11]  放进袋子  1  袋子种类为0
patten : [0, 0, 2, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[5, 6, 9, 11],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 17 rows and 18 columns.
MIP Presolve modified 228 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 60 rows, 63 columns, and 201 nonzeros.
Reduced MIP has 51 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.40 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (0.64 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.64 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.64 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 7, 8, 10]  放进袋子  13  袋子种类为1
patten : [1, 0, 0, 1, 1, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 7, 8, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 70 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 79 rows, 82 columns, and 385 nonzeros.
Reduced MIP has 69 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.50 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.09 ticks)
Cover probing fixed 0 vars, tightened 15 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 5 columns.
MIP Presolve modified 65 coefficients.
Reduced MIP has 78 rows, 77 columns, and 366 nonzeros.
Reduced MIP has 64 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.33 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.08 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 95.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.22 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    17                      0.0000       33         
      0     0        0.0000    17                     Cuts: 8       44         
      0     0        0.0000    17                    Cuts: 18       60         
      0     0        cutoff                                         60         
Elapsed time = 0.05 sec. (7.09 ticks, tree = 0.01 MB, solutions = 0)

Implied bound cuts applied:  2
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.05 sec. (7.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.05 sec. (7.09 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_10,13 - 3.0*n_13) <= 0.0无法将物品 [0, 7, 8, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 3, 4, 9, 12]  放进袋子  0  袋子种类为0
patten : [0, 0, 3, 0, 0, 1, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 9, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_3,4':  0  = 1.
Presolve time = 0.00 sec. (0.32 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.34 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.34 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_9,0 + 1.0*s_12,0 - 4.0*n_0) <= 0.0无法将物品 [2, 3, 4, 9, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 5, 6, 11]  放进袋子  1  袋子种类为0
patten : [1, 1, 2, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 5, 6, 11],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_1,4':  0  = 1.
Presolve time = 0.00 sec. (0.86 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.88 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.88 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_11,1 - 4.0*n_1) <= 0.0无法将物品 [0, 1, 5, 6, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [7, 8, 10]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 1, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7, 8, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 33 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 49 rows, 52 columns, and 228 nonzeros.
Reduced MIP has 42 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.30 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.06 ticks)
Cover probing fixed 0 vars, tightened 9 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 5 columns.
MIP Presolve modified 43 coefficients.
Reduced MIP has 48 rows, 47 columns, and 209 nonzeros.
Reduced MIP has 37 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.21 ticks)
Probing fixed 1 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.04 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 45.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.14 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    15                      0.0000       23         
      0     0        0.0000    15                  MIRcuts: 1       27         
      0     0        0.0000    15                    Cuts: 15       45         
      0     0        0.0000    15                   Covers: 1       55         
      0     0        0.0000    15                     Cuts: 9       60         
      0     0        cutoff                                         60         
Elapsed time = 0.02 sec. (4.62 ticks, tree = 0.01 MB, solutions = 0)

Flow cuts applied:  4
Mixed integer rounding cuts applied:  2
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.02 sec. (4.62 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (4.62 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_10,13 - 2.0*n_13) <= 0.0无法将物品 [7, 8, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 5, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 6, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_0,0' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.68 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.73 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.73 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_6,0 + 1.0*s_10,0 - 6.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 9, 12]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_9,1 + 1.0*s_12,1 - 2.0*n_1) <= 0.0无法将物品 [0, 9, 12]  放进袋子 1 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [7, 8, 11]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 1, 0, 0, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7, 8, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 2 rows and 9 columns.
MIP Presolve modified 50 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 43 rows, 40 columns, and 184 nonzeros.
Reduced MIP has 30 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.36 ticks)
Probing fixed 2 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.05 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 4 rows and 4 columns.
MIP Presolve modified 30 coefficients.
Reduced MIP has 39 rows, 36 columns, and 158 nonzeros.
Reduced MIP has 28 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.15 ticks)
Probing fixed 2 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.06 ticks)
Clique table members: 93.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.10 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000     8                      0.0000       17         
      0     0        0.0000     8                    Cuts: 46       40         
      0     0        0.0000     8                    Cuts: 16       57         
      0     0        cutoff                                         64         
Elapsed time = 0.03 sec. (1.90 ticks, tree = 0.01 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  10
Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.03 sec. (1.90 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (1.90 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_11,13 - 2.0*n_13) <= 0.0无法将物品 [7, 8, 11]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [2, 3, 4, 5, 6, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 5, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 5, 6, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 41 rows and 41 columns.
MIP Presolve modified 537 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 117 rows, 118 columns, and 333 nonzeros.
Reduced MIP has 102 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.75 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.10 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.11 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.11 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 1, 7, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 0, 1, 1, 1, 0, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 7, 8, 9, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 221 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 209 rows, 205 columns, and 1088 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.14 ticks)
Probing time = 0.02 sec. (0.30 ticks)
Cover probing fixed 0 vars, tightened 19 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve modified 67 coefficients.
Reduced MIP has 209 rows, 205 columns, and 1086 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.97 ticks)
Probing time = 0.00 sec. (0.29 ticks)
Clique table members: 236.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.53 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    40                      0.0000       82         
      0     0        0.0000    40                     Cuts: 9       89         
      0     0        0.0000    40                    Cuts: 43      113         
      0     0        0.0000    40                    Cuts: 27      135         
      0     0        0.0000    40                    Cuts: 18      159         
      0     0        0.0000    40                     Cuts: 8      175         
      0     0        0.0000    40                    Cuts: 29      198         
      0     2        0.0000    12                      0.0000      198         
Elapsed time = 0.13 sec. (28.74 ticks, tree = 0.02 MB, solutions = 0)

Performing restart 1

Repeating presolve.
Tried aggregator 1 time.
Reduced MIP has 209 rows, 205 columns, and 1086 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Tried aggregator 1 time.
Reduced MIP has 209 rows, 205 columns, and 1086 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.70 ticks)
Represolve time = 0.00 sec. (2.06 ticks)
   6942     0        0.0000    47                    Cuts: 21    62683         
   6942     0        0.0000    47                    Cuts: 78    62721         
   6942     0        0.0000    47                    Cuts: 68    62754         
   6942     0        0.0000    47                    Cuts: 32    62783         
   6942     0        0.0000    47                    Cuts: 45    62817         
   6942     2        0.0000     8                      0.0000    62817         

Cover cuts applied:  1
Flow cuts applied:  1
Mixed integer rounding cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.11 sec. (28.64 ticks)
Parallel b&c, 8 threads:
  Real time             =    1.09 sec. (304.82 ticks)
  Sync time (average)   =    0.29 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.20 sec. (333.46 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_1,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_11,26 + 1.0*s_12,26 - 6.0*n_26) <= 0.0无法将物品 [0, 1, 7, 8, 9, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [1, 2, 3, 4, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 3, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_0,0' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.38 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.41 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.41 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_10,0 - 4.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 5, 6, 7, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 2, 1, 1, 1, 0, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 5, 6, 7, 8, 9, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 3 rows and 5 columns.
MIP Presolve modified 624 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 264 rows, 256 columns, and 1255 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.01 sec. (2.78 ticks)
Probing time = 0.00 sec. (0.39 ticks)
Cover probing fixed 0 vars, tightened 16 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 12 rows and 18 columns.
MIP Presolve modified 72 coefficients.
Reduced MIP has 252 rows, 238 columns, and 1217 nonzeros.
Reduced MIP has 213 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing time = 0.00 sec. (0.36 ticks)
Clique table members: 276.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.58 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    46                      0.0000       83         
      0     0        0.0000    46                     Cuts: 3       93         
      0     0        0.0000    46                    Cuts: 48      119         
      0     0        0.0000    46                    Cuts: 14      123         
      0     0        0.0000    46                    Cuts: 29      137         
*     0+    0                            0.0000        0.0000             0.00%
      0     0        cutoff              0.0000        0.0000      137    0.00%
Elapsed time = 0.09 sec. (34.31 ticks, tree = 0.01 MB, solutions = 1)

GUB cover cuts applied:  1
Clique cuts applied:  3
Cover cuts applied:  3
Implied bound cuts applied:  5
Flow cuts applied:  5
Mixed integer rounding cuts applied:  16
Zero-half cuts applied:  1
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.09 sec. (34.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.09 sec. (34.32 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [2, 3, 4, 9, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 3, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 9, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 19 rows and 20 columns.
MIP Presolve modified 334 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 93 rows, 95 columns, and 314 nonzeros.
Reduced MIP has 79 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.65 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.08 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.08 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_9,0 + 1.0*s_10,0 - 4.0*n_0) <= 0.0无法将物品 [2, 3, 4, 9, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 5, 6, 7, 8, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 1, 2, 1, 1, 0, 0, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 1, 5, 6, 7, 8, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 3 rows and 5 columns.
MIP Presolve modified 628 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 264 rows, 256 columns, and 1255 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.79 ticks)
Probing time = 0.00 sec. (0.40 ticks)
Cover probing fixed 0 vars, tightened 16 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 12 rows and 18 columns.
MIP Presolve modified 73 coefficients.
Reduced MIP has 252 rows, 238 columns, and 1217 nonzeros.
Reduced MIP has 213 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.11 ticks)
Probing time = 0.00 sec. (0.36 ticks)
Clique table members: 286.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.61 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    45                      0.0000       85         
      0     0        0.0000    45                    Fract: 1       86         
      0     0        0.0000    45                    Cuts: 33      108         
      0     0        0.0000    45                    Cuts: 23      129         
      0     2        0.0000     9                      0.0000      129         
Elapsed time = 0.14 sec. (32.78 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  3
Clique cuts applied:  5
Cover cuts applied:  36
Implied bound cuts applied:  78
Flow cuts applied:  13
Mixed integer rounding cuts applied:  18
Zero-half cuts applied:  2
Gomory fractional cuts applied:  13

Root node processing (before b&c):
  Real time             =    0.14 sec. (32.65 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.67 sec. (152.46 ticks)
  Sync time (average)   =    0.31 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.81 sec. (185.12 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_1,26 + 1.0*s_5,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_11,26 + 1.0*s_12,26 - 7.0*n_26) <= 0.0无法将物品 [0, 1, 5, 6, 7, 8, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [1, 10]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_0,0' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.07 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.08 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.08 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_10,0 - 1.0*n_0) <= 0.0无法将物品 [1, 10]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 5, 1, 1, 1, 0, 1, 1, 2]
pattern good
排序前[0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12]
Item{type=8, id=12, p=280, q=220, r=70, num=1, volume=4312000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[12, 11, 8, 7, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
4
——————————————————————————————————————————第2层——————————————————————————————————————
14
——————————————————————————————————————————第3层——————————————————————————————————————
27
——————————————————————————————————————————第4层——————————————————————————————————————
60
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
——————————————————————————————————————————第10层——————————————————————————————————————
500
装不完，装了10
addCuts——IloRange  : -infinity <= (1.0*s_12,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [12, 11, 8, 7, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 3, 9, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 2, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 9, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 14 rows and 17 columns.
MIP Presolve modified 316 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 100 rows, 100 columns, and 388 nonzeros.
Reduced MIP has 84 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.76 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.11 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.12 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.12 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 4, 10]  放进袋子  1  袋子种类为0
patten : [0, 1, 1, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_0,1' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.17 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.19 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.19 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_4,1 + 1.0*s_10,1 - 2.0*n_1) <= 0.0无法将物品 [1, 4, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 2, 1, 1, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[5, 6, 7, 8, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 19 rows and 20 columns.
MIP Presolve modified 327 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 92 rows, 94 columns, and 350 nonzeros.
Reduced MIP has 78 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.83 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.32 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_12,13 - 4.0*n_13) <= 0.0无法将物品 [5, 6, 7, 8, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 11]  放进袋子  0  袋子种类为0
patten : [1, 1, 2, 0, 0, 0, 0, 1, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_11,0 - 4.0*n_0) <= 0.0无法将物品 [0, 1, 2, 3, 11]  放进袋子 0 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [4, 5, 9, 10]  放进袋子  1  袋子种类为0
patten : [0, 0, 2, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[4, 5, 9, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 13 rows and 14 columns.
MIP Presolve modified 209 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 62 rows, 65 columns, and 211 nonzeros.
Reduced MIP has 52 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.47 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.80 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.80 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_9,1 + 1.0*s_10,1 - 3.0*n_1) <= 0.0无法将物品 [4, 5, 9, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [6, 7, 8, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 1, 1, 1, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[6, 7, 8, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 16 rows and 17 columns.
MIP Presolve modified 176 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 58 rows, 61 columns, and 226 nonzeros.
Reduced MIP has 48 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.58 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.89 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.89 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_12,13 - 3.0*n_13) <= 0.0无法将物品 [6, 7, 8, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 7, 8]  放进袋子  0  袋子种类为0
patten : [0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 7, 8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 8 rows and 7 columns.
MIP Presolve modified 104 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 37 rows, 42 columns, and 146 nonzeros.
Reduced MIP has 35 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.32 ticks)
Probing fixed 8 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.04 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 16 rows and 21 columns.
MIP Presolve modified 12 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 20 rows, 20 columns, and 69 nonzeros.
Reduced MIP has 13 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.10 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.69 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.69 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,0 + 1.0*s_7,0 + 1.0*s_8,0 - 2.0*n_0) <= 0.0无法将物品 [2, 7, 8]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [11]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [9, 12]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[9, 12],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'yi_0,1' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.04 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.05 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.05 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_9,2 + 1.0*s_12,2 - 1.0*n_2) <= 0.0无法将物品 [9, 12]  放进袋子 2 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 10]  放进袋子  3  袋子种类为0
patten : [1, 1, 4, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 3, 4, 5, 6, 10],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_1,3' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.79 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.82 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.82 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,3 + 1.0*s_1,3 + 1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_10,3 - 6.0*n_3) <= 0.0无法将物品 [0, 1, 3, 4, 5, 6, 10]  放进袋子 3 袋子种类为0
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 1, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 12 columns.
MIP Presolve modified 124 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 42 rows, 43 columns, and 156 nonzeros.
Reduced MIP has 33 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.21 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.36 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.36 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.36 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [7, 8]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[7, 8],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 3 rows and 6 columns.
MIP Presolve modified 18 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 20 rows, 20 columns, and 85 nonzeros.
Reduced MIP has 15 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.16 ticks)
Probing fixed 8 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.02 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.32 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.32 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,1 + 1.0*s_8,1 - 1.0*n_1) <= 0.0无法将物品 [7, 8]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [9, 11]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 3, 4, 5, 6, 10]  放进袋子  3  袋子种类为0
patten : [0, 1, 4, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 3, 4, 5, 6, 10],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_0,3' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.52 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.56 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.56 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,3 + 1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_10,3 - 5.0*n_3) <= 0.0无法将物品 [1, 3, 4, 5, 6, 10]  放进袋子 3 袋子种类为0
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 3, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 17 rows and 19 columns.
MIP Presolve modified 356 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 99 rows, 100 columns, and 349 nonzeros.
Reduced MIP has 84 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.71 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.02 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.03 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 5, 6, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 2, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 5, 6, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 3 rows and 4 columns.
MIP Presolve modified 496 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 266 rows, 259 columns, and 1277 nonzeros.
Reduced MIP has 234 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.01 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.36 ticks)
Cover probing fixed 0 vars, tightened 48 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 12 rows and 21 columns.
MIP Presolve modified 162 coefficients.
Reduced MIP has 254 rows, 238 columns, and 1229 nonzeros.
Reduced MIP has 213 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.18 ticks)
Probing fixed 0 vars, tightened 5 bounds.
Probing time = 0.00 sec. (0.29 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Clique table members: 184.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.02 sec. (0.71 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    57                      0.0000       60         
      0     0        0.0000    57                    Cuts: 11       77         
      0     0        0.0000    57                    Cuts: 59      122         
      0     0        0.0000    57                    Cuts: 14      146         
      0     0        0.0000    57                    Cuts: 54      186         
      0     2        0.0000    20                      0.0000      186         
Elapsed time = 0.16 sec. (34.21 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  3
Clique cuts applied:  4
Cover cuts applied:  38
Implied bound cuts applied:  63
Flow cuts applied:  19
Mixed integer rounding cuts applied:  29
Zero-half cuts applied:  1
Lift and project cuts applied:  1
Gomory fractional cuts applied:  7

Root node processing (before b&c):
  Real time             =    0.13 sec. (34.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.39 sec. (53.83 ticks)
  Sync time (average)   =    0.22 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.52 sec. (87.92 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_5,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 7.0*n_26) <= 0.0无法将物品 [1, 5, 6, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 4, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 26 rows and 28 columns.
MIP Presolve modified 521 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 134 rows, 133 columns, and 466 nonzeros.
Reduced MIP has 114 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.92 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.35 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.36 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.36 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 6, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 1, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 6, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 298 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 211 rows, 208 columns, and 1045 nonzeros.
Reduced MIP has 186 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.60 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.28 ticks)
Cover probing fixed 0 vars, tightened 41 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 6 rows and 12 columns.
MIP Presolve modified 123 coefficients.
Reduced MIP has 205 rows, 196 columns, and 1015 nonzeros.
Reduced MIP has 174 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.96 ticks)
Probing fixed 0 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.23 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Clique table members: 157.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.60 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    36                      0.0000       65         
      0     0        0.0000    36                     Cuts: 3       69         
      0     0        0.0000    36                    Cuts: 38       96         
      0     0        0.0000    36                     Cuts: 8      113         
      0     2        0.0000    12                      0.0000      113         
Elapsed time = 0.09 sec. (26.91 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  1
Cover cuts applied:  37
Implied bound cuts applied:  59
Flow cuts applied:  10
Mixed integer rounding cuts applied:  11
Gomory fractional cuts applied:  8

Root node processing (before b&c):
  Real time             =    0.08 sec. (26.81 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.17 sec. (53.41 ticks)
  Sync time (average)   =    0.07 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.25 sec. (80.22 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 6.0*n_26) <= 0.0无法将物品 [1, 6, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 9, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 4, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 9, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 29 rows and 32 columns.
MIP Presolve modified 675 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 180 rows, 175 columns, and 672 nonzeros.
Reduced MIP has 153 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.25 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (1.86 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.88 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.88 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 6, 7, 8, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 1, 1, 1, 0, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 6, 7, 8, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 243 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 160 rows, 160 columns, and 771 nonzeros.
Reduced MIP has 141 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.22 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 23 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 6 rows and 12 columns.
MIP Presolve modified 101 coefficients.
Reduced MIP has 154 rows, 148 columns, and 741 nonzeros.
Reduced MIP has 129 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.72 ticks)
Probing fixed 0 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Clique table members: 121.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.39 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    30                      0.0000       33         
      0     0        0.0000    30                     Cuts: 5       37         
      0     0        0.0000    30                    Cuts: 21       59         
      0     0        0.0000    30                     Cuts: 4       74         
      0     0        0.0000    30                     Cuts: 4       89         
      0     2        0.0000     6                      0.0000       89         
Elapsed time = 0.09 sec. (20.64 ticks, tree = 0.02 MB, solutions = 0)

Cover cuts applied:  35
Implied bound cuts applied:  50
Flow cuts applied:  11
Mixed integer rounding cuts applied:  11
Gomory fractional cuts applied:  12

Root node processing (before b&c):
  Real time             =    0.06 sec. (20.57 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.30 sec. (46.50 ticks)
  Sync time (average)   =    0.19 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.36 sec. (67.07 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_12,26 - 5.0*n_26) <= 0.0无法将物品 [1, 6, 7, 8, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000009, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 6, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 5, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 6, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 38 rows and 40 columns.
MIP Presolve modified 715 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 173 rows, 169 columns, and 595 nonzeros.
Reduced MIP has 147 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.17 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (1.73 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (1.74 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (1.74 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 0, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 117 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 160 rows, 160 columns, and 825 nonzeros.
Reduced MIP has 141 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.11 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 0 vars, tightened 35 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 88 coefficients.
Reduced MIP has 160 rows, 157 columns, and 813 nonzeros.
Reduced MIP has 138 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.79 ticks)
Probing fixed 0 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Clique table members: 130.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.52 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    30                      0.0000       57         
      0     0        0.0000    30                     Cuts: 4       62         
      0     0        0.0000    30                    Cuts: 24       83         
      0     0        0.0000    30                    Cuts: 14       99         
      0     0        0.0000    30                    Cuts: 10      110         
      0     0        0.0000    30                    Cuts: 31      148         
      0     2        0.0000    13                      0.0000      149         
Elapsed time = 0.11 sec. (23.77 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  4
Clique cuts applied:  3
Cover cuts applied:  48
Implied bound cuts applied:  38
Flow cuts applied:  22
Mixed integer rounding cuts applied:  31
Zero-half cuts applied:  1
Gomory fractional cuts applied:  12

Root node processing (before b&c):
  Real time             =    0.08 sec. (23.69 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.27 sec. (64.09 ticks)
  Sync time (average)   =    0.12 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.34 sec. (87.78 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 5.0*n_26) <= 0.0无法将物品 [1, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 6, 9, 11]  放进袋子  0  袋子种类为0
patten : [1, 0, 5, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 6, 9, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 41 rows and 44 columns.
MIP Presolve modified 898 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 226 rows, 217 columns, and 832 nonzeros.
Reduced MIP has 192 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.57 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (2.34 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.36 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.36 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 7, 8, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 0, 1, 1, 0, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 7, 8, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 89 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 116 rows, 118 columns, and 584 nonzeros.
Reduced MIP has 102 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.78 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 32 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 3 columns.
MIP Presolve modified 71 coefficients.
Reduced MIP has 116 rows, 115 columns, and 572 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.55 ticks)
Probing fixed 0 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Clique table members: 97.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.31 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       25         
      0     0        0.0000    23                     Cuts: 8       33         
      0     0        0.0000    23                    Cuts: 36       53         
      0     0        0.0000    23                    Cuts: 40       79         
      0     2        0.0000     6                      0.0000       79         
Elapsed time = 0.08 sec. (14.77 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  6
Clique cuts applied:  15
Cover cuts applied:  56
Implied bound cuts applied:  42
Flow cuts applied:  9
Mixed integer rounding cuts applied:  22
Zero-half cuts applied:  2
Gomory fractional cuts applied:  15

Root node processing (before b&c):
  Real time             =    0.08 sec. (14.70 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.38 sec. (54.25 ticks)
  Sync time (average)   =    0.19 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.45 sec. (68.96 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [1, 7, 8, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 2, 11]  放进袋子  0  袋子种类为0
patten : [1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 2, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_1,3':  0  = 1.
Presolve time = 0.00 sec. (0.59 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.60 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_11,0 - 3.0*n_0) <= 0.0无法将物品 [0, 1, 2, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [0, 0, 4, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[3, 4, 5, 6, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 21 rows and 19 columns.
MIP Presolve modified 852 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 313 rows, 304 columns, and 1389 nonzeros.
Reduced MIP has 276 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.20 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.42 ticks)
Cover probing fixed 0 vars, tightened 44 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 24 rows and 37 columns.
MIP Presolve modified 187 coefficients.
Reduced MIP has 289 rows, 267 columns, and 1313 nonzeros.
Reduced MIP has 239 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.97 ticks)
Probing fixed 4 vars, tightened 5 bounds.
Probing time = 0.00 sec. (0.32 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 74 coefficients.
Reduced MIP has 289 rows, 263 columns, and 1299 nonzeros.
Reduced MIP has 235 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.17 ticks)
Probing time = 0.00 sec. (0.32 ticks)
Clique table members: 238.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.61 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    53                      0.0000       93         
      0     0        0.0000    53                     Cuts: 4      106         
      0     0        0.0000    53                    Cuts: 64      152         
      0     0        0.0000    53                    Cuts: 43      189         
      0     0        0.0000    53                    Cuts: 48      225         
      0     2        0.0000    13                      0.0000      225         
Elapsed time = 0.09 sec. (43.66 ticks, tree = 0.02 MB, solutions = 0)

Cover cuts applied:  46
Implied bound cuts applied:  105
Flow cuts applied:  24
Mixed integer rounding cuts applied:  44
Gomory fractional cuts applied:  9

Root node processing (before b&c):
  Real time             =    0.09 sec. (43.52 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.39 sec. (157.73 ticks)
  Sync time (average)   =    0.17 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.48 sec. (201.25 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 8.0*n_26) <= 0.0无法将物品 [3, 4, 5, 6, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000004, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 11]  放进袋子  0  袋子种类为0
patten : [0, 1, 4, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 11],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'xi_0,5' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.83 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.85 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.85 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_11,0 - 5.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 5, 11]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 6, 7, 8, 9, 10, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 1, 1, 1, 1, 1, 0, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 6, 7, 8, 9, 10, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 1 columns.
MIP Presolve modified 324 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 211 rows, 208 columns, and 1045 nonzeros.
Reduced MIP has 186 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.59 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.27 ticks)
Cover probing fixed 0 vars, tightened 41 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 6 rows and 10 columns.
MIP Presolve modified 120 coefficients.
Reduced MIP has 205 rows, 198 columns, and 1022 nonzeros.
Reduced MIP has 176 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.93 ticks)
Probing fixed 0 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.24 ticks)
Cover probing fixed 0 vars, tightened 10 bounds.
Clique table members: 173.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.65 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    38                      0.0000       70         
      0     0        0.0000    38                     Cuts: 4       78         
      0     0        0.0000    38                    Cuts: 26      103         
      0     0        0.0000    38                    Cuts: 23      119         
      0     0        0.0000    38                     Cuts: 5      127         
      0     2        0.0000    11                      0.0000      127         
Elapsed time = 0.09 sec. (31.78 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Cover cuts applied:  29
Implied bound cuts applied:  58
Flow cuts applied:  17
Mixed integer rounding cuts applied:  22
Zero-half cuts applied:  1
Lift and project cuts applied:  1
Gomory fractional cuts applied:  13

Root node processing (before b&c):
  Real time             =    0.09 sec. (31.69 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.23 sec. (83.21 ticks)
  Sync time (average)   =    0.09 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.33 sec. (114.90 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_12,26 - 6.0*n_26) <= 0.0无法将物品 [0, 6, 7, 8, 9, 10, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [9, 10]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[9, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'c12':  0  = 1.
Presolve time = 0.00 sec. (0.12 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.12 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.12 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_9,1 + 1.0*s_10,1 - 1.0*n_1) <= 0.0无法将物品 [9, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [1, 11]  放进袋子  2  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 11],2
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_0,1':  0  = 1.
Presolve time = 0.00 sec. (0.10 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.10 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.10 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,2 + 1.0*s_11,2 - 1.0*n_2) <= 0.0无法将物品 [1, 11]  放进袋子 2 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7, 8]  放进袋子  3  袋子种类为0
patten : [0, 0, 5, 1, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 5, 6, 7, 8],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 38 rows and 37 columns.
MIP Presolve modified 682 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 171 rows, 170 columns, and 610 nonzeros.
Reduced MIP has 149 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 8 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 0 vars, tightened 5 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 40 rows and 57 columns.
MIP Presolve modified 36 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 130 rows, 112 columns, and 445 nonzeros.
Reduced MIP has 91 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.56 ticks)

Root node processing (before b&c):
  Real time             =    0.01 sec. (7.65 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.01 sec. (7.65 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_2,3 + 1.0*s_3,3 + 1.0*s_4,3 + 1.0*s_5,3 + 1.0*s_6,3 + 1.0*s_7,3 + 1.0*s_8,3 - 6.0*n_3) <= 0.0无法将物品 [2, 3, 4, 5, 6, 7, 8]  放进袋子 3 袋子种类为0
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [12]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 10]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'width_1,1' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.15 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.16 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.16 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_10,1 - 2.0*n_1) <= 0.0无法将物品 [0, 1, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [7, 8]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_7,2 + 1.0*s_8,2 - 1.0*n_2) <= 0.0无法将物品 [7, 8]  放进袋子 2 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [2, 3, 4, 5, 6, 9, 11]  放进袋子  3  袋子种类为0
patten : [0, 0, 5, 0, 0, 1, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 4, 5, 6, 9, 11],3
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 44 rows and 45 columns.
MIP Presolve modified 729 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 165 rows, 162 columns, and 543 nonzeros.
Reduced MIP has 141 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.98 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.59 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.61 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.61 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
print s[i]
[-0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 1.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 1.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [7, 8]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_7,0 + 1.0*s_8,0 - 1.0*n_0) <= 0.0无法将物品 [7, 8]  放进袋子 0 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [1, 10]  放进袋子  1  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_10,1 - 1.0*n_1) <= 0.0无法将物品 [1, 10]  放进袋子 1 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [12]  放进袋子  2  袋子种类为0
patten : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 9, 11]  放进袋子  3  袋子种类为0
patten : [1, 0, 5, 0, 0, 1, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [2, 3, 9, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 2, 0, 0, 1, 1, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_9,0 + 1.0*s_10,0 - 3.0*n_0) <= 0.0无法将物品 [2, 3, 9, 10]  放进袋子 0 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [1, 4, 5, 6, 11]  放进袋子  1  袋子种类为0
patten : [0, 1, 3, 0, 0, 0, 0, 1, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 6, 11],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Row 'xi_0,4' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.62 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.63 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.63 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_11,1 - 4.0*n_1) <= 0.0无法将物品 [1, 4, 5, 6, 11]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 7, 8, 12]  放进袋子  13  袋子种类为1
patten : [1, 0, 0, 1, 1, 0, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 7, 8, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 13 rows and 17 columns.
MIP Presolve modified 131 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 61 rows, 61 columns, and 277 nonzeros.
Reduced MIP has 48 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.63 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.98 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.98 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_7,13 + 1.0*s_8,13 + 1.0*s_12,13 - 3.0*n_13) <= 0.0无法将物品 [0, 7, 8, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 8, 9]  放进袋子  0  袋子种类为0
patten : [0, 1, 5, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 6, 8, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 86 rows and 72 columns.
MIP Presolve modified 977 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 173 rows, 181 columns, and 591 nonzeros.
Reduced MIP has 159 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.20 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.91 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_6,0 + 1.0*s_8,0 + 1.0*s_9,0 - 7.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 8, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 12]  放进袋子  1  袋子种类为0
patten : [1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [7, 10, 11]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 0, 0, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7, 10, 11],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 6 times.
MIP Presolve eliminated 7 rows and 14 columns.
MIP Presolve modified 77 coefficients.
Aggregator did 12 substitutions.
Reduced MIP has 34 rows, 31 columns, and 142 nonzeros.
Reduced MIP has 22 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.59 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.95 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.95 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,13 + 1.0*s_10,13 + 1.0*s_11,13 - 2.0*n_13) <= 0.0无法将物品 [7, 10, 11]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 2, 3, 9, 10, 11]  放进袋子  13  袋子种类为1
patten : [0, 1, 2, 0, 0, 1, 1, 1, 0, 1]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_9,13 + 1.0*s_10,13 + 1.0*s_11,13 - 5.0*n_13) <= 0.0无法将物品 [1, 2, 3, 9, 10, 11]  放进袋子 13 袋子种类为1
needToSolve=false needToAddCut=true
将物品  [0, 4, 5, 6, 7, 8, 12]  放进袋子  14  袋子种类为1
patten : [1, 0, 3, 1, 1, 0, 0, 0, 1, 1]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_4,14 + 1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_12,14 - 6.0*n_14) <= 0.0无法将物品 [0, 4, 5, 6, 7, 8, 12]  放进袋子 14 袋子种类为1
needToSolve=false needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [1, 8, 9]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 8, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 22 rows and 26 columns.
MIP Presolve modified 69 coefficients.
Aggregator did 15 substitutions.
Reduced MIP has 16 rows, 16 columns, and 52 nonzeros.
Reduced MIP has 11 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.50 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.50 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_8,0 + 1.0*s_9,0 - 2.0*n_0) <= 0.0无法将物品 [1, 8, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 10]  放进袋子  1  袋子种类为0
patten : [1, 0, 1, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 10],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 5 rows and 8 columns.
MIP Presolve modified 117 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 42 rows, 43 columns, and 156 nonzeros.
Reduced MIP has 33 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.37 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.60 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_2,1 + 1.0*s_10,1 - 2.0*n_1) <= 0.0无法将物品 [0, 2, 10]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 11, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 4, 1, 0, 0, 0, 1, 1, 1]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 6.0*n_13) <= 0.0无法将物品 [3, 4, 5, 6, 7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=false needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 8, 9, 10]  放进袋子  13  袋子种类为1
patten : [1, 1, 3, 0, 1, 1, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 2, 3, 4, 8, 9, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 10 rows and 13 columns.
MIP Presolve modified 605 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 254 rows, 245 columns, and 1107 nonzeros.
Reduced MIP has 220 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (2.50 ticks)
Probing fixed 6 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.32 ticks)
Cover probing fixed 0 vars, tightened 23 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 20 rows and 33 columns.
MIP Presolve modified 171 coefficients.
Reduced MIP has 234 rows, 212 columns, and 1029 nonzeros.
Reduced MIP has 187 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.77 ticks)
Probing fixed 4 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.28 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 48 coefficients.
Reduced MIP has 234 rows, 208 columns, and 1012 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.87 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.30 ticks)
Clique table members: 245.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.68 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    58                      0.0000       81         
      0     0        0.0000    58                    Cuts: 16      108         
      0     0        0.0000    58                    Cuts: 69      143         
      0     0        0.0000    58                    Cuts: 39      169         
      0     0        0.0000    58                    Cuts: 50      204         
      0     0        0.0000    58                  MIRcuts: 2      210         
      0     0        0.0000    58                    Cuts: 54      237         
      0     0        cutoff                                        237         
Elapsed time = 0.11 sec. (38.67 ticks, tree = 0.01 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  6
Cover cuts applied:  7
Implied bound cuts applied:  9
Flow cuts applied:  10
Mixed integer rounding cuts applied:  13
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.11 sec. (38.67 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.11 sec. (38.67 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 - 7.0*n_13) <= 0.0无法将物品 [0, 1, 2, 3, 4, 8, 9, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 11, 12]  放进袋子  14  袋子种类为1
patten : [0, 0, 2, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[5, 6, 7, 11, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 19 rows and 20 columns.
MIP Presolve modified 327 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 92 rows, 94 columns, and 350 nonzeros.
Reduced MIP has 78 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.83 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.31 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.31 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_11,14 + 1.0*s_12,14 - 4.0*n_14) <= 0.0无法将物品 [5, 6, 7, 11, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 8, 9, 10]  放进袋子  13  袋子种类为1
patten : [0, 1, 5, 0, 1, 1, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 3, 4, 5, 6, 8, 9, 10],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 32 rows and 35 columns.
MIP Presolve modified 882 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 297 rows, 283 columns, and 1182 nonzeros.
Reduced MIP has 255 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.85 ticks)
Probing fixed 8 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.37 ticks)
Cover probing fixed 0 vars, tightened 22 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 33 rows and 53 columns.
MIP Presolve modified 227 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 263 rows, 229 columns, and 1061 nonzeros.
Reduced MIP has 201 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.02 ticks)
Probing fixed 10 vars, tightened 6 bounds.
Probing time = 0.00 sec. (0.34 ticks)
Cover probing fixed 0 vars, tightened 5 bounds.
Presolve time = 0.00 sec. (1.38 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (12.77 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (12.77 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_10,13 - 8.0*n_13) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 8, 9, 10]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 7, 11, 12]  放进袋子  14  袋子种类为1
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 7, 11, 12],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 13 rows and 17 columns.
MIP Presolve modified 131 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 61 rows, 61 columns, and 277 nonzeros.
Reduced MIP has 48 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.63 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (0.98 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (0.98 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_7,14 + 1.0*s_11,14 + 1.0*s_12,14 - 3.0*n_14) <= 0.0无法将物品 [0, 7, 11, 12]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
    185    60        1.6000     4        1.7000        1.4000     8608   17.65%
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 6, 12]  放进袋子  0  袋子种类为0
patten : [1, 0, 5, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 6, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 39 rows and 42 columns.
MIP Presolve modified 674 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 174 rows, 169 columns, and 600 nonzeros.
Reduced MIP has 147 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.89 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.46 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.48 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [9, 11]  放进袋子  1  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [1, 10]  放进袋子  2  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_1,2 + 1.0*s_10,2 - 1.0*n_2) <= 0.0无法将物品 [1, 10]  放进袋子 2 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [7, 8]  放进袋子  3  袋子种类为0
patten : [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_7,3 + 1.0*s_8,3 - 1.0*n_3) <= 0.0无法将物品 [7, 8]  放进袋子 3 袋子种类为0
needToSolve=false needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 7, 9]  放进袋子  0  袋子种类为0
patten : [1, 0, 4, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 7, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 21 rows and 23 columns.
MIP Presolve modified 588 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 188 rows, 184 columns, and 749 nonzeros.
Reduced MIP has 162 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.28 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.96 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.97 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.97 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 6, 8, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 1, 0, 1, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 6, 8, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 303 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 158 rows, 157 columns, and 753 nonzeros.
Reduced MIP has 138 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.71 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.23 ticks)
Cover probing fixed 0 vars, tightened 24 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 7 rows and 14 columns.
MIP Presolve modified 102 coefficients.
Reduced MIP has 151 rows, 143 columns, and 715 nonzeros.
Reduced MIP has 124 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.68 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.19 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 184.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.44 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    33                      0.0000       51         
      0     0        0.0000    33                     Cuts: 6       55         
      0     0        0.0000    33                    Cuts: 23       70         
      0     0        0.0000    33                    Cuts: 27       84         
      0     0        0.0000    33                    Cuts: 22       97         
      0     2        0.0000    13                      0.0000       98         
Elapsed time = 0.06 sec. (23.09 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  3
Cover cuts applied:  35
Implied bound cuts applied:  86
Flow cuts applied:  11
Mixed integer rounding cuts applied:  11
Zero-half cuts applied:  1
Lift and project cuts applied:  1
Gomory fractional cuts applied:  9

Root node processing (before b&c):
  Real time             =    0.06 sec. (23.02 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.13 sec. (46.29 ticks)
  Sync time (average)   =    0.05 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.19 sec. (69.30 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_6,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 5.0*n_26) <= 0.0无法将物品 [1, 6, 8, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 6, 7, 9]  放进袋子  0  袋子种类为0
patten : [1, 0, 5, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 6, 7, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 33 rows and 35 columns.
MIP Presolve modified 788 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 234 rows, 226 columns, and 916 nonzeros.
Reduced MIP has 201 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.60 ticks)
Found incumbent of value 0.000000 after 0.02 sec. (2.44 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (2.45 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (2.45 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 8, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 0, 0, 1, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 8, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 124 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 22 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 5 columns.
MIP Presolve modified 71 coefficients.
Reduced MIP has 113 rows, 110 columns, and 548 nonzeros.
Reduced MIP has 94 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.53 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.14 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 158.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.33 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       41         
      0     0        0.0000    23                     Cuts: 6       46         
      0     0        0.0000    23                    Cuts: 36       64         
      0     0        0.0000    23                    Cuts: 28       87         
      0     2        0.0000     9                      0.0000       87         
Elapsed time = 0.08 sec. (14.86 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  3
Cover cuts applied:  38
Implied bound cuts applied:  44
Flow cuts applied:  12
Mixed integer rounding cuts applied:  12
Zero-half cuts applied:  1
Gomory fractional cuts applied:  10

Root node processing (before b&c):
  Real time             =    0.05 sec. (14.79 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.11 sec. (22.19 ticks)
  Sync time (average)   =    0.05 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.16 sec. (36.99 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [1, 8, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9999999999999998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 7, 9]  放进袋子  0  袋子种类为0
patten : [1, 1, 4, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 2, 3, 4, 5, 7, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 26 rows and 31 columns.
MIP Presolve modified 805 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 236 rows, 225 columns, and 943 nonzeros.
Reduced MIP has 200 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.36 ticks)
Probing fixed 5 vars, tightened 1 bounds.
Probing time = 0.00 sec. (0.32 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 27 rows and 43 columns.
MIP Presolve modified 49 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 208 rows, 181 columns, and 831 nonzeros.
Reduced MIP has 156 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.99 ticks)
Probing time = 0.00 sec. (0.26 ticks)
Cover probing fixed 0 vars, tightened 1 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve modified 10 coefficients.
Reduced MIP has 208 rows, 181 columns, and 829 nonzeros.
Reduced MIP has 156 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Probing fixed 1 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.29 ticks)
Clique table members: 282.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.02 sec. (0.54 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    58                      0.0000       60         
      0     0        0.0000    58                     Cuts: 6       62         
      0     0        0.0000    58                    Cuts: 11       94         
      0     0        0.0000    58                    Cuts: 12       99         
      0     0        0.0000    58                    Cuts: 29      115         
Detecting symmetries...
      0     2        0.0000     4                      0.0000      115         
Elapsed time = 0.06 sec. (23.28 ticks, tree = 0.02 MB, solutions = 0)

Clique cuts applied:  2
Cover cuts applied:  3
Implied bound cuts applied:  46
Flow cuts applied:  2
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0.06 sec. (23.19 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.03 sec. (6.46 ticks)
  Sync time (average)   =    0.02 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.09 sec. (29.65 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_7,0 + 1.0*s_9,0 - 7.0*n_0) <= 0.0无法将物品 [0, 1, 2, 3, 4, 5, 7, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [6, 8, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 0, 1, 0, 1, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[6, 8, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 3 rows and 2 columns.
MIP Presolve modified 234 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 111 rows, 115 columns, and 508 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.05 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 7 rows and 12 columns.
MIP Presolve modified 63 coefficients.
Reduced MIP has 104 rows, 103 columns, and 477 nonzeros.
Reduced MIP has 87 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.34 ticks)
Probing fixed 2 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 23 coefficients.
Reduced MIP has 104 rows, 101 columns, and 470 nonzeros.
Reduced MIP has 85 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)
Probing time = 0.00 sec. (0.14 ticks)
Clique table members: 181.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.19 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       36         
      0     0        0.0000    23                     Cuts: 6       40         
      0     0        0.0000    23                    Cuts: 31       61         
      0     0        0.0000    23                     Cuts: 7       67         
      0     2        0.0000     4                      0.0000       67         
Elapsed time = 0.05 sec. (12.63 ticks, tree = 0.02 MB, solutions = 0)

Cover cuts applied:  24
Implied bound cuts applied:  42
Flow cuts applied:  5
Mixed integer rounding cuts applied:  4
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.05 sec. (12.58 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.23 sec. (10.63 ticks)
  Sync time (average)   =    0.18 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.28 sec. (23.21 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_6,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [6, 8, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 7, 9]  放进袋子  0  袋子种类为0
patten : [0, 1, 5, 1, 0, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 6, 7, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 37 rows and 41 columns.
MIP Presolve modified 830 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 225 rows, 215 columns, and 822 nonzeros.
Reduced MIP has 190 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.14 ticks)
Probing fixed 8 vars, tightened 3 bounds.
Probing time = 0.00 sec. (0.48 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 38 rows and 61 columns.
MIP Presolve modified 49 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 185 rows, 152 columns, and 655 nonzeros.
Reduced MIP has 127 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.02 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (9.82 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (9.82 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_2,0 + 1.0*s_3,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_6,0 + 1.0*s_7,0 + 1.0*s_9,0 - 7.0*n_0) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 7, 9]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 8, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 0, 0, 1, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 8, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 143 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 70 coefficients.
Reduced MIP has 113 rows, 112 columns, and 554 nonzeros.
Reduced MIP has 96 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 180.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.34 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       44         
      0     0        0.0000    23                    Cuts: 18       60         
      0     0        0.0000    23                    Cuts: 38       87         
      0     0        0.0000    23                    Cuts: 25      112         
      0     2        0.0000     9                      0.0000      112         
Elapsed time = 0.03 sec. (14.77 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  4
Cover cuts applied:  28
Implied bound cuts applied:  31
Flow cuts applied:  8
Mixed integer rounding cuts applied:  9
Zero-half cuts applied:  1
Gomory fractional cuts applied:  6

Root node processing (before b&c):
  Real time             =    0.03 sec. (14.71 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.27 sec. (15.73 ticks)
  Sync time (average)   =    0.18 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.30 sec. (30.44 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_8,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [0, 8, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, -1.7082169012638815E-13, -1.7082169012638815E-13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 5, 6, 7]  放进袋子  0  袋子种类为0
patten : [1, 1, 5, 1, 0, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 2, 3, 4, 5, 6, 7],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 35 rows and 38 columns.
MIP Presolve modified 869 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 229 rows, 220 columns, and 861 nonzeros.
Reduced MIP has 195 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.21 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (3.01 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (3.03 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (3.03 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [8, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 0, 0, 0, 1, 1, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[8, 9, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 108 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.16 ticks)
Cover probing fixed 0 vars, tightened 22 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 4 columns.
MIP Presolve modified 66 coefficients.
Reduced MIP has 113 rows, 111 columns, and 553 nonzeros.
Reduced MIP has 95 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.51 ticks)
Probing fixed 2 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.17 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Clique table members: 206.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.36 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    24                      0.0000       45         
      0     0        0.0000    24                     Cuts: 9       54         
      0     0        0.0000    24                    Cuts: 52       78         
      0     0        0.0000    24                     Cuts: 8       88         
      0     0        0.0000    24                    Cuts: 40      110         
      0     2        0.0000     8                      0.0000      110         
Elapsed time = 0.08 sec. (15.37 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  3
Clique cuts applied:  3
Cover cuts applied:  22
Implied bound cuts applied:  35
Flow cuts applied:  16
Mixed integer rounding cuts applied:  16
Zero-half cuts applied:  1
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =    0.05 sec. (15.30 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.11 sec. (10.20 ticks)
  Sync time (average)   =    0.07 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.16 sec. (25.50 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_8,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [8, 9, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 8, 9]  放进袋子  0  袋子种类为0
patten : [1, 0, 4, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 8, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 21 rows and 23 columns.
MIP Presolve modified 642 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 188 rows, 184 columns, and 749 nonzeros.
Reduced MIP has 162 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.30 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.97 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.98 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.98 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 6, 7, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 1, 1, 0, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 6, 7, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 301 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 158 rows, 157 columns, and 753 nonzeros.
Reduced MIP has 138 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.71 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.21 ticks)
Cover probing fixed 0 vars, tightened 24 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 7 rows and 14 columns.
MIP Presolve modified 102 coefficients.
Reduced MIP has 151 rows, 143 columns, and 715 nonzeros.
Reduced MIP has 124 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.68 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.18 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 164.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.44 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    33                      0.0000       51         
      0     0        0.0000    33                     Cuts: 8       62         
      0     0        0.0000    33                    Cuts: 25       79         
      0     0        0.0000    33                    Cuts: 21      112         
      0     2        0.0000     8                      0.0000      112         
Elapsed time = 0.06 sec. (20.16 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  1
Clique cuts applied:  3
Cover cuts applied:  24
Implied bound cuts applied:  54
Mixed integer rounding cuts applied:  11
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.06 sec. (20.09 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.09 sec. (23.28 ticks)
  Sync time (average)   =    0.06 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.16 sec. (43.37 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 5.0*n_26) <= 0.0无法将物品 [1, 6, 7, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 2, 3, 4, 5, 6, 8, 9]  放进袋子  0  袋子种类为0
patten : [1, 0, 5, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 2, 3, 4, 5, 6, 8, 9],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 33 rows and 35 columns.
MIP Presolve modified 860 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 234 rows, 226 columns, and 916 nonzeros.
Reduced MIP has 201 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.64 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (2.47 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.48 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 7, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[1, 7, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 122 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 114 rows, 115 columns, and 568 nonzeros.
Reduced MIP has 99 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.10 ticks)
Probing fixed 5 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.15 ticks)
Cover probing fixed 0 vars, tightened 22 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 5 columns.
MIP Presolve modified 71 coefficients.
Reduced MIP has 113 rows, 110 columns, and 548 nonzeros.
Reduced MIP has 94 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (0.53 ticks)
Probing fixed 0 vars, tightened 2 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 6 bounds.
Clique table members: 138.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.33 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    23                      0.0000       41         
      0     0        0.0000    23                     Cuts: 8       46         
      0     0        0.0000    23                    Cuts: 35       71         
      0     0        0.0000    23                     Cuts: 9       80         
      0     2        0.0000     7                      0.0000       80         
Elapsed time = 0.06 sec. (15.56 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  1
Cover cuts applied:  24
Implied bound cuts applied:  45
Flow cuts applied:  5
Mixed integer rounding cuts applied:  10
Gomory fractional cuts applied:  7

Root node processing (before b&c):
  Real time             =    0.06 sec. (15.50 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.05 sec. (11.32 ticks)
  Sync time (average)   =    0.02 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.11 sec. (26.83 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,26 + 1.0*s_7,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 4.0*n_26) <= 0.0无法将物品 [1, 7, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9999999999999996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 8]  放进袋子  0  袋子种类为0
patten : [0, 1, 4, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 68 rows and 55 columns.
MIP Presolve added 1 rows and 0 columns.
MIP Presolve modified 559 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 84 rows, 97 columns, and 255 nonzeros.
Reduced MIP has 82 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.31 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (1.59 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.60 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.60 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 6, 7, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 1, 1, 0, 1, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 6, 7, 9, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 392 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 209 rows, 205 columns, and 1025 nonzeros.
Reduced MIP has 183 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.29 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.29 ticks)
Cover probing fixed 0 vars, tightened 26 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 7 rows and 12 columns.
MIP Presolve modified 122 coefficients.
Reduced MIP has 202 rows, 193 columns, and 993 nonzeros.
Reduced MIP has 171 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.91 ticks)
Probing fixed 0 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.25 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Clique table members: 218.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.66 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    48                      0.0000       73         
      0     0        0.0000    48                     Cuts: 4       82         
      0     0        0.0000    48                    Cuts: 29      108         
      0     0        0.0000    48                    Cuts: 38      128         
      0     2        0.0000     8                      0.0000      128         
Elapsed time = 0.08 sec. (27.73 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  2
Clique cuts applied:  2
Cover cuts applied:  35
Implied bound cuts applied:  56
Flow cuts applied:  7
Mixed integer rounding cuts applied:  12
Zero-half cuts applied:  2
Gomory fractional cuts applied:  13

Root node processing (before b&c):
  Real time             =    0.08 sec. (27.63 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.16 sec. (58.05 ticks)
  Sync time (average)   =    0.06 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.23 sec. (85.68 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_6,26 + 1.0*s_7,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 6.0*n_26) <= 0.0无法将物品 [0, 6, 7, 9, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 8]  放进袋子  0  袋子种类为0
patten : [0, 1, 5, 0, 1, 0, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 2, 3, 4, 5, 6, 8],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 87 rows and 71 columns.
MIP Presolve added 1 rows and 0 columns.
MIP Presolve modified 772 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 116 rows, 129 columns, and 352 nonzeros.
Reduced MIP has 111 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.68 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (2.06 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (2.08 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (2.08 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [0, 7, 9, 10, 11, 12]  放进袋子  26  袋子种类为2
patten : [1, 0, 0, 1, 0, 1, 1, 1, 1, 2]
pattern good
Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=1}
[0, 7, 9, 10, 11, 12],26
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 0 rows and 2 columns.
MIP Presolve modified 178 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 158 rows, 157 columns, and 807 nonzeros.
Reduced MIP has 138 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.57 ticks)
Probing fixed 3 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.22 ticks)
Cover probing fixed 0 vars, tightened 23 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 1 rows and 3 columns.
MIP Presolve modified 86 coefficients.
Reduced MIP has 157 rows, 154 columns, and 793 nonzeros.
Reduced MIP has 135 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.71 ticks)
Probing fixed 0 vars, tightened 4 bounds.
Probing time = 0.00 sec. (0.20 ticks)
Cover probing fixed 0 vars, tightened 8 bounds.
Clique table members: 184.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.53 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    35                      0.0000       61         
      0     0        0.0000    35                     Cuts: 6       72         
      0     0        0.0000    35                    Cuts: 47       98         
      0     0        0.0000    35                    Cuts: 17      117         
      0     0        0.0000    35                    Cuts: 50      144         
      0     2        0.0000    10                      0.0000      144         
Elapsed time = 0.08 sec. (24.13 ticks, tree = 0.02 MB, solutions = 0)

GUB cover cuts applied:  5
Clique cuts applied:  9
Cover cuts applied:  24
Implied bound cuts applied:  37
Flow cuts applied:  12
Mixed integer rounding cuts applied:  26
Lift and project cuts applied:  1
Gomory fractional cuts applied:  12

Root node processing (before b&c):
  Real time             =    0.06 sec. (24.06 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.17 sec. (34.37 ticks)
  Sync time (average)   =    0.11 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.23 sec. (58.42 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,26 + 1.0*s_7,26 + 1.0*s_9,26 + 1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_12,26 - 5.0*n_26) <= 0.0无法将物品 [0, 7, 9, 10, 11, 12]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 0.0, 0.0, 0.0, 0.0, -1.582269878270745E-13, -1.582269878270745E-13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [9, 12]  放进袋子  0  袋子种类为0
patten : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_9,0 + 1.0*s_12,0 - 1.0*n_0) <= 0.0无法将物品 [9, 12]  放进袋子 0 袋子种类为0
needToSolve=false needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 1, 5, 1, 1, 0, 1, 1, 0, 2]
pattern good
排序前[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=1, id=1, p=230, q=80, r=80, num=1, volume=1472000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 1, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
398
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_1,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 1, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[1.000000000000624, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -6.239154565169588E-13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, -1.559788641292397E-13, -1.559788641292397E-13, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.000000000000312, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, -1.559788641292397E-13, -1.559788641292397E-13, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.000000000000312, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0]
[1.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, -1.559788641292397E-13, -1.559788641292397E-13, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 12]  放进袋子  0  袋子种类为0
patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 12],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Infeasibility row 'position_0,1':  0  = 1.
Presolve time = 0.00 sec. (0.08 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.08 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.08 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,0 + 1.0*s_12,0 - 1.0*n_0) <= 0.0无法将物品 [1, 12]  放进袋子 0 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]  放进袋子  26  袋子种类为2
patten : [1, 0, 5, 1, 1, 1, 1, 1, 0, 2]
pattern good
排序前[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Item{type=6, id=10, p=200, q=150, r=150, num=1, volume=4500000}
Item{type=7, id=11, p=250, q=100, r=160, num=1, volume=4000000}
Item{type=4, id=8, p=210, q=100, r=160, num=1, volume=3360000}
Item{type=3, id=7, p=200, q=140, r=100, num=1, volume=2800000}
Item{type=5, id=9, p=180, q=100, r=70, num=1, volume=1260000}
Item{type=0, id=0, p=40, q=60, r=50, num=1, volume=120000}
Item{type=2, id=2, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=3, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=4, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=5, p=10, q=10, r=10, num=1, volume=1000}
Item{type=2, id=6, p=10, q=10, r=10, num=1, volume=1000}
排序后[10, 11, 8, 7, 9, 0, 2, 3, 4, 5, 6]
——————————————————————————————————————————第0层——————————————————————————————————————
1
——————————————————————————————————————————第1层——————————————————————————————————————
6
——————————————————————————————————————————第2层——————————————————————————————————————
36
——————————————————————————————————————————第3层——————————————————————————————————————
54
——————————————————————————————————————————第4层——————————————————————————————————————
234
——————————————————————————————————————————第5层——————————————————————————————————————
500
——————————————————————————————————————————第6层——————————————————————————————————————
500
——————————————————————————————————————————第7层——————————————————————————————————————
500
——————————————————————————————————————————第8层——————————————————————————————————————
500
——————————————————————————————————————————第9层——————————————————————————————————————
500
装不完，装了9
addCuts——IloRange  : -infinity <= (1.0*s_10,26 + 1.0*s_11,26 + 1.0*s_8,26 + 1.0*s_7,26 + 1.0*s_9,26 + 1.0*s_0,26 + 1.0*s_2,26 + 1.0*s_3,26 + 1.0*s_4,26 + 1.0*s_5,26 + 1.0*s_6,26 - 10.0*n_26) <= 0.0无法将物品 [10, 11, 8, 7, 9, 0, 2, 3, 4, 5, 6]  放进袋子 26 袋子种类为2
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 8, 9, 12]  放进袋子  13  袋子种类为1
patten : [1, 1, 3, 0, 1, 1, 0, 0, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 2, 3, 4, 8, 9, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 21 rows and 28 columns.
MIP Presolve modified 882 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 238 rows, 225 columns, and 971 nonzeros.
Reduced MIP has 200 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.54 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (3.80 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (3.80 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_8,13 + 1.0*s_9,13 + 1.0*s_12,13 - 7.0*n_13) <= 0.0无法将物品 [0, 1, 2, 3, 4, 8, 9, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 10, 11]  放进袋子  14  袋子种类为1
patten : [0, 0, 2, 1, 0, 0, 1, 1, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[5, 6, 7, 10, 11],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 15 rows and 19 columns.
MIP Presolve modified 349 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 94 rows, 93 columns, and 356 nonzeros.
Reduced MIP has 77 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.24 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.97 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.97 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_10,14 + 1.0*s_11,14 - 4.0*n_14) <= 0.0无法将物品 [5, 6, 7, 10, 11]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [0, 1, 2, 3, 4, 9, 11, 12]  放进袋子  13  袋子种类为1
patten : [1, 1, 3, 0, 0, 1, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[0, 1, 2, 3, 4, 9, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 21 rows and 28 columns.
MIP Presolve modified 883 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 238 rows, 225 columns, and 971 nonzeros.
Reduced MIP has 200 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (2.55 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (3.71 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (3.71 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_9,13 + 1.0*s_11,13 + 1.0*s_12,13 - 7.0*n_13) <= 0.0无法将物品 [0, 1, 2, 3, 4, 9, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 8, 10]  放进袋子  14  袋子种类为1
patten : [0, 0, 2, 1, 1, 0, 1, 0, 0, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[5, 6, 7, 8, 10],14
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 2 times.
MIP Presolve eliminated 7 rows and 5 columns.
MIP Presolve modified 249 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 109 rows, 114 columns, and 462 nonzeros.
Reduced MIP has 98 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.71 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.13 ticks)
Cover probing fixed 0 vars, tightened 14 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 13 rows and 22 columns.
MIP Presolve modified 73 coefficients.
Reduced MIP has 96 rows, 92 columns, and 410 nonzeros.
Reduced MIP has 76 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.30 ticks)
Probing fixed 4 vars, tightened 2 bounds.
Probing time = 0.02 sec. (0.11 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 0 rows and 4 columns.
MIP Presolve modified 19 coefficients.
Reduced MIP has 96 rows, 88 columns, and 395 nonzeros.
Reduced MIP has 72 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.33 ticks)
Probing time = 0.00 sec. (0.11 ticks)
Clique table members: 123.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.17 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        0.0000    24                      0.0000       34         
      0     0        0.0000    24                    Cuts: 12       50         
      0     0        0.0000    24                    Cuts: 26       68         
      0     0        0.0000    24                     Cuts: 3       78         
      0     0        0.0000    24                    Cuts: 14       88         
      0     0        cutoff                                         88         
Elapsed time = 0.03 sec. (12.11 ticks, tree = 0.01 MB, solutions = 0)

Implied bound cuts applied:  4
Flow cuts applied:  1
Mixed integer rounding cuts applied:  2
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0.03 sec. (12.11 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.03 sec. (12.11 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_5,14 + 1.0*s_6,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_10,14 - 4.0*n_14) <= 0.0无法将物品 [5, 6, 7, 8, 10]  放进袋子 14 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
print n
[0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
将物品  [1, 2, 3, 4, 5, 6, 9, 11, 12]  放进袋子  13  袋子种类为1
patten : [0, 1, 5, 0, 0, 1, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[1, 2, 3, 4, 5, 6, 9, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 42 rows and 50 columns.
MIP Presolve modified 1204 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 282 rows, 263 columns, and 1041 nonzeros.
Reduced MIP has 235 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.86 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (4.31 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (4.31 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,13 + 1.0*s_2,13 + 1.0*s_3,13 + 1.0*s_4,13 + 1.0*s_5,13 + 1.0*s_6,13 + 1.0*s_9,13 + 1.0*s_11,13 + 1.0*s_12,13 - 8.0*n_13) <= 0.0无法将物品 [1, 2, 3, 4, 5, 6, 9, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
将物品  [0, 7, 8, 10]  放进袋子  14  袋子种类为1
patten : [1, 0, 0, 1, 1, 0, 1, 0, 0, 1]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_0,14 + 1.0*s_7,14 + 1.0*s_8,14 + 1.0*s_10,14 - 3.0*n_14) <= 0.0无法将物品 [0, 7, 8, 10]  放进袋子 14 袋子种类为1
needToSolve=false needToAddCut=true
print s[i]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
将物品  [2, 3, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 2, 0, 0, 0, 1, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[2, 3, 10],0
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 14 rows and 14 columns.
MIP Presolve modified 141 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 33 rows, 37 columns, and 90 nonzeros.
Reduced MIP has 30 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.25 ticks)
Found incumbent of value 0.000000 after 0.00 sec. (0.35 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.35 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.35 ticks)
子问题求解完毕
子问题状态=Optimal
needToSolve=true needToAddCut=false
将物品  [1, 4, 5, 6, 8, 9]  放进袋子  1  袋子种类为0
patten : [0, 1, 3, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[1, 4, 5, 6, 8, 9],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 51 rows and 43 columns.
MIP Presolve modified 518 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 99 rows, 108 columns, and 345 nonzeros.
Reduced MIP has 92 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.36 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.80 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.80 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_1,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_6,1 + 1.0*s_8,1 + 1.0*s_9,1 - 5.0*n_1) <= 0.0无法将物品 [1, 4, 5, 6, 8, 9]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [0, 7, 11, 12]  放进袋子  13  袋子种类为1
patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1]
pattern good
addCuts——IloRange  : -infinity <= (1.0*s_0,13 + 1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 3.0*n_13) <= 0.0无法将物品 [0, 7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=false needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0]
将物品  [2, 3, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 2, 0, 0, 0, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 4, 5, 8, 9]  放进袋子  1  袋子种类为0
patten : [1, 1, 2, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 4, 5, 8, 9],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 14 rows and 23 columns.
MIP Presolve modified 422 coefficients.
Aggregator did 14 substitutions.
Reduced MIP has 136 rows, 128 columns, and 541 nonzeros.
Reduced MIP has 109 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (1.69 ticks)
Probing fixed 27 vars, tightened 14 bounds.
Probing time = 0.00 sec. (0.11 ticks)
Cover probing fixed 0 vars, tightened 5 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 60 rows and 51 columns.
MIP Presolve modified 108 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 74 rows, 75 columns, and 272 nonzeros.
Reduced MIP has 59 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.41 ticks)

Root node processing (before b&c):
  Real time             =    0.02 sec. (4.96 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.02 sec. (4.96 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_8,1 + 1.0*s_9,1 - 5.0*n_1) <= 0.0无法将物品 [0, 1, 4, 5, 8, 9]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [6, 7, 11, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 1, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[6, 7, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 3 times.
MIP Presolve eliminated 16 rows and 17 columns.
MIP Presolve modified 176 coefficients.
Aggregator did 9 substitutions.
Reduced MIP has 58 rows, 61 columns, and 226 nonzeros.
Reduced MIP has 48 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.58 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.89 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.89 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_6,13 + 1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 3.0*n_13) <= 0.0无法将物品 [6, 7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true
print s[i]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
[1.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0]
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [2, 3, 4, 5, 6, 10]  放进袋子  0  袋子种类为0
patten : [0, 0, 5, 0, 0, 0, 1, 0, 0, 0]
pattern good
needToSolve=false needToAddCut=false
将物品  [0, 1, 8, 9]  放进袋子  1  袋子种类为0
patten : [1, 1, 0, 0, 1, 1, 0, 0, 0, 0]
pattern good
Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=1}
[0, 1, 8, 9],1
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 5 times.
MIP Presolve eliminated 12 rows and 20 columns.
MIP Presolve modified 110 coefficients.
Aggregator did 16 substitutions.
Reduced MIP has 55 rows, 51 columns, and 242 nonzeros.
Reduced MIP has 40 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.78 ticks)
Probing fixed 19 vars, tightened 10 bounds.
Probing time = 0.00 sec. (0.05 ticks)
Cover probing fixed 0 vars, tightened 4 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 35 rows and 30 columns.
MIP Presolve modified 75 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 17 rows, 18 columns, and 58 nonzeros.
Reduced MIP has 14 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.13 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (1.35 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (1.35 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_0,1 + 1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_9,1 - 3.0*n_1) <= 0.0无法将物品 [0, 1, 8, 9]  放进袋子 1 袋子种类为0
needToSolve=true needToAddCut=true
将物品  [7, 11, 12]  放进袋子  13  袋子种类为1
patten : [0, 0, 0, 1, 0, 0, 0, 1, 1, 1]
pattern good
Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=1}
[7, 11, 12],13
子问题建模完毕
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
Tried aggregator 4 times.
MIP Presolve eliminated 13 rows and 18 columns.
MIP Presolve modified 58 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 29 rows, 28 columns, and 127 nonzeros.
Reduced MIP has 21 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.39 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.57 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.57 ticks)
子问题求解完毕
子问题状态=Infeasible
addCuts——IloRange  : -infinity <= (1.0*s_7,13 + 1.0*s_11,13 + 1.0*s_12,13 - 2.0*n_13) <= 0.0无法将物品 [7, 11, 12]  放进袋子 13 袋子种类为1
needToSolve=true needToAddCut=true

Clique cuts applied:  70
Cover cuts applied:  9
Implied bound cuts applied:  13
Flow cuts applied:  15
Mixed integer rounding cuts applied:  47
Zero-half cuts applied:  9
Gomory fractional cuts applied:  1
User cuts applied:  112

Root node processing (before b&c):
  Real time             =    6.66 sec. (274.34 ticks)
Sequential b&c:
  Real time             =   10.61 sec. (291.95 ticks)
                          ------------
Total (root+branch&cut) =   17.27 sec. (566.29 ticks)
!!Thread down
1.7
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0]
Total time =17.33s
——————————————————————————————————————————————————
