[5, 4, 2]
[Item{type=0, id=0, p=240, q=190, r=20, num=1, volume=912000}, Item{type=1, id=1, p=170, q=60, r=250, num=1, volume=2550000}, Item{type=2, id=2, p=190, q=130, r=250, num=1, volume=6175000}, Item{type=3, id=3, p=70, q=40, r=170, num=1, volume=476000}, Item{type=4, id=4, p=120, q=60, r=170, num=1, volume=1224000}, Item{type=4, id=5, p=120, q=60, r=170, num=1, volume=1224000}, Item{type=5, id=6, p=190, q=130, r=250, num=1, volume=6175000}, Item{type=6, id=7, p=200, q=30, r=160, num=1, volume=960000}, Item{type=7, id=8, p=180, q=20, r=150, num=1, volume=540000}, Item{type=8, id=9, p=70, q=40, r=170, num=1, volume=476000}, Item{type=9, id=10, p=120, q=30, r=180, num=1, volume=648000}, Item{type=10, id=11, p=100, q=50, r=80, num=1, volume=400000}, Item{type=10, id=12, p=100, q=50, r=80, num=1, volume=400000}, Item{type=11, id=13, p=180, q=40, r=220, num=1, volume=1584000}, Item{type=12, id=14, p=120, q=30, r=150, num=1, volume=540000}, Item{type=12, id=15, p=120, q=30, r=150, num=1, volume=540000}, Item{type=13, id=16, p=90, q=40, r=120, num=1, volume=432000}, Item{type=13, id=17, p=90, q=40, r=120, num=1, volume=432000}, Item{type=13, id=18, p=90, q=40, r=120, num=1, volume=432000}, Item{type=14, id=19, p=150, q=150, r=60, num=1, volume=1350000}]
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=5}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=4}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=2}]
Instance{bagTypeCount=3, itemTypeCount=15, bagCount=11, itemCount=20}
[Bag{type=0, X=370.0, Y=330.0, l=0.0, w=0.0, h=0.0, maxVolume=6305299.284992639, cost=0.4, num=5}, Bag{type=1, X=440.0, Y=410.0, l=0.0, w=0.0, h=0.0, maxVolume=1.1340839946075162E7, cost=0.7, num=4}, Bag{type=2, X=520.0, Y=500.0, l=0.0, w=0.0, h=0.0, maxVolume=1.9635004901018865E7, cost=1.0, num=2}]
3
0,1
1,2
2,3
3,4
4,6
6,7
7,8
8,9
9,10
10,11
11,13
13,14
14,16
16,19
19,20
IloModel  {
IloMinimize  : (0.4*n_0 + 0.4*n_1 + 0.4*n_2 + 0.4*n_3 + 0.4*n_4 + 0.7*n_5 + 0.7*n_6 + 0.7*n_7 + 0.7*n_8 + 1.0*n_9 + 1.0*n_10)
IloRange bag_and_box0 : 1.0 <= (1.0*s_0,0 + 1.0*s_0,1 + 1.0*s_0,2 + 1.0*s_0,3 + 1.0*s_0,4 + 1.0*s_0,5 + 1.0*s_0,6 + 1.0*s_0,7 + 1.0*s_0,8 + 1.0*s_0,9 + 1.0*s_0,10) <= 1.0
IloRange bag_and_box1 : 1.0 <= (1.0*s_1,0 + 1.0*s_1,1 + 1.0*s_1,2 + 1.0*s_1,3 + 1.0*s_1,4 + 1.0*s_1,5 + 1.0*s_1,6 + 1.0*s_1,7 + 1.0*s_1,8 + 1.0*s_1,9 + 1.0*s_1,10) <= 1.0
IloRange bag_and_box2 : 1.0 <= (1.0*s_2,0 + 1.0*s_2,1 + 1.0*s_2,2 + 1.0*s_2,3 + 1.0*s_2,4 + 1.0*s_2,5 + 1.0*s_2,6 + 1.0*s_2,7 + 1.0*s_2,8 + 1.0*s_2,9 + 1.0*s_2,10) <= 1.0
IloRange bag_and_box3 : 1.0 <= (1.0*s_3,0 + 1.0*s_3,1 + 1.0*s_3,2 + 1.0*s_3,3 + 1.0*s_3,4 + 1.0*s_3,5 + 1.0*s_3,6 + 1.0*s_3,7 + 1.0*s_3,8 + 1.0*s_3,9 + 1.0*s_3,10) <= 1.0
IloRange bag_and_box4 : 1.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10) <= 1.0
IloRange bag_and_box5 : 1.0 <= (1.0*s_5,0 + 1.0*s_5,1 + 1.0*s_5,2 + 1.0*s_5,3 + 1.0*s_5,4 + 1.0*s_5,5 + 1.0*s_5,6 + 1.0*s_5,7 + 1.0*s_5,8 + 1.0*s_5,9 + 1.0*s_5,10) <= 1.0
IloRange bag_and_box6 : 1.0 <= (1.0*s_6,0 + 1.0*s_6,1 + 1.0*s_6,2 + 1.0*s_6,3 + 1.0*s_6,4 + 1.0*s_6,5 + 1.0*s_6,6 + 1.0*s_6,7 + 1.0*s_6,8 + 1.0*s_6,9 + 1.0*s_6,10) <= 1.0
IloRange bag_and_box7 : 1.0 <= (1.0*s_7,0 + 1.0*s_7,1 + 1.0*s_7,2 + 1.0*s_7,3 + 1.0*s_7,4 + 1.0*s_7,5 + 1.0*s_7,6 + 1.0*s_7,7 + 1.0*s_7,8 + 1.0*s_7,9 + 1.0*s_7,10) <= 1.0
IloRange bag_and_box8 : 1.0 <= (1.0*s_8,0 + 1.0*s_8,1 + 1.0*s_8,2 + 1.0*s_8,3 + 1.0*s_8,4 + 1.0*s_8,5 + 1.0*s_8,6 + 1.0*s_8,7 + 1.0*s_8,8 + 1.0*s_8,9 + 1.0*s_8,10) <= 1.0
IloRange bag_and_box9 : 1.0 <= (1.0*s_9,0 + 1.0*s_9,1 + 1.0*s_9,2 + 1.0*s_9,3 + 1.0*s_9,4 + 1.0*s_9,5 + 1.0*s_9,6 + 1.0*s_9,7 + 1.0*s_9,8 + 1.0*s_9,9 + 1.0*s_9,10) <= 1.0
IloRange bag_and_box10 : 1.0 <= (1.0*s_10,0 + 1.0*s_10,1 + 1.0*s_10,2 + 1.0*s_10,3 + 1.0*s_10,4 + 1.0*s_10,5 + 1.0*s_10,6 + 1.0*s_10,7 + 1.0*s_10,8 + 1.0*s_10,9 + 1.0*s_10,10) <= 1.0
IloRange bag_and_box11 : 1.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10) <= 1.0
IloRange bag_and_box12 : 1.0 <= (1.0*s_12,0 + 1.0*s_12,1 + 1.0*s_12,2 + 1.0*s_12,3 + 1.0*s_12,4 + 1.0*s_12,5 + 1.0*s_12,6 + 1.0*s_12,7 + 1.0*s_12,8 + 1.0*s_12,9 + 1.0*s_12,10) <= 1.0
IloRange bag_and_box13 : 1.0 <= (1.0*s_13,0 + 1.0*s_13,1 + 1.0*s_13,2 + 1.0*s_13,3 + 1.0*s_13,4 + 1.0*s_13,5 + 1.0*s_13,6 + 1.0*s_13,7 + 1.0*s_13,8 + 1.0*s_13,9 + 1.0*s_13,10) <= 1.0
IloRange bag_and_box14 : 1.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 + 1.0*s_14,10) <= 1.0
IloRange bag_and_box15 : 1.0 <= (1.0*s_15,0 + 1.0*s_15,1 + 1.0*s_15,2 + 1.0*s_15,3 + 1.0*s_15,4 + 1.0*s_15,5 + 1.0*s_15,6 + 1.0*s_15,7 + 1.0*s_15,8 + 1.0*s_15,9 + 1.0*s_15,10) <= 1.0
IloRange bag_and_box16 : 1.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10) <= 1.0
IloRange bag_and_box17 : 1.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10) <= 1.0
IloRange bag_and_box18 : 1.0 <= (1.0*s_18,0 + 1.0*s_18,1 + 1.0*s_18,2 + 1.0*s_18,3 + 1.0*s_18,4 + 1.0*s_18,5 + 1.0*s_18,6 + 1.0*s_18,7 + 1.0*s_18,8 + 1.0*s_18,9 + 1.0*s_18,10) <= 1.0
IloRange bag_and_box19 : 1.0 <= (1.0*s_19,0 + 1.0*s_19,1 + 1.0*s_19,2 + 1.0*s_19,3 + 1.0*s_19,4 + 1.0*s_19,5 + 1.0*s_19,6 + 1.0*s_19,7 + 1.0*s_19,8 + 1.0*s_19,9 + 1.0*s_19,10) <= 1.0
IloRange Volume_0 : -infinity <= (912000.0*s_0,0 + 2550000.0*s_1,0 + 6175000.0*s_2,0 + 476000.0*s_3,0 + 1224000.0*s_4,0 + 1224000.0*s_5,0 + 6175000.0*s_6,0 + 960000.0*s_7,0 + 540000.0*s_8,0 + 476000.0*s_9,0 + 648000.0*s_10,0 + 400000.0*s_11,0 + 400000.0*s_12,0 + 1584000.0*s_13,0 + 540000.0*s_14,0 + 540000.0*s_15,0 + 432000.0*s_16,0 + 432000.0*s_17,0 + 432000.0*s_18,0 + 1350000.0*s_19,0 - 6305299.284992639*n_0) <= 0.0
IloRange Volume_1 : -infinity <= (912000.0*s_0,1 + 2550000.0*s_1,1 + 6175000.0*s_2,1 + 476000.0*s_3,1 + 1224000.0*s_4,1 + 1224000.0*s_5,1 + 6175000.0*s_6,1 + 960000.0*s_7,1 + 540000.0*s_8,1 + 476000.0*s_9,1 + 648000.0*s_10,1 + 400000.0*s_11,1 + 400000.0*s_12,1 + 1584000.0*s_13,1 + 540000.0*s_14,1 + 540000.0*s_15,1 + 432000.0*s_16,1 + 432000.0*s_17,1 + 432000.0*s_18,1 + 1350000.0*s_19,1 - 6305299.284992639*n_1) <= 0.0
IloRange Volume_2 : -infinity <= (912000.0*s_0,2 + 2550000.0*s_1,2 + 6175000.0*s_2,2 + 476000.0*s_3,2 + 1224000.0*s_4,2 + 1224000.0*s_5,2 + 6175000.0*s_6,2 + 960000.0*s_7,2 + 540000.0*s_8,2 + 476000.0*s_9,2 + 648000.0*s_10,2 + 400000.0*s_11,2 + 400000.0*s_12,2 + 1584000.0*s_13,2 + 540000.0*s_14,2 + 540000.0*s_15,2 + 432000.0*s_16,2 + 432000.0*s_17,2 + 432000.0*s_18,2 + 1350000.0*s_19,2 - 6305299.284992639*n_2) <= 0.0
IloRange Volume_3 : -infinity <= (912000.0*s_0,3 + 2550000.0*s_1,3 + 6175000.0*s_2,3 + 476000.0*s_3,3 + 1224000.0*s_4,3 + 1224000.0*s_5,3 + 6175000.0*s_6,3 + 960000.0*s_7,3 + 540000.0*s_8,3 + 476000.0*s_9,3 + 648000.0*s_10,3 + 400000.0*s_11,3 + 400000.0*s_12,3 + 1584000.0*s_13,3 + 540000.0*s_14,3 + 540000.0*s_15,3 + 432000.0*s_16,3 + 432000.0*s_17,3 + 432000.0*s_18,3 + 1350000.0*s_19,3 - 6305299.284992639*n_3) <= 0.0
IloRange Volume_4 : -infinity <= (912000.0*s_0,4 + 2550000.0*s_1,4 + 6175000.0*s_2,4 + 476000.0*s_3,4 + 1224000.0*s_4,4 + 1224000.0*s_5,4 + 6175000.0*s_6,4 + 960000.0*s_7,4 + 540000.0*s_8,4 + 476000.0*s_9,4 + 648000.0*s_10,4 + 400000.0*s_11,4 + 400000.0*s_12,4 + 1584000.0*s_13,4 + 540000.0*s_14,4 + 540000.0*s_15,4 + 432000.0*s_16,4 + 432000.0*s_17,4 + 432000.0*s_18,4 + 1350000.0*s_19,4 - 6305299.284992639*n_4) <= 0.0
IloRange Volume_5 : -infinity <= (912000.0*s_0,5 + 2550000.0*s_1,5 + 6175000.0*s_2,5 + 476000.0*s_3,5 + 1224000.0*s_4,5 + 1224000.0*s_5,5 + 6175000.0*s_6,5 + 960000.0*s_7,5 + 540000.0*s_8,5 + 476000.0*s_9,5 + 648000.0*s_10,5 + 400000.0*s_11,5 + 400000.0*s_12,5 + 1584000.0*s_13,5 + 540000.0*s_14,5 + 540000.0*s_15,5 + 432000.0*s_16,5 + 432000.0*s_17,5 + 432000.0*s_18,5 + 1350000.0*s_19,5 - 1.1340839946075162E7*n_5) <= 0.0
IloRange Volume_6 : -infinity <= (912000.0*s_0,6 + 2550000.0*s_1,6 + 6175000.0*s_2,6 + 476000.0*s_3,6 + 1224000.0*s_4,6 + 1224000.0*s_5,6 + 6175000.0*s_6,6 + 960000.0*s_7,6 + 540000.0*s_8,6 + 476000.0*s_9,6 + 648000.0*s_10,6 + 400000.0*s_11,6 + 400000.0*s_12,6 + 1584000.0*s_13,6 + 540000.0*s_14,6 + 540000.0*s_15,6 + 432000.0*s_16,6 + 432000.0*s_17,6 + 432000.0*s_18,6 + 1350000.0*s_19,6 - 1.1340839946075162E7*n_6) <= 0.0
IloRange Volume_7 : -infinity <= (912000.0*s_0,7 + 2550000.0*s_1,7 + 6175000.0*s_2,7 + 476000.0*s_3,7 + 1224000.0*s_4,7 + 1224000.0*s_5,7 + 6175000.0*s_6,7 + 960000.0*s_7,7 + 540000.0*s_8,7 + 476000.0*s_9,7 + 648000.0*s_10,7 + 400000.0*s_11,7 + 400000.0*s_12,7 + 1584000.0*s_13,7 + 540000.0*s_14,7 + 540000.0*s_15,7 + 432000.0*s_16,7 + 432000.0*s_17,7 + 432000.0*s_18,7 + 1350000.0*s_19,7 - 1.1340839946075162E7*n_7) <= 0.0
IloRange Volume_8 : -infinity <= (912000.0*s_0,8 + 2550000.0*s_1,8 + 6175000.0*s_2,8 + 476000.0*s_3,8 + 1224000.0*s_4,8 + 1224000.0*s_5,8 + 6175000.0*s_6,8 + 960000.0*s_7,8 + 540000.0*s_8,8 + 476000.0*s_9,8 + 648000.0*s_10,8 + 400000.0*s_11,8 + 400000.0*s_12,8 + 1584000.0*s_13,8 + 540000.0*s_14,8 + 540000.0*s_15,8 + 432000.0*s_16,8 + 432000.0*s_17,8 + 432000.0*s_18,8 + 1350000.0*s_19,8 - 1.1340839946075162E7*n_8) <= 0.0
IloRange Volume_9 : -infinity <= (912000.0*s_0,9 + 2550000.0*s_1,9 + 6175000.0*s_2,9 + 476000.0*s_3,9 + 1224000.0*s_4,9 + 1224000.0*s_5,9 + 6175000.0*s_6,9 + 960000.0*s_7,9 + 540000.0*s_8,9 + 476000.0*s_9,9 + 648000.0*s_10,9 + 400000.0*s_11,9 + 400000.0*s_12,9 + 1584000.0*s_13,9 + 540000.0*s_14,9 + 540000.0*s_15,9 + 432000.0*s_16,9 + 432000.0*s_17,9 + 432000.0*s_18,9 + 1350000.0*s_19,9 - 1.9635004901018865E7*n_9) <= 0.0
IloRange Volume_10 : -infinity <= (912000.0*s_0,10 + 2550000.0*s_1,10 + 6175000.0*s_2,10 + 476000.0*s_3,10 + 1224000.0*s_4,10 + 1224000.0*s_5,10 + 6175000.0*s_6,10 + 960000.0*s_7,10 + 540000.0*s_8,10 + 476000.0*s_9,10 + 648000.0*s_10,10 + 400000.0*s_11,10 + 400000.0*s_12,10 + 1584000.0*s_13,10 + 540000.0*s_14,10 + 540000.0*s_15,10 + 432000.0*s_16,10 + 432000.0*s_17,10 + 432000.0*s_18,10 + 1350000.0*s_19,10 - 1.9635004901018865E7*n_10) <= 0.0
IloRange boxCut4,0 : 0.0 <= (1.0*s_4,0 - 1.0*s_5,0) <= infinity
IloRange boxCut4,1 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 - 1.0*s_5,1) <= infinity
IloRange boxCut4,2 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 - 1.0*s_5,2) <= infinity
IloRange boxCut4,3 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 - 1.0*s_5,3) <= infinity
IloRange boxCut4,4 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 - 1.0*s_5,4) <= infinity
IloRange boxCut4,5 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 - 1.0*s_5,5) <= infinity
IloRange boxCut4,6 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 - 1.0*s_5,6) <= infinity
IloRange boxCut4,7 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 - 1.0*s_5,7) <= infinity
IloRange boxCut4,8 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 - 1.0*s_5,8) <= infinity
IloRange boxCut4,9 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 - 1.0*s_5,9) <= infinity
IloRange boxCut4,10 : 0.0 <= (1.0*s_4,0 + 1.0*s_4,1 + 1.0*s_4,2 + 1.0*s_4,3 + 1.0*s_4,4 + 1.0*s_4,5 + 1.0*s_4,6 + 1.0*s_4,7 + 1.0*s_4,8 + 1.0*s_4,9 + 1.0*s_4,10 - 1.0*s_5,10) <= infinity
IloRange boxCut11,0 : 0.0 <= (1.0*s_11,0 - 1.0*s_12,0) <= infinity
IloRange boxCut11,1 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 - 1.0*s_12,1) <= infinity
IloRange boxCut11,2 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 - 1.0*s_12,2) <= infinity
IloRange boxCut11,3 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 - 1.0*s_12,3) <= infinity
IloRange boxCut11,4 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 - 1.0*s_12,4) <= infinity
IloRange boxCut11,5 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 - 1.0*s_12,5) <= infinity
IloRange boxCut11,6 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 - 1.0*s_12,6) <= infinity
IloRange boxCut11,7 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 - 1.0*s_12,7) <= infinity
IloRange boxCut11,8 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 - 1.0*s_12,8) <= infinity
IloRange boxCut11,9 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 - 1.0*s_12,9) <= infinity
IloRange boxCut11,10 : 0.0 <= (1.0*s_11,0 + 1.0*s_11,1 + 1.0*s_11,2 + 1.0*s_11,3 + 1.0*s_11,4 + 1.0*s_11,5 + 1.0*s_11,6 + 1.0*s_11,7 + 1.0*s_11,8 + 1.0*s_11,9 + 1.0*s_11,10 - 1.0*s_12,10) <= infinity
IloRange boxCut14,0 : 0.0 <= (1.0*s_14,0 - 1.0*s_15,0) <= infinity
IloRange boxCut14,1 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 - 1.0*s_15,1) <= infinity
IloRange boxCut14,2 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 - 1.0*s_15,2) <= infinity
IloRange boxCut14,3 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 - 1.0*s_15,3) <= infinity
IloRange boxCut14,4 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 - 1.0*s_15,4) <= infinity
IloRange boxCut14,5 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 - 1.0*s_15,5) <= infinity
IloRange boxCut14,6 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 - 1.0*s_15,6) <= infinity
IloRange boxCut14,7 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 - 1.0*s_15,7) <= infinity
IloRange boxCut14,8 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 - 1.0*s_15,8) <= infinity
IloRange boxCut14,9 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 - 1.0*s_15,9) <= infinity
IloRange boxCut14,10 : 0.0 <= (1.0*s_14,0 + 1.0*s_14,1 + 1.0*s_14,2 + 1.0*s_14,3 + 1.0*s_14,4 + 1.0*s_14,5 + 1.0*s_14,6 + 1.0*s_14,7 + 1.0*s_14,8 + 1.0*s_14,9 + 1.0*s_14,10 - 1.0*s_15,10) <= infinity
IloRange boxCut16,0 : 0.0 <= (1.0*s_16,0 - 1.0*s_17,0) <= infinity
IloRange boxCut16,1 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 - 1.0*s_17,1) <= infinity
IloRange boxCut16,2 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 - 1.0*s_17,2) <= infinity
IloRange boxCut16,3 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 - 1.0*s_17,3) <= infinity
IloRange boxCut16,4 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 - 1.0*s_17,4) <= infinity
IloRange boxCut16,5 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 - 1.0*s_17,5) <= infinity
IloRange boxCut16,6 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 - 1.0*s_17,6) <= infinity
IloRange boxCut16,7 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 - 1.0*s_17,7) <= infinity
IloRange boxCut16,8 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 - 1.0*s_17,8) <= infinity
IloRange boxCut16,9 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 - 1.0*s_17,9) <= infinity
IloRange boxCut16,10 : 0.0 <= (1.0*s_16,0 + 1.0*s_16,1 + 1.0*s_16,2 + 1.0*s_16,3 + 1.0*s_16,4 + 1.0*s_16,5 + 1.0*s_16,6 + 1.0*s_16,7 + 1.0*s_16,8 + 1.0*s_16,9 + 1.0*s_16,10 - 1.0*s_17,10) <= infinity
IloRange boxCut17,0 : 0.0 <= (1.0*s_17,0 - 1.0*s_18,0) <= infinity
IloRange boxCut17,1 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 - 1.0*s_18,1) <= infinity
IloRange boxCut17,2 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 - 1.0*s_18,2) <= infinity
IloRange boxCut17,3 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 - 1.0*s_18,3) <= infinity
IloRange boxCut17,4 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 - 1.0*s_18,4) <= infinity
IloRange boxCut17,5 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 - 1.0*s_18,5) <= infinity
IloRange boxCut17,6 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 - 1.0*s_18,6) <= infinity
IloRange boxCut17,7 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 - 1.0*s_18,7) <= infinity
IloRange boxCut17,8 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 - 1.0*s_18,8) <= infinity
IloRange boxCut17,9 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 - 1.0*s_18,9) <= infinity
IloRange boxCut17,10 : 0.0 <= (1.0*s_17,0 + 1.0*s_17,1 + 1.0*s_17,2 + 1.0*s_17,3 + 1.0*s_17,4 + 1.0*s_17,5 + 1.0*s_17,6 + 1.0*s_17,7 + 1.0*s_17,8 + 1.0*s_17,9 + 1.0*s_17,10 - 1.0*s_18,10) <= infinity
IloRange bagCut_0,1 : 0.0 <= (1.0*n_0 - 1.0*n_1) <= infinity
IloRange bagCut_1,2 : 0.0 <= (1.0*n_1 - 1.0*n_2) <= infinity
IloRange bagCut_2,3 : 0.0 <= (1.0*n_2 - 1.0*n_3) <= infinity
IloRange bagCut_3,4 : 0.0 <= (1.0*n_3 - 1.0*n_4) <= infinity
IloRange bagCut_5,6 : 0.0 <= (1.0*n_5 - 1.0*n_6) <= infinity
IloRange bagCut_6,7 : 0.0 <= (1.0*n_6 - 1.0*n_7) <= infinity
IloRange bagCut_7,8 : 0.0 <= (1.0*n_7 - 1.0*n_8) <= infinity
IloRange bagCut_9,10 : 0.0 <= (1.0*n_9 - 1.0*n_10) <= infinity

}
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de2ae
CPXPARAM_Threads                                 1
!!Thread UP
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 1 time.
MIP Presolve eliminated 5 rows and 0 columns.
MIP Presolve modified 455 coefficients.
Reduced MIP has 89 rows, 231 columns, and 792 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.81 ticks)
print n
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
将物品  [10]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=9, id=0, x=0, y=0, z=0, lx=180, ly=30, lz=120}
needToSolve=true needToAddCut=false
将物品  [11]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=10, id=0, x=0, y=0, z=0, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [1, 4, 14, 16]  放进袋子  2  袋子种类为0              patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=1, id=0, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=4, id=0, x=130, y=0, z=60, lx=120, ly=170, lz=60}
Position{type=12, id=0, x=0, y=0, z=90, lx=120, ly=150, lz=30}
Position{type=13, id=0, x=0, y=170, z=0, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
将物品  [12, 19]  放进袋子  3  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=10, id=0, x=0, y=0, z=0, lx=50, ly=100, lz=80}
Position{type=14, id=0, x=50, y=100, z=0, lx=150, ly=60, lz=150}
needToSolve=true needToAddCut=false
将物品  [3, 7]  放进袋子  4  袋子种类为0              patten : [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=3, id=0, x=0, y=0, z=30, lx=70, ly=170, lz=40}
Position{type=6, id=0, x=70, y=0, z=0, lx=160, ly=200, lz=30}
needToSolve=true needToAddCut=false
将物品  [0]  放进袋子  5  袋子种类为1              patten : [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=240, ly=20, lz=190}
needToSolve=true needToAddCut=false
将物品  [5, 8, 13, 17]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=4, id=0, x=0, y=40, z=0, lx=60, ly=120, lz=170}
Position{type=7, id=0, x=70, y=200, z=40, lx=180, ly=20, lz=150}
Position{type=11, id=0, x=60, y=0, z=0, lx=180, ly=220, lz=40}
Position{type=13, id=0, x=60, y=0, z=40, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
将物品  [6, 9]  放进袋子  7  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=5, id=0, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=8, id=0, x=190, y=0, z=0, lx=70, ly=170, lz=40}
needToSolve=true needToAddCut=false
将物品  [15]  放进袋子  8  袋子种类为1              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=12, id=0, x=0, y=0, z=0, lx=120, ly=30, lz=150}
needToSolve=true needToAddCut=false
将物品  [18]  放进袋子  9  袋子种类为2              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=13, id=0, x=0, y=0, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
将物品  [2]  放进袋子  10  袋子种类为2              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=2, id=0, x=0, y=0, z=0, lx=190, ly=130, lz=250}
needToSolve=true needToAddCut=false
Found incumbent of value 6.800000 after 0.06 sec. (1.62 ticks)
Probing time = 0.00 sec. (0.50 ticks)
Tried aggregator 1 time.
Reduced MIP has 89 rows, 231 columns, and 792 nonzeros.
Reduced MIP has 231 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.38 ticks)
Probing time = 0.00 sec. (0.49 ticks)
Clique table members: 495.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time = 0.00 sec. (0.77 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                            6.8000        0.0000           100.00%
      0     0        1.3990     2        6.8000        1.3990      152   79.43%
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]
将物品  [2, 3, 6, 7, 8, 9, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 2]
装不完，装了6
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_6,9 - 6.0*n_9) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18]  放进袋子  10  袋子种类为2              patten : [1, 1, 0, 0, 2, 0, 0, 0, 0, 1, 2, 1, 2, 3, 0, 2]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=4, id=4, x=0, y=170, z=0, lx=120, ly=170, lz=60}
Position{type=4, id=5, x=120, y=170, z=0, lx=120, ly=170, lz=60}
Position{type=0, id=0, x=0, y=0, z=100, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=190, z=60, lx=180, ly=120, lz=30}
Position{type=12, id=14, x=0, y=190, z=90, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=120, y=190, z=90, lx=120, ly=150, lz=30}
Position{type=13, id=16, x=0, y=340, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=90, y=340, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=180, y=340, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=240, y=170, z=0, lx=50, ly=80, lz=100}
Position{type=10, id=12, x=240, y=250, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0]
将物品  [2, 6, 7, 8, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=250, ly=130, lz=190}
Position{type=5, id=6, x=0, y=130, z=0, lx=250, ly=130, lz=190}
Position{type=14, id=19, x=250, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=6, id=7, x=0, y=260, z=0, lx=200, ly=30, lz=160}
Position{type=7, id=8, x=250, y=150, z=0, lx=20, ly=150, lz=180}
needToSolve=true needToAddCut=false
将物品  [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]  放进袋子  10  袋子种类为2              patten : [1, 1, 0, 1, 2, 0, 0, 0, 1, 1, 2, 1, 2, 3, 0, 2]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=180, ly=220, lz=40}
Position{type=4, id=4, x=0, y=170, z=0, lx=120, ly=170, lz=60}
Position{type=4, id=5, x=120, y=170, z=0, lx=120, ly=170, lz=60}
Position{type=0, id=0, x=0, y=0, z=100, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=220, z=60, lx=180, ly=120, lz=30}
Position{type=12, id=14, x=0, y=220, z=90, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=0, y=340, z=0, lx=150, ly=30, lz=120}
Position{type=3, id=3, x=180, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=180, y=170, z=60, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=250, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=250, y=120, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=150, y=340, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=250, y=210, z=0, lx=50, ly=80, lz=100}
Position{type=10, id=12, x=250, y=290, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
*     0+    0                            2.0000        1.3990            30.05%
      0     0        1.4970     2        2.0000       Cuts: 7      219   25.15%
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [6, 7, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_6,5 + 1.0*s_7,5 + 1.0*s_13,5 + 1.0*s_19,5 - 3.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 2, 0, 0, 1, 1, 1, 2, 0, 2, 3, 0, 2]
装不完，装了15
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 15.0*n_9) <= 0
needToSolve=true needToAddCut=true
      0     0        1.4970     2        2.0000      Cuts: 51      262   25.15%
      0     0        1.4970     2        2.0000       Cuts: 6      275   25.15%
      0     0        1.4970     2        2.0000       Cuts: 8      299   25.15%
      0     0        1.4970     2        2.0000       Cuts: 6      313   25.15%
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 10]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_8,0 + 1.0*s_10,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 13, 19]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=6, id=0, x=0, y=0, z=40, lx=160, ly=200, lz=30}
Position{type=11, id=0, x=0, y=0, z=0, lx=220, ly=180, lz=40}
Position{type=14, id=0, x=0, y=0, z=70, lx=150, ly=150, lz=60}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 2, 3, 0, 2]
装不完，装了12
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 12.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [1, 4, 10, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_4,0 + 1.0*s_10,0 + 1.0*s_16,0 + 1.0*s_17,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 8, 13, 18]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=6, id=0, x=40, y=0, z=40, lx=160, ly=200, lz=30}
Position{type=7, id=0, x=90, y=0, z=70, lx=150, ly=180, lz=20}
Position{type=11, id=0, x=0, y=0, z=0, lx=220, ly=180, lz=40}
Position{type=13, id=0, x=0, y=0, z=40, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 14, 15, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 2, 0, 1, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 10, 13, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 3, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_13,0 + 1.0*s_19,0 + 1.0*s_4,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_10,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 7, 8]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=4, id=0, x=0, y=0, z=0, lx=120, ly=170, lz=60}
Position{type=6, id=0, x=0, y=0, z=60, lx=160, ly=200, lz=30}
Position{type=7, id=0, x=0, y=0, z=90, lx=150, ly=180, lz=20}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [4, 8, 14, 15, 16, 17, 18, 19]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 3, 1, 0]
haha
Position{type=14, id=19, x=0, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=4, id=4, x=150, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=7, id=8, x=0, y=0, z=60, lx=150, ly=180, lz=20}
Position{type=12, id=14, x=210, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=12, id=15, x=0, y=180, z=0, lx=150, ly=30, lz=120}
Position{type=13, id=16, x=0, y=0, z=80, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=0, y=90, z=80, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=150, y=170, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
将物品  [7, 10, 13]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=6, id=0, x=0, y=0, z=0, lx=160, ly=200, lz=30}
Position{type=9, id=0, x=180, y=0, z=0, lx=120, ly=180, lz=30}
Position{type=11, id=0, x=0, y=0, z=30, lx=220, ly=180, lz=40}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 5, 6, 9, 11, 12]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 5, 10, 13, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_10,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_5,0 - 6.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [1, 8, 19]  放进袋子  1  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,1 + 1.0*s_8,1 + 1.0*s_19,1 - 2.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 6, 7, 9, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 2, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 5, 8, 13, 14, 15, 16]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_5,0 + 1.0*s_8,0 + 1.0*s_14,0 + 1.0*s_15,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 10, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=6, id=0, x=0, y=0, z=0, lx=160, ly=200, lz=30}
Position{type=9, id=0, x=180, y=0, z=40, lx=120, ly=180, lz=30}
Position{type=13, id=0, x=160, y=0, z=0, lx=120, ly=90, lz=40}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 9, 11, 12, 18, 19]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 5, 13, 14, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 3, 0, 0]
装不完，装了6
addNoGoodCut:  (1.0*s_13,0 + 1.0*s_4,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_5,0 - 6.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [7, 10, 15]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=6, id=0, x=0, y=0, z=0, lx=160, ly=200, lz=30}
Position{type=9, id=0, x=190, y=0, z=30, lx=120, ly=180, lz=30}
Position{type=12, id=0, x=160, y=0, z=0, lx=150, ly=120, lz=30}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 6, 8, 9, 11, 12, 19]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 1, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_19,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
      0     2        1.4970    11        2.0000        1.4970      313   25.15%
Elapsed time = 2.23 sec. (14.45 ticks, tree = 0.01 MB, solutions = 2)
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 14, 16, 17, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_19,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_7,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 5, 8, 9, 10, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 2, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]
装不完，装了7
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_18,1 + 1.0*s_0,1 - 7.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 6, 11, 12, 13, 15]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2]
装不完，装了5
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_15,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 5.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
将物品  [13, 14, 16, 17, 19]  放进袋子  0  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0]
haha
Position{type=11, id=13, x=0, y=0, z=0, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=0, z=40, lx=150, ly=150, lz=60}
Position{type=12, id=14, x=0, y=0, z=100, lx=150, ly=120, lz=30}
Position{type=13, id=16, x=150, y=0, z=40, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=190, y=0, z=40, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 3, 4, 5, 10, 11, 15, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0]
装不完，装了7
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_10,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_0,1 - 7.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [1, 2, 6, 7, 8, 9, 12]  放进袋子  9  袋子种类为2              patten : [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 2]
装不完，装了6
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_9,9 + 1.0*s_12,9 + 1.0*s_6,9 - 6.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 14, 16, 17, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_19,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_17,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 8, 9, 10, 11, 15, 18]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0]
装不完，装了7
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_5,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_9,1 + 1.0*s_18,1 + 1.0*s_11,1 - 7.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 6, 7, 12, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=250, ly=130, lz=190}
Position{type=5, id=6, x=0, y=130, z=0, lx=250, ly=130, lz=190}
Position{type=11, id=13, x=250, y=0, z=0, lx=40, ly=220, lz=180}
Position{type=6, id=7, x=290, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=0, id=0, x=0, y=260, z=0, lx=240, ly=20, lz=190}
Position{type=10, id=12, x=250, y=220, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 9, 16, 17, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_19,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_7,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [11, 12, 14, 15, 18]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 1, 0, 0]
haha
Position{type=12, id=14, x=0, y=0, z=0, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=0, y=0, z=30, lx=150, ly=120, lz=30}
Position{type=13, id=18, x=0, y=0, z=60, lx=90, ly=120, lz=40}
Position{type=10, id=11, x=90, y=0, z=60, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=0, y=0, z=100, lx=80, ly=100, lz=50}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 8, 10, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 14, 15, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_19,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 9, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0]
haha
Position{type=3, id=3, x=0, y=0, z=0, lx=170, ly=70, lz=40}
Position{type=8, id=9, x=0, y=70, z=0, lx=170, ly=70, lz=40}
Position{type=13, id=16, x=0, y=140, z=0, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=120, y=140, z=0, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=170, y=0, z=0, lx=90, ly=120, lz=40}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 8, 10, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 1, 0, 1, 2, 1, 0, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 11, 14, 16, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_19,0 + 1.0*s_14,0 + 1.0*s_16,0 + 1.0*s_11,0 + 1.0*s_7,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 9, 10, 12, 15]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 1, 2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_5,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 6, 8, 13, 17, 18]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 2, 0, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_0,6 + 1.0*s_8,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_13,6 - 5.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]
将物品  [1, 7, 11, 16, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_19,0 + 1.0*s_16,0 + 1.0*s_11,0 + 1.0*s_7,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 4, 5, 9, 10, 12]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 0, 2, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_9,5 + 1.0*s_12,5 + 1.0*s_5,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 6, 8, 13, 14, 15, 17, 18]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 2, 2, 0, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_8,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_3,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_13,6 - 7.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 16, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_16,0 + 1.0*s_19,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 9, 10]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_5,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 8, 11, 12, 13, 14, 15, 17, 18]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 1, 2, 2, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_8,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 + 1.0*s_13,6 - 8.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 11, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_11,0 + 1.0*s_19,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 10, 12]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 1, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_0,5 + 1.0*s_3,5 + 1.0*s_12,5 + 1.0*s_5,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 8, 9, 13, 14, 15, 16, 17, 18]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 2, 3, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_8,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_9,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_13,6 - 8.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 14, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_14,0 + 1.0*s_19,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 10, 15]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_0,5 + 1.0*s_10,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [6, 8, 9, 11, 12, 13, 16, 17, 18]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 2, 1, 0, 3, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_8,6 + 1.0*s_9,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_11,6 + 1.0*s_12,6 + 1.0*s_13,6 - 8.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [1, 7, 19]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_19,0 - 2.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 10, 13]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_10,5 + 1.0*s_13,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 2, 0, 2, 3, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_0,6 + 1.0*s_8,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 + 1.0*s_9,6 - 8.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 13, 14, 15, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_13,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 4]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=190, ly=240, lz=20}
Position{type=4, id=0, x=190, y=0, z=0, lx=120, ly=170, lz=60}
needToSolve=true needToAddCut=false
将物品  [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 1, 1, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 9, 11, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_9,0 + 1.0*s_11,0 + 1.0*s_7,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 14, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=9, id=0, x=0, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=12, id=0, x=150, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=13, id=0, x=30, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=0, x=180, y=0, z=0, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 8, 12, 15, 18, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 9, 13, 14]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_14,0 + 1.0*s_9,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [6]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_6,1 + 0.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 8, 10, 11, 12, 15, 16, 17, 18, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 0, 0, 1, 0, 1, 2, 0, 1, 3, 1, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=14, id=19, x=190, y=0, z=0, lx=150, ly=60, lz=150}
Position{type=4, id=4, x=190, y=60, z=0, lx=120, ly=170, lz=60}
Position{type=4, id=5, x=190, y=60, z=60, lx=120, ly=170, lz=60}
Position{type=0, id=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=190, y=60, z=120, lx=120, ly=180, lz=30}
Position{type=7, id=8, x=0, y=250, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=15, x=190, y=230, z=0, lx=150, ly=30, lz=120}
Position{type=3, id=3, x=310, y=60, z=0, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=180, y=260, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=0, y=270, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=90, y=270, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=270, y=260, z=0, lx=80, ly=50, lz=100}
Position{type=10, id=12, x=310, y=60, z=70, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 7, 14, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 3, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_14,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 6, 8, 11, 12, 13, 15]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_13,5 + 1.0*s_8,5 + 1.0*s_15,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_4,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 9, 10, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_10,6 + 1.0*s_3,6 + 1.0*s_9,6 + 1.0*s_5,6 - 5.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 7, 8, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_0,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_7,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 11, 12, 14, 15]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=4, id=4, x=250, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=4, id=5, x=0, y=190, z=0, lx=170, ly=60, lz=120}
Position{type=12, id=14, x=0, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=12, id=15, x=150, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=10, id=11, x=170, y=190, z=0, lx=80, ly=50, lz=100}
Position{type=10, id=12, x=250, y=170, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [2, 3, 9, 10, 13, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_10,6 + 1.0*s_3,6 + 1.0*s_9,6 + 1.0*s_19,6 - 5.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 7, 8, 10, 16]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_16,0 + 1.0*s_10,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 6, 11, 12, 14, 15, 17, 18]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 2, 2, 0, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=4, id=4, x=190, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=12, id=14, x=0, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=12, id=15, x=150, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=13, id=17, x=190, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=190, y=210, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=250, y=0, z=0, lx=50, ly=80, lz=100}
Position{type=10, id=12, x=250, y=80, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [2, 3, 5, 9, 13, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_3,6 + 1.0*s_9,6 + 1.0*s_19,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, -0.0, -0.0]
将物品  [0, 1, 3, 7, 8, 10]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_0,0 + 1.0*s_3,0 + 1.0*s_10,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 6, 11, 12, 14, 15, 16, 17, 18]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 2, 3, 0, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=4, id=4, x=190, y=0, z=0, lx=120, ly=170, lz=60}
Position{type=12, id=14, x=190, y=0, z=60, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=0, y=250, z=0, lx=150, ly=30, lz=120}
Position{type=13, id=16, x=190, y=170, z=0, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=190, y=0, z=90, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=190, y=90, z=90, lx=120, ly=90, lz=40}
Position{type=10, id=11, x=190, y=180, z=40, lx=100, ly=50, lz=80}
Position{type=10, id=12, x=190, y=230, z=40, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [2, 5, 9, 13, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]
装不完，装了3
addNoGoodCut:  (1.0*s_2,6 + 1.0*s_13,6 + 1.0*s_9,6 + 1.0*s_19,6 - 3.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 11, 12, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_11,0 + 1.0*s_12,0 + 1.0*s_7,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 14, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 8, 9, 15, 18, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 11, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_3,0 + 1.0*s_11,0 + 1.0*s_7,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [10, 14, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0]
needToSolve=false needToAddCut=false
将物品  [0, 2, 4, 5, 6, 8, 9, 12, 15, 18, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, 0.0, 0.0, 0.0, -0.0]
将物品  [1, 3, 7, 13, 16]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_16,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 4, 5, 6, 8, 11, 17, 18]  放进袋子  5  袋子种类为1              patten : [1, 0, 0, 0, 2, 1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_0,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 9, 10, 12, 14, 15, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 0, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,6 + 1.0*s_19,6 + 1.0*s_10,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_12,6 + 1.0*s_9,6 - 6.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 7, 13, 14]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_14,0 + 1.0*s_3,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 4, 8, 10, 11, 15, 16, 17, 18]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 3, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_10,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_8,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 5, 6, 9, 12, 19]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_19,6 + 1.0*s_0,6 + 1.0*s_9,6 + 1.0*s_12,6 + 1.0*s_5,6 - 5.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 1.0, -0.0, 0.0, -0.0, -0.0]
将物品  [1, 3, 7, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_7,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 4, 8, 11, 12, 14, 15, 16, 17, 18]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 2, 3, 0, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_8,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 5, 6, 9, 10, 19]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_19,6 + 1.0*s_0,6 + 1.0*s_10,6 + 1.0*s_5,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [1, 7, 13, 14, 15]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_14,0 + 1.0*s_15,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 9, 10, 11, 12, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 3, 0, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=0, z=20, lx=180, ly=120, lz=30}
Position{type=7, id=8, x=0, y=0, z=50, lx=180, ly=150, lz=20}
Position{type=3, id=3, x=0, y=0, z=70, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=70, y=0, z=70, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=140, y=0, z=70, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=140, y=90, z=70, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=0, y=170, z=20, lx=120, ly=40, lz=90}
Position{type=10, id=11, x=180, y=0, z=20, lx=80, ly=100, lz=50}
Position{type=10, id=12, x=180, y=100, z=20, lx=80, ly=100, lz=50}
needToSolve=true needToAddCut=false
将物品  [6]  放进袋子  2  袋子种类为0              patten : [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
addNoGoodCut:  (1.0*s_6,2 + 0.0*n_2) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 4, 5, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_5,5 + 1.0*s_19,5 - 3.0*n_5) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, 1.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0]
将物品  [1, 7, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_1,0 + 1.0*s_7,0 + 1.0*s_13,0 - 2.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 9, 10, 11, 12, 14, 16, 17, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 1, 3, 0, 0]
装不完，装了10
addNoGoodCut:  (1.0*s_0,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_11,1 + 1.0*s_17,1 + 1.0*s_18,1 + 1.0*s_12,1 - 10.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2]  放进袋子  2  袋子种类为0              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_2,2 + 0.0*n_2) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]
装不完，装了3
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_15,5 + 1.0*s_4,5 - 3.0*n_5) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [0, 1, 9, 10, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
装不完，装了3
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_0,0 + 1.0*s_10,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 8, 11, 12, 14, 16, 17, 18]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_4,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_8,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [5, 6, 7, 15, 19]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_19,6 + 1.0*s_7,6 + 1.0*s_15,6 + 1.0*s_5,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 9, 10, 11, 12, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_10,0 + 1.0*s_9,0 + 1.0*s_11,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 8, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 3, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 7.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 5, 6, 7]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_7,6 + 1.0*s_0,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 8, 10, 11, 12, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_11,0 + 1.0*s_12,0 + 1.0*s_13,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 7, 9, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 3, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_9,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 5, 6]  放进袋子  6  袋子种类为1              patten : [1, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_0,6 + 1.0*s_3,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 8, 10, 11, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_10,0 + 1.0*s_8,0 + 1.0*s_11,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 9, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 3, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 5, 6, 7, 12]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 1, 2, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_4,6 + 1.0*s_7,6 + 1.0*s_3,6 + 1.0*s_12,6 + 1.0*s_5,6 - 5.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 10, 11, 12, 13, 14]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 1, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_10,0 + 1.0*s_14,0 + 1.0*s_11,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 9, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_0,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 - 7.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 7, 8]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_7,6 + 1.0*s_8,6 - 4.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 0.0, -0.0]
将物品  [1, 10, 11, 12, 13]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_10,0 + 1.0*s_11,0 + 1.0*s_12,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 7, 8, 9, 19]  放进袋子  5  袋子种类为1              patten : [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_8,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 5, 6, 14, 15, 16, 17, 18]  放进袋子  6  袋子种类为1              patten : [0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 2, 3, 0, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_6,6 + 1.0*s_4,6 + 1.0*s_5,6 + 1.0*s_14,6 + 1.0*s_15,6 + 1.0*s_16,6 + 1.0*s_17,6 + 1.0*s_18,6 - 7.0*n_6) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 11, 13, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 3, 0, 0]
装不完，装了5
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_11,0 + 1.0*s_13,0 - 5.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 8, 9, 10, 12, 14, 15]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 2, 0, 0, 0]
装不完，装了8
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_12,1 + 1.0*s_0,1 - 8.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=5, id=6, x=130, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=14, id=19, x=260, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=4, id=5, x=260, y=150, z=0, lx=60, ly=120, lz=170}
Position{type=6, id=7, x=0, y=250, z=0, lx=200, ly=30, lz=160}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 11, 13, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_11,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 8, 9, 10, 12, 14, 15, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1, 0, 0]
haha
Position{type=0, id=0, x=0, y=0, z=0, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=0, z=20, lx=180, ly=120, lz=30}
Position{type=7, id=8, x=0, y=0, z=50, lx=180, ly=150, lz=20}
Position{type=12, id=14, x=0, y=0, z=70, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=120, y=0, z=70, lx=120, ly=150, lz=30}
Position{type=3, id=3, x=0, y=150, z=20, lx=170, ly=70, lz=40}
Position{type=8, id=9, x=0, y=150, z=60, lx=170, ly=70, lz=40}
Position{type=13, id=18, x=180, y=0, z=20, lx=90, ly=120, lz=40}
Position{type=10, id=12, x=170, y=150, z=20, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [2, 4, 5, 6, 7, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]
装不完，装了5
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_6,9 - 5.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13, 16, 17]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_0,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 9, 10, 11, 12, 14, 15, 18]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 2, 1, 0, 0]
装不完，装了9
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 - 9.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 9, 13, 16, 17]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_9,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 3, 4, 8, 10, 11, 12, 14, 15, 18]  放进袋子  1  袋子种类为0              patten : [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 2, 0, 2, 1, 0, 0]
装不完，装了9
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_18,1 + 1.0*s_11,1 + 1.0*s_12,1 + 1.0*s_0,1 - 9.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 13, 16, 17, 18]  放进袋子  0  袋子种类为0              patten : [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0]
装不完，装了4
addNoGoodCut:  (1.0*s_1,0 + 1.0*s_16,0 + 1.0*s_17,0 + 1.0*s_18,0 + 1.0*s_13,0 - 4.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 9, 10, 11, 12, 14, 15]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 2, 0, 0, 0]
haha
Position{type=4, id=4, x=0, y=0, z=0, lx=170, ly=60, lz=120}
Position{type=9, id=10, x=0, y=60, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=0, z=120, lx=180, ly=150, lz=20}
Position{type=12, id=14, x=0, y=90, z=0, lx=150, ly=30, lz=120}
Position{type=12, id=15, x=0, y=120, z=0, lx=150, ly=30, lz=120}
Position{type=3, id=3, x=0, y=150, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=0, y=150, z=70, lx=170, ly=40, lz=70}
Position{type=10, id=11, x=170, y=90, z=0, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=180, y=0, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [0, 2, 5, 6, 7, 19]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]
装不完，装了5
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_6,9 - 5.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13, 16]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_16,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 9, 10, 11, 12, 14, 15, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 2, 1, 0, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_10,1 + 1.0*s_11,1 + 1.0*s_12,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_17,1 - 9.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 5, 6, 7, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=5, id=6, x=190, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=14, id=19, x=0, y=0, z=130, lx=150, ly=150, lz=60}
Position{type=4, id=5, x=0, y=150, z=130, lx=170, ly=120, lz=60}
Position{type=6, id=7, x=0, y=270, z=0, lx=200, ly=30, lz=160}
Position{type=13, id=18, x=200, y=250, z=0, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_3,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [4, 8, 9, 10, 11, 12, 14, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 2, 0, 2, 2, 0, 0]
装不完，装了9
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_11,1 + 1.0*s_12,1 - 9.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 11, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_11,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 9, 10, 12, 14, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 2, 2, 0, 0]
装不完，装了9
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_12,1 - 9.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Optimal           Position{type=0, id=0, x=0, y=0, z=0, lx=240, ly=190, lz=20}
Position{type=1, id=0, x=0, y=0, z=60, lx=250, ly=170, lz=60}
Position{type=11, id=0, x=30, y=30, z=20, lx=220, ly=180, lz=40}
needToSolve=true needToAddCut=false
将物品  [3, 4, 8, 9, 10, 11, 12, 14, 15, 16]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 2, 1, 0, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_10,1 + 1.0*s_11,1 + 1.0*s_12,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_16,1 - 9.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 5, 6, 7, 17, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 1, 2]
装不完，装了6
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_6,9 - 6.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 9, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_9,0 + 1.0*s_13,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 10, 11, 12, 14, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 2, 0, 2, 2, 0, 0]
装不完，装了9
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_14,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_11,1 + 1.0*s_12,1 - 9.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13, 14]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_0,0 + 1.0*s_1,0 + 1.0*s_13,0 + 1.0*s_14,0 - 3.0*n_0) <= 0
needToSolve=true needToAddCut=true
将物品  [3, 4, 8, 9, 10, 11, 12, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 1, 2, 0, 0]
装不完，装了8
addNoGoodCut:  (1.0*s_4,1 + 1.0*s_10,1 + 1.0*s_8,1 + 1.0*s_15,1 + 1.0*s_3,1 + 1.0*s_9,1 + 1.0*s_16,1 + 1.0*s_17,1 + 1.0*s_11,1 - 8.0*n_1) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2]
needToSolve=false needToAddCut=false
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 8, 9, 10, 11, 12, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 0, 2, 0, 0]
haha
Position{type=4, id=4, x=0, y=0, z=0, lx=120, ly=170, lz=60}
Position{type=9, id=10, x=0, y=0, z=60, lx=120, ly=180, lz=30}
Position{type=7, id=8, x=0, y=0, z=90, lx=150, ly=180, lz=20}
Position{type=3, id=3, x=120, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=8, id=9, x=0, y=0, z=110, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=70, y=0, z=110, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=70, y=90, z=110, lx=120, ly=90, lz=40}
Position{type=10, id=11, x=160, y=0, z=0, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=160, y=100, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [2, 5, 6, 7, 14, 15, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 2, 1, 1, 2]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_18,9 + 1.0*s_6,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 8, 9, 10, 11, 12, 14, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 0, 1, 2, 0, 0]
addNoGoodCut:  (1.0*s_3,1 + 1.0*s_4,1 + 1.0*s_8,1 + 1.0*s_9,1 + 1.0*s_10,1 + 1.0*s_11,1 + 1.0*s_12,1 + 1.0*s_14,1 + 1.0*s_16,1 + 1.0*s_17,1 - 9.0*n_1) <= 0
needToSolve=false needToAddCut=true
将物品  [2, 5, 6, 7, 15, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 2]
装不完，装了6
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_19,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_15,9 + 1.0*s_18,9 + 1.0*s_6,9 - 6.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[1.0, 1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 13]  放进袋子  0  袋子种类为0              patten : [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
needToSolve=false needToAddCut=false
将物品  [3, 4, 8, 9, 11, 12, 14, 15, 16, 17]  放进袋子  1  袋子种类为0              patten : [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 2, 0, 2, 2, 0, 0]
haha
Position{type=4, id=4, x=0, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=7, id=8, x=60, y=0, z=0, lx=180, ly=150, lz=20}
Position{type=12, id=14, x=60, y=0, z=20, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=60, y=0, z=50, lx=120, ly=150, lz=30}
Position{type=3, id=3, x=60, y=0, z=80, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=130, y=0, z=80, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=200, y=0, z=20, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=0, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=90, y=150, z=0, lx=100, ly=50, lz=80}
Position{type=10, id=12, x=200, y=120, z=20, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [2, 5, 6, 7, 10, 18, 19]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=5, id=6, x=130, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=14, id=19, x=260, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=4, id=5, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=120, y=250, z=0, lx=200, ly=30, lz=160}
Position{type=9, id=10, x=120, y=280, z=0, lx=180, ly=30, lz=120}
Position{type=13, id=18, x=260, y=150, z=0, lx=40, ly=90, lz=120}
needToSolve=true needToAddCut=false
*   189    49      integral     0        1.8000        1.4970     1905   16.83%
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 10, 13, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 2, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=9, id=10, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=0, z=130, lx=180, ly=150, lz=20}
Position{type=12, id=14, x=150, y=180, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=150, y=210, z=0, lx=120, ly=30, lz=150}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 9, 11, 12, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 10, 13, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 2, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_10,5 + 1.0*s_7,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 8, 10, 11, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 2, 0, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_8,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 9, 12, 13, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1, 1, 0, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=170, ly=250, lz=60}
Position{type=11, id=13, x=0, y=250, z=0, lx=220, ly=40, lz=180}
Position{type=4, id=4, x=220, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=4, id=5, x=220, y=170, z=0, lx=60, ly=120, lz=170}
Position{type=0, id=0, x=190, y=0, z=0, lx=20, ly=240, lz=190}
Position{type=3, id=3, x=220, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=8, id=9, x=260, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=280, y=170, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=280, y=170, z=90, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=280, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=90, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 8, 11, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_11,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 0, 1, 1, 1, 1, 0, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=190, z=0, lx=220, ly=40, lz=180}
Position{type=4, id=4, x=0, y=230, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=230, z=0, lx=120, ly=60, lz=170}
Position{type=0, id=0, x=0, y=290, z=0, lx=240, ly=20, lz=190}
Position{type=9, id=10, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=3, id=3, x=240, y=230, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=250, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=220, y=190, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=280, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=280, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=230, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 8, 10, 11, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]
装不完，装了6
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_11,5 + 1.0*s_8,5 - 6.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 9, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1, 1, 1, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=190, z=0, lx=220, ly=40, lz=180}
Position{type=4, id=4, x=0, y=230, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=230, z=0, lx=120, ly=60, lz=170}
Position{type=0, id=0, x=0, y=290, z=0, lx=240, ly=20, lz=190}
Position{type=12, id=15, x=250, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=3, id=3, x=240, y=230, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=250, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=220, y=190, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=280, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=280, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=230, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 8, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_11,5 + 1.0*s_13,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 0, 1, 1, 1, 0, 2, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=190, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=4, id=4, x=190, y=0, z=60, lx=170, ly=120, lz=60}
Position{type=4, id=5, x=190, y=120, z=60, lx=170, ly=120, lz=60}
Position{type=0, id=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=12, id=14, x=190, y=0, z=120, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=190, y=120, z=120, lx=150, ly=120, lz=30}
Position{type=3, id=3, x=180, y=250, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=180, y=250, z=70, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=0, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=180, y=290, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=270, y=290, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=12, x=90, y=280, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_11,5 + 1.0*s_13,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 1, 0, 2, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=190, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=4, id=4, x=190, y=0, z=60, lx=170, ly=120, lz=60}
Position{type=4, id=5, x=190, y=120, z=60, lx=170, ly=120, lz=60}
Position{type=0, id=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=180, y=250, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=14, x=190, y=0, z=120, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=190, y=120, z=120, lx=150, ly=120, lz=30}
Position{type=3, id=3, x=180, y=270, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=180, y=270, z=70, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=0, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=180, y=310, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=270, y=310, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=12, x=90, y=280, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 8, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_19,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 0, 1, 1, 2, 0, 2, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, id=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=4, id=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=0, id=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=0, z=150, lx=120, ly=180, lz=30}
Position{type=12, id=14, x=120, y=0, z=150, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=250, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=3, id=3, x=250, y=120, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=250, y=190, z=0, lx=40, ly=70, lz=170}
Position{type=13, id=16, x=280, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=290, y=120, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=290, y=120, z=90, lx=40, ly=120, lz=90}
Position{type=10, id=11, x=240, y=260, z=0, lx=80, ly=50, lz=100}
Position{type=10, id=12, x=280, y=0, z=90, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 7, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
子问题建模完毕-->求解完毕-->子问题状态=Infeasible           addNoGoodCut:  (1.0*s_2,5 + 1.0*s_7,5 + 1.0*s_13,5 + 1.0*s_19,5 - 3.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 2, 0, 2, 3, 0, 2]
装不完，装了15
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 15.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 8, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_11,5 + 1.0*s_13,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 0, 2, 3, 0, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 14.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 11, 13, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_14,5 + 1.0*s_11,5 + 1.0*s_13,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=130, lz=190}
Position{type=1, id=1, x=0, y=130, z=0, lx=250, ly=60, lz=170}
Position{type=4, id=4, x=0, y=190, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=190, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=0, y=250, z=0, lx=200, ly=30, lz=160}
Position{type=0, id=0, x=0, y=280, z=0, lx=240, ly=20, lz=190}
Position{type=9, id=10, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=130, z=170, lx=180, ly=150, lz=20}
Position{type=12, id=15, x=250, y=180, z=0, lx=30, ly=120, lz=150}
Position{type=3, id=3, x=280, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=8, id=9, x=250, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=280, y=180, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=290, y=0, z=70, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=290, y=90, z=70, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=180, z=90, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 8, 13, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_19,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 0, 1, 1, 2, 0, 1, 3, 0, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 14.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 13, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_19,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 2, 0, 0, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=190, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=4, id=4, x=190, y=0, z=60, lx=170, ly=120, lz=60}
Position{type=4, id=5, x=190, y=120, z=60, lx=170, ly=120, lz=60}
Position{type=6, id=7, x=190, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=0, id=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=280, z=0, lx=180, ly=20, lz=150}
Position{type=3, id=3, x=180, y=250, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=180, y=290, z=0, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=180, y=250, z=70, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=180, y=250, z=110, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=0, y=300, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=300, y=240, z=70, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=90, y=300, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_11,5 + 1.0*s_13,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=130, ly=250, lz=190}
Position{type=1, id=1, x=130, y=0, z=0, lx=60, ly=250, lz=170}
Position{type=4, id=4, x=190, y=0, z=0, lx=60, ly=120, lz=170}
Position{type=4, id=5, x=190, y=120, z=0, lx=60, ly=120, lz=170}
Position{type=6, id=7, x=250, y=0, z=0, lx=30, ly=200, lz=160}
Position{type=0, id=0, x=0, y=250, z=0, lx=240, ly=20, lz=190}
Position{type=7, id=8, x=130, y=0, z=170, lx=150, ly=180, lz=20}
Position{type=12, id=14, x=0, y=270, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=120, y=270, z=0, lx=150, ly=30, lz=120}
Position{type=3, id=3, x=250, y=200, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=120, y=270, z=120, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=280, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=280, y=0, z=90, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=290, y=200, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=120, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 11, 13, 16, 17, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 + 1.0*s_19,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 1, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=130, lz=190}
Position{type=1, id=1, x=0, y=130, z=0, lx=250, ly=60, lz=170}
Position{type=4, id=4, x=0, y=190, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=190, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=0, y=250, z=0, lx=200, ly=30, lz=160}
Position{type=0, id=0, x=0, y=280, z=0, lx=240, ly=20, lz=190}
Position{type=9, id=10, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=130, z=170, lx=180, ly=150, lz=20}
Position{type=12, id=14, x=250, y=180, z=0, lx=30, ly=120, lz=150}
Position{type=12, id=15, x=280, y=0, z=0, lx=30, ly=120, lz=150}
Position{type=3, id=3, x=250, y=0, z=150, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=280, y=120, z=0, lx=40, ly=170, lz=70}
Position{type=10, id=12, x=280, y=120, z=70, lx=50, ly=100, lz=80}
Position{type=13, id=18, x=280, y=220, z=70, lx=40, ly=90, lz=120}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 11, 13, 16, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1]
装不完，装了4
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_13,5 + 1.0*s_16,5 + 1.0*s_11,5 + 1.0*s_19,5 - 4.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_6,9 + 1.0*s_1,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 14.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [2, 4, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]
装不完，装了3
addNoGoodCut:  (1.0*s_2,5 + 1.0*s_19,5 + 1.0*s_11,5 + 1.0*s_13,5 - 3.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 3, 0, 2]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=190, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=4, id=5, x=190, y=0, z=60, lx=170, ly=120, lz=60}
Position{type=6, id=7, x=190, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=0, id=0, x=0, y=0, z=130, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=0, y=250, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=180, y=250, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=14, x=190, y=120, z=60, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=190, y=120, z=90, lx=150, ly=120, lz=30}
Position{type=3, id=3, x=180, y=270, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=180, y=270, z=70, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=0, y=280, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=180, y=310, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=270, y=310, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=12, x=90, y=280, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 10, 11, 13, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 2, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 9, 12, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 1, 0, 1, 0, 0, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 10, 13, 14, 15, 16, 17, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 2, 2, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=9, id=10, x=0, y=0, z=130, lx=120, ly=180, lz=30}
Position{type=7, id=8, x=250, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=12, id=14, x=150, y=180, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=150, y=210, z=0, lx=120, ly=30, lz=150}
Position{type=13, id=16, x=120, y=0, z=130, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=120, y=90, z=130, lx=120, ly=90, lz=40}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 9, 11, 12, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_11,5 + 1.0*s_10,5 + 1.0*s_7,5 - 7.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 4, 7, 8, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=4, id=4, x=150, y=180, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=7, id=8, x=0, y=0, z=130, lx=150, ly=180, lz=20}
Position{type=3, id=3, x=150, y=0, z=130, lx=70, ly=170, lz=40}
Position{type=10, id=11, x=220, y=0, z=60, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 4, 8, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=170, z=0, lx=220, ly=40, lz=180}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=4, id=4, x=0, y=0, z=120, lx=120, ly=170, lz=60}
Position{type=7, id=8, x=0, y=210, z=0, lx=180, ly=20, lz=150}
Position{type=3, id=3, x=150, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=10, id=11, x=120, y=0, z=130, lx=100, ly=80, lz=50}
Position{type=9, id=10, x=220, y=0, z=60, lx=30, ly=180, lz=120}
needToSolve=true needToAddCut=false
将物品  [0, 2, 5, 6, 7, 9, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 11, 13, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 2, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 10, 12, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=170, z=0, lx=220, ly=40, lz=180}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=4, id=4, x=0, y=0, z=120, lx=120, ly=170, lz=60}
Position{type=7, id=8, x=0, y=210, z=0, lx=180, ly=20, lz=150}
Position{type=8, id=9, x=150, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=10, id=11, x=120, y=0, z=130, lx=100, ly=80, lz=50}
Position{type=9, id=10, x=220, y=0, z=60, lx=30, ly=180, lz=120}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 7, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=4, id=4, x=150, y=180, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=7, id=8, x=0, y=0, z=130, lx=150, ly=180, lz=20}
Position{type=8, id=9, x=150, y=0, z=130, lx=70, ly=170, lz=40}
Position{type=10, id=11, x=220, y=0, z=60, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 4, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=170, z=0, lx=220, ly=40, lz=180}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=4, id=4, x=0, y=0, z=120, lx=120, ly=170, lz=60}
Position{type=7, id=8, x=0, y=210, z=0, lx=180, ly=20, lz=150}
Position{type=3, id=3, x=150, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=8, id=9, x=190, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=9, id=10, x=230, y=0, z=60, lx=30, ly=180, lz=120}
Position{type=10, id=11, x=120, y=0, z=130, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [0, 2, 5, 6, 7, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_10,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 7, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 4, 8, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 4, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_10,5 + 1.0*s_11,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 4, 7, 8, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 6, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=4, id=4, x=150, y=180, z=0, lx=120, ly=60, lz=170}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=9, id=10, x=0, y=0, z=130, lx=120, ly=180, lz=30}
Position{type=8, id=9, x=120, y=0, z=130, lx=70, ly=170, lz=40}
Position{type=10, id=11, x=220, y=0, z=60, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 5, 6, 8, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 4, 7, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 5, 6, 8, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 8, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 8, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 4, 7, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]
装不完，装了7
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_0,5 - 7.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=0, z=100, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=180, z=0, lx=200, ly=30, lz=160}
Position{type=9, id=10, x=250, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=210, z=0, lx=180, ly=20, lz=150}
Position{type=8, id=9, x=150, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=10, id=11, x=200, y=180, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了11
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 11.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 4, 5, 6, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 8, 9, 10, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 7, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 4, 5, 6, 8, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 2, 1, 0, 1, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 7, 8, 9, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=100, lx=200, ly=160, lz=30}
Position{type=0, id=0, x=0, y=0, z=150, lx=190, ly=240, lz=20}
Position{type=7, id=8, x=0, y=0, z=130, lx=180, ly=150, lz=20}
Position{type=3, id=3, x=200, y=0, z=100, lx=40, ly=170, lz=70}
Position{type=10, id=11, x=150, y=180, z=0, lx=80, ly=50, lz=100}
Position{type=8, id=9, x=230, y=170, z=0, lx=40, ly=70, lz=170}
needToSolve=true needToAddCut=false
将物品  [2, 4, 5, 6, 10, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 2, 1, 0, 0, 0, 1, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 7, 8, 9, 10, 11, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 1, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, 1.0, -0.0]
将物品  [0, 1, 3, 7, 8, 9, 10, 13, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_19,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 2, 1, 0, 0, 0, 0, 2, 0, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 8, 9, 10, 11, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=4, id=4, x=150, y=0, z=60, lx=120, ly=170, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=200, ly=160, lz=30}
Position{type=0, id=0, x=0, y=0, z=150, lx=190, ly=240, lz=20}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=200, z=0, lx=180, ly=20, lz=150}
Position{type=8, id=9, x=200, y=0, z=120, lx=70, ly=170, lz=40}
Position{type=10, id=11, x=180, y=170, z=0, lx=80, ly=50, lz=100}
needToSolve=true needToAddCut=false
将物品  [2, 3, 5, 6, 12, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 4, 7, 8, 9, 10, 11, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_0,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 12, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 2, 3, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_5,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 8, 9, 11, 12, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 2, 0, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 4, 7, 9, 11, 12, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 2, 0, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 5, 6, 8, 10, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_5,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 4, 7, 9, 10, 11, 12, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 2, 0, 0, 0, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_9,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 5, 6, 8, 13, 14, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 2, 3, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 2, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 9, 11, 12]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_7,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_11,5 + 1.0*s_18,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 9, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 10, 13, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 2, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 7, 9, 11, 12]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 8, 9, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=60, lz=170}
Position{type=11, id=13, x=0, y=60, z=0, lx=220, ly=40, lz=180}
Position{type=14, id=19, x=0, y=100, z=0, lx=150, ly=60, lz=150}
Position{type=9, id=10, x=0, y=100, z=150, lx=180, ly=120, lz=30}
Position{type=7, id=8, x=0, y=160, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=14, x=0, y=180, z=0, lx=150, ly=30, lz=120}
Position{type=8, id=9, x=180, y=100, z=0, lx=40, ly=70, lz=170}
Position{type=13, id=16, x=150, y=180, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=220, y=60, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=220, y=60, z=90, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 7, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 2, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 7, 11, 12]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 9, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 7, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_7,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 8, 11, 12]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 9, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_19,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 4, 5, 6, 8, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 2, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=9, id=10, x=160, y=0, z=120, lx=120, ly=180, lz=30}
Position{type=12, id=14, x=150, y=0, z=60, lx=120, ly=150, lz=30}
Position{type=12, id=15, x=150, y=0, z=90, lx=120, ly=150, lz=30}
Position{type=3, id=3, x=0, y=170, z=0, lx=170, ly=40, lz=70}
Position{type=8, id=9, x=0, y=150, z=70, lx=170, ly=70, lz=40}
Position{type=13, id=16, x=170, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=170, y=210, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=0, y=220, z=0, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 8, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=200, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=14, x=0, y=220, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=120, y=220, z=0, lx=120, ly=30, lz=150}
Position{type=8, id=9, x=160, y=0, z=60, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=200, y=0, z=60, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=180, y=170, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=240, y=0, z=60, lx=40, ly=120, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 2, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=200, z=0, lx=180, ly=20, lz=150}
Position{type=12, id=14, x=0, y=220, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=120, y=220, z=0, lx=120, ly=30, lz=150}
Position{type=3, id=3, x=160, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=160, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=250, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=17, x=250, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=180, y=180, z=0, lx=90, ly=40, lz=120}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 7, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 2, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=14, id=19, x=170, y=0, z=0, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=60, lx=160, ly=200, lz=30}
Position{type=0, id=0, x=0, y=0, z=90, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=160, y=0, z=60, lx=120, ly=180, lz=30}
Position{type=12, id=14, x=170, y=150, z=0, lx=150, ly=120, lz=30}
Position{type=12, id=15, x=170, y=150, z=30, lx=150, ly=120, lz=30}
Position{type=8, id=9, x=0, y=250, z=0, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=0, y=200, z=70, lx=120, ly=90, lz=40}
Position{type=13, id=17, x=120, y=200, z=70, lx=120, ly=90, lz=40}
Position{type=13, id=18, x=240, y=180, z=70, lx=90, ly=120, lz=40}
needToSolve=true needToAddCut=false
将物品  [2, 3, 4, 5, 6, 8, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 3, 1, 1]
装不完，装了11
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_0,5 - 11.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 3, 7, 9, 10, 14, 15, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 2, 3, 1, 1]
装不完，装了11
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_15,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_0,5 - 11.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 4, 5, 6, 8, 11, 12, 13]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 0, 2, 1, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 7, 9, 10, 13, 14, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_14,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_19,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 8, 11, 12, 15]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_7,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 9, 10, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 8, 9, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 7, 10, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 4, 7, 8, 9, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_4,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_7,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 5, 6, 10, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 2, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 8, 9, 10, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=180, z=0, lx=150, ly=60, lz=150}
Position{type=9, id=10, x=0, y=0, z=100, lx=120, ly=180, lz=30}
Position{type=7, id=8, x=0, y=0, z=130, lx=150, ly=180, lz=20}
Position{type=8, id=9, x=150, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=220, y=0, z=60, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=150, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, id=18, x=150, y=220, z=0, lx=120, ly=40, lz=90}
Position{type=10, id=11, x=150, y=180, z=90, lx=100, ly=80, lz=50}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 7, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 1, 0, 0, 0, 1, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 9, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=170, ly=250, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=180, ly=220, lz=40}
Position{type=14, id=19, x=180, y=0, z=0, lx=60, ly=150, lz=150}
Position{type=6, id=7, x=0, y=0, z=100, lx=160, ly=200, lz=30}
Position{type=7, id=8, x=0, y=0, z=130, lx=180, ly=150, lz=20}
Position{type=8, id=9, x=0, y=220, z=60, lx=170, ly=40, lz=70}
Position{type=13, id=16, x=180, y=150, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=17, x=240, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=240, y=90, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=11, x=220, y=180, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [0, 2, 3, 4, 5, 6, 10, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [0, 1, 8, 9, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 3, 1, 1]
装不完，装了8
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_19,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_0,5 - 8.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [0, 0, 1, 1, 2, 1, 1, 0, 0, 1, 2, 0, 2, 0, 0, 2]
装不完，装了10
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 10.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 8, 9, 11, 12, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 2, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_8,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_19,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 7, 10, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 9, 10, 11, 12, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_10,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_12,5 + 1.0*s_19,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 3, 4, 5, 6, 7, 8, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 8, 9, 10, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=0, z=100, lx=150, ly=150, lz=60}
Position{type=9, id=10, x=220, y=0, z=60, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=0, z=160, lx=150, ly=180, lz=20}
Position{type=3, id=3, x=150, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=150, y=0, z=140, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=0, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, id=17, x=120, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, id=18, x=0, y=180, z=90, lx=120, ly=40, lz=90}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 7, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 1, 0, 0, 0, 2, 0, 2, 0, 0, 2]
装不完，装了9
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 9.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 8, 9, 10, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=0, y=0, z=60, lx=220, ly=180, lz=40}
Position{type=14, id=19, x=0, y=0, z=100, lx=150, ly=150, lz=60}
Position{type=9, id=10, x=220, y=0, z=60, lx=30, ly=180, lz=120}
Position{type=7, id=8, x=0, y=0, z=160, lx=150, ly=180, lz=20}
Position{type=3, id=3, x=150, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=150, y=0, z=140, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=0, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, id=17, x=120, y=180, z=0, lx=120, ly=40, lz=90}
Position{type=13, id=18, x=0, y=180, z=90, lx=120, ly=40, lz=90}
Position{type=10, id=11, x=120, y=180, z=90, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 7, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 8, 9, 10, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1]
装不完，装了9
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_8,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_19,5 - 9.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 4, 5, 6, 11, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_11,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 9, 10, 11, 13, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 3, 1, 1]
装不完，装了10
addNoGoodCut:  (1.0*s_1,5 + 1.0*s_13,5 + 1.0*s_7,5 + 1.0*s_10,5 + 1.0*s_3,5 + 1.0*s_9,5 + 1.0*s_16,5 + 1.0*s_17,5 + 1.0*s_18,5 + 1.0*s_11,5 + 1.0*s_19,5 - 10.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 2, 4, 5, 6, 8, 12, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 1, 0, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_8,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 8, 9, 10, 11, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=200, z=0, lx=180, ly=20, lz=150}
Position{type=3, id=3, x=160, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=160, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=0, y=220, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=90, y=220, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=180, y=170, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=11, x=220, y=170, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 12, 13, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_12,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 8, 9, 10, 11, 12, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=0, z=120, lx=150, ly=180, lz=20}
Position{type=3, id=3, x=150, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=150, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=0, y=200, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=90, y=200, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=180, y=200, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=11, x=220, y=0, z=60, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=220, y=100, z=60, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 7, 13, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 1, 2, 0, 0, 2]
装不完，装了8
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_7,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_6,9 - 8.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [1, 3, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19]  放进袋子  5  袋子种类为1              patten : [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 2, 0, 0, 3, 1, 1]
haha
Position{type=1, id=1, x=0, y=0, z=0, lx=250, ly=170, lz=60}
Position{type=14, id=19, x=0, y=0, z=60, lx=150, ly=150, lz=60}
Position{type=6, id=7, x=0, y=0, z=120, lx=160, ly=200, lz=30}
Position{type=9, id=10, x=0, y=170, z=0, lx=180, ly=30, lz=120}
Position{type=7, id=8, x=0, y=200, z=0, lx=180, ly=20, lz=150}
Position{type=3, id=3, x=160, y=0, z=60, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=160, y=0, z=100, lx=70, ly=170, lz=40}
Position{type=13, id=16, x=0, y=220, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=17, x=90, y=220, z=0, lx=90, ly=40, lz=120}
Position{type=13, id=18, x=180, y=170, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=11, x=220, y=170, z=0, lx=50, ly=80, lz=100}
Position{type=10, id=12, x=230, y=0, z=60, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 2, 4, 5, 6, 13, 14, 15]  放进袋子  9  袋子种类为2              patten : [1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 2]
装不完，装了7
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_14,9 + 1.0*s_15,9 + 1.0*s_6,9 - 7.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 6, 7, 8, 11, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_4,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 5, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 3, 0, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=170, ly=250, lz=60}
Position{type=11, id=13, x=0, y=250, z=0, lx=220, ly=40, lz=180}
Position{type=4, id=5, x=220, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=0, id=0, x=190, y=0, z=0, lx=20, ly=240, lz=190}
Position{type=9, id=10, x=220, y=170, z=0, lx=30, ly=120, lz=180}
Position{type=12, id=15, x=250, y=170, z=0, lx=30, ly=120, lz=150}
Position{type=3, id=3, x=220, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=8, id=9, x=260, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=280, y=170, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=280, y=170, z=90, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=280, y=0, z=0, lx=40, ly=90, lz=120}
Position{type=10, id=12, x=280, y=90, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [4, 6, 7, 11, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_14,5 + 1.0*s_11,5 + 1.0*s_4,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 0, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=250, ly=170, lz=60}
Position{type=11, id=13, x=250, y=0, z=0, lx=40, ly=220, lz=180}
Position{type=4, id=5, x=0, y=190, z=0, lx=120, ly=60, lz=170}
Position{type=0, id=0, x=0, y=250, z=0, lx=240, ly=20, lz=190}
Position{type=9, id=10, x=120, y=190, z=0, lx=120, ly=30, lz=180}
Position{type=7, id=8, x=0, y=270, z=0, lx=150, ly=20, lz=180}
Position{type=12, id=15, x=120, y=220, z=0, lx=120, ly=30, lz=150}
Position{type=3, id=3, x=240, y=220, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=290, y=0, z=0, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=290, y=0, z=70, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=290, y=120, z=70, lx=40, ly=90, lz=120}
Position{type=13, id=18, x=150, y=270, z=0, lx=90, ly=40, lz=120}
Position{type=10, id=12, x=280, y=220, z=0, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [6, 7, 8, 11, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
装不完，装了5
addNoGoodCut:  (1.0*s_6,5 + 1.0*s_19,5 + 1.0*s_7,5 + 1.0*s_8,5 + 1.0*s_14,5 + 1.0*s_11,5 - 5.0*n_5) <= 0
needToSolve=true needToAddCut=true
将物品  [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 3, 0, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=1, id=1, x=0, y=190, z=0, lx=250, ly=60, lz=170}
Position{type=11, id=13, x=250, y=0, z=0, lx=40, ly=220, lz=180}
Position{type=4, id=4, x=0, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=4, id=5, x=120, y=250, z=0, lx=120, ly=60, lz=170}
Position{type=0, id=0, x=0, y=0, z=130, lx=240, ly=190, lz=20}
Position{type=9, id=10, x=0, y=0, z=150, lx=120, ly=180, lz=30}
Position{type=12, id=15, x=120, y=0, z=150, lx=120, ly=150, lz=30}
Position{type=3, id=3, x=250, y=220, z=0, lx=40, ly=70, lz=170}
Position{type=8, id=9, x=290, y=0, z=0, lx=40, ly=70, lz=170}
Position{type=13, id=16, x=290, y=70, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=290, y=190, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=290, y=70, z=90, lx=40, ly=120, lz=90}
Position{type=10, id=12, x=290, y=190, z=90, lx=50, ly=100, lz=80}
needToSolve=true needToAddCut=false
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [6, 7, 11, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=14, id=19, x=0, y=190, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=130, lx=200, ly=160, lz=30}
Position{type=12, id=14, x=250, y=0, z=0, lx=30, ly=150, lz=120}
Position{type=10, id=11, x=150, y=190, z=0, lx=100, ly=50, lz=80}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 2, 0, 0, 1, 1, 1, 1, 1, 1, 3, 0, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_8,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_12,9 - 14.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [6, 7, 8, 14, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=14, id=19, x=0, y=190, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=130, lx=200, ly=160, lz=30}
Position{type=7, id=8, x=250, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=12, id=14, x=150, y=190, z=0, lx=120, ly=30, lz=150}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 2, 0, 0, 0, 1, 1, 2, 1, 1, 3, 0, 2]
装不完，装了14
addNoGoodCut:  (1.0*s_2,9 + 1.0*s_1,9 + 1.0*s_13,9 + 1.0*s_4,9 + 1.0*s_5,9 + 1.0*s_0,9 + 1.0*s_10,9 + 1.0*s_15,9 + 1.0*s_3,9 + 1.0*s_9,9 + 1.0*s_16,9 + 1.0*s_17,9 + 1.0*s_18,9 + 1.0*s_11,9 + 1.0*s_12,9 - 14.0*n_9) <= 0
needToSolve=true needToAddCut=true
print n
[0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0]
将物品  [6, 7, 8, 14, 15, 19]  放进袋子  5  袋子种类为1              patten : [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 1, 1]
haha
Position{type=5, id=6, x=0, y=0, z=0, lx=250, ly=190, lz=130}
Position{type=14, id=19, x=0, y=190, z=0, lx=150, ly=60, lz=150}
Position{type=6, id=7, x=0, y=0, z=130, lx=200, ly=160, lz=30}
Position{type=7, id=8, x=250, y=0, z=0, lx=20, ly=180, lz=150}
Position{type=12, id=14, x=150, y=190, z=0, lx=120, ly=30, lz=150}
Position{type=12, id=15, x=150, y=220, z=0, lx=120, ly=30, lz=150}
needToSolve=true needToAddCut=false
将物品  [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 16, 17, 18]  放进袋子  9  袋子种类为2              patten : [1, 1, 1, 1, 2, 0, 0, 0, 1, 1, 2, 1, 0, 3, 0, 2]
haha
Position{type=2, id=2, x=0, y=0, z=0, lx=190, ly=250, lz=130}
Position{type=1, id=1, x=0, y=0, z=130, lx=170, ly=250, lz=60}
Position{type=11, id=13, x=0, y=250, z=0, lx=220, ly=40, lz=180}
Position{type=4, id=4, x=220, y=0, z=0, lx=60, ly=170, lz=120}
Position{type=4, id=5, x=220, y=170, z=0, lx=60, ly=120, lz=170}
Position{type=0, id=0, x=0, y=290, z=0, lx=240, ly=20, lz=190}
Position{type=9, id=10, x=190, y=0, z=0, lx=30, ly=180, lz=120}
Position{type=3, id=3, x=170, y=0, z=130, lx=70, ly=170, lz=40}
Position{type=8, id=9, x=240, y=0, z=120, lx=40, ly=170, lz=70}
Position{type=13, id=16, x=280, y=0, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=17, x=280, y=120, z=0, lx=40, ly=120, lz=90}
Position{type=13, id=18, x=280, y=0, z=90, lx=40, ly=120, lz=90}
Position{type=10, id=11, x=280, y=120, z=90, lx=50, ly=100, lz=80}
Position{type=10, id=12, x=280, y=220, z=90, lx=50, ly=80, lz=100}
needToSolve=true needToAddCut=false
*   296     0      integral     0        1.7000        1.7000     2215    0.00%

Clique cuts applied:  25
Cover cuts applied:  12
Mixed integer rounding cuts applied:  1
Gomory fractional cuts applied:  1
User cuts applied:  251

Root node processing (before b&c):
  Real time             =    2.23 sec. (14.46 ticks)
Sequential b&c:
  Real time             =   14.63 sec. (75.10 ticks)
                          ------------
Total (root+branch&cut) =   16.86 sec. (89.56 ticks)
!!Thread down
1.7
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0]
[-0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
[-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0]
[0.0, 0.0, -0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Total time =17.113s
——————————————————————————————————————————————————
0.0   0.0    false
0.141   6.800000000000001    true
0.735   2.0    false
1.149   2.0    true
1.331   1.7    false
1.602   1.8    false
1.753   1.8    false
1.893   1.8    false
2.0   1.8    false
2.154   1.8    false
2.241   1.8    false
2.32   1.8    false
2.369   1.8    false
2.422   1.8    false
2.451   1.8    false
2.532   1.8    false
2.637   1.8    false
2.641   1.8    false
2.647   1.8    false
2.676   1.8    false
2.69   1.8    false
2.722   1.8    false
2.735   1.8    false
2.905   1.8    false
3.018   1.8    false
3.171   1.8    false
3.177   1.8    false
3.179   1.8    false
3.19   1.8    false
3.206   1.8    false
3.326   1.8    false
3.472   1.8    false
3.481   1.8    false
3.496   1.8    false
3.523   1.8    false
3.603   1.9000000000000001    false
3.656   1.9000000000000001    false
3.667   1.8    false
3.672   1.8    false
3.674   1.8    false
3.676   1.8    false
3.679   1.8    false
3.682   1.8    false
3.721   1.8    false
3.763   1.8    false
3.8   1.8    false
3.838   1.8    false
3.882   1.8    false
3.911   1.8    false
3.952   1.8    false
3.992   1.8    false
4.033   1.8    false
4.075   1.8    false
4.113   1.8    false
4.199   1.8    false
4.237   1.8    false
4.309   1.8    true
4.48   1.7    false
4.641   1.7    false
4.724   1.7    false
4.832   1.7    false
4.958   1.7    false
5.117   1.7    false
5.272   1.7    false
5.416   1.7    false
5.583   1.7    false
5.715   1.7    false
5.85   1.7    false
5.992   1.7    false
6.136   1.7    false
6.27   1.7    false
6.388   1.7    false
6.521   1.7    false
6.672   1.7    false
6.822   1.7    false
6.992   1.7    false
7.264   1.7    false
7.489   1.7    false
7.703   1.7    false
7.867   1.7    false
8.047   1.7    false
8.231   1.7    false
8.407   1.7    false
8.611   1.7    false
8.802   1.7    false
9.0   1.7    false
9.171   1.7    false
9.366   1.7    false
9.557   1.7    false
9.745   1.7    false
9.928   1.7    false
10.118   1.7    false
10.278   1.7    false
10.422   1.7    false
10.616   1.7    false
10.785   1.7    false
10.943   1.7    false
11.09   1.7    false
11.222   1.7    false
11.405   1.7    false
11.577   1.7    false
11.746   1.7    false
11.919   1.7    false
12.102   1.7    false
12.222   1.7    false
12.35   1.7    false
12.474   1.7    false
12.591   1.7    false
12.717   1.7    false
12.83   1.7    false
12.951   1.7    false
13.068   1.7    false
13.182   1.7    false
13.292   1.7    false
13.404   1.7    false
13.525   1.7    false
13.636   1.7    false
13.772   1.7    false
13.908   1.7    false
14.034   1.7    false
14.166   1.7    false
14.31   1.7    false
14.441   1.7    false
14.582   1.7    false
14.713   1.7    false
14.845   1.7    false
14.96   1.7    false
15.134   1.7    false
15.271   1.7    false
15.405   1.7    false
15.536   1.7    false
15.655   1.7    false
15.764   1.7    false
15.876   1.7    false
15.99   1.7    false
16.117   1.7    false
16.223   1.7    false
16.328   1.7    false
16.446   1.7    false
16.569   1.7    false
16.692   1.7    false
16.824   1.7    false
16.942   1.7    true
